var BattleGeneral;BattleGeneral=cc.Layer.extend({_cbEventListenerFieldMng:null,_cbEventListenerUIMng:null,_shakeSkillSlot:null,_shakeSkillSlot2:null,_skillCooltimeProc:null,_skillCooltimeProc2:null,_skillTeamCooltimeProc:null,_skillTeamCooltimeProc2:null,_skillCooltimeProc_V2:null,_skillCooltimeProc_V2_2:null,_updateLifeBar:null,_updateLifeBar2:null,_skillEnable:null,_skillEnable2:null,_updateDurabilityEffectList:null,_updateDurabilityEffectList2:null,_addBattleFxNode:null,_addSkillMessage:null,_addSkillMessage_LR:null,_req_team_cooltime:null,m_game_type:null,m_team_type:null,m_cur_state:null,m_prev_state:null,m_battle_general:database.BattleGeneral,m_general_limit_ability:null,m_origin_pos:null,m_cur_pos:null,_findEnemyTarget:null,m_attack_delta_time:0,m_target_enemys:[],m_skill_target_enemys:[],m_sub_skill_targets:[],m_Tick_skill_targets:[],m_life_point:0,m_info_bar:null,m_hitting_enemys:[],m_fx_used:[],m_skill_sounds:[],m_used_effects:null,m_recycled_effects:null,m_my_team:null,m_is_drop_item_check:!1,m_is_death_animation_start:!1,m_map_damage:null,m_map_skill_damage:null,m_map_cure:null,m_durability_effects:null,m_revision_pos:null,m_is_auto_skill:!1,m_center_field:null,m_is_first_enable_skill_cooltime:!1,m_normal_attack_count:0,m_cur_time_scale:1,m_attack_position_index:0,m_is_first_attack:!1,m_is_friend_general:!1,m_hit_duration:0,m_hitted_duration:!1,m_death_ready_delta_time:0,dash_offset:null,dash_target:null,m_is_general_pause:!1,m_is_ex_reordering:!1,last_use_effect:null,is_reserved_backcourt:!1,m_focus_state:null,m_debug_list:null,m_current_skill_charge_count:0,m_dash_delta:0,m_skill_charge_buff_list:[],m_life_point_label:null,m_is_sandbag:!1,_raid_boss_skill_cooltime:null,_mussang_boss_skill_cooltime:null,dead_heal_queue:null,m_is_reborn_enable:!1,dead_heal_delta_time:0,m_sk:null,m_reborn_onetime_effect:null,m_cur_action:ActionType.Basic,m_skin_id:0,m_bone_id:0,m_skin_path:null,m_bone_pat:null,m_asyncLoadCallback:null,m_transEndCallback:null,m_texture_list:null,m_texture_loaded_count:0,is_loaded:!1,m_common_fx_parts:null,m_common_fx_used:null,m_aura:null,m_aura2:null,m_boss:null,m_leader:null,m_is_trans:!1,m_is_remove_all_effect:!1,m_check_idle2:!1,m_check_prepare2:!1,m_current_time_scale:1,m_exec_freeze_gnrl_group:0,m_Action_Loop_Off:!1,m_Action_Loop:!1,m_target_ours:[],m_ordering_offset:0,m_shader_type:TransShaderType.None,m_trans_cb_func:null,m_trans_cg_func_num:0,m_retrun_state:BattleGeneral_GeneralState.None,m_return_type:ActionType.Basic,m_find_sub_skill_type_return:BuffSkillType.None,m_temp_groupNum:0,sd_img:null,gen_ver:0,cache_raid_info:null,cache_hp_rate:0,m_reborn_base_gnrl:null,m_is_self_reborn_enable:!1,m_self_reborn_onetime_effect:null,m_self_reborn_durability_effect:null,m_equipments:null,m_durability_mng:null,m_onetime_mng:null,m_play_skill:!1,m_Skill_DeltaTime:0,m_Is_Move_Skill_DeltaTime:!0,m_Skill_DeltaTime_Not_Init:0,m_Is_Charge_Skill:!0,m_Is_durationBuff_Sec_30:!0,m_Is_durationBuff_Sec_15:!0,m_Is_Use_Wave_Begin_Onetime_Effect:!1,m_Is_OneTimeBuff_Sec_10:!1,m_Is_OneTimeBuff_Sec_15:!1,m_Voice_priority_value:0,m_Voice_File_Path:"",Is_Play_Charge_Skill_Voice:!1,Is_Play_Voice_20_sec:!1,m_use_voice_type:[],m_use_skill_hp_rate_75:!1,m_use_skill_hp_rate_50:!1,m_use_skill_hp_rate_25:!1,_getIconCnt:null,m_use_greatwall_rebon_skil:!1,m_log_temp:null,ctor:function(ver){this.m_durability_effects=[],this.m_reborn_base_gnrl=new net.User_General_Key,this._super(),this.init(),this.gen_ver=ver},init:function(){this._shakeSkillSlot2=null,this._skillCooltimeProc2=null,this._skillTeamCooltimeProc2=null,this._skillCooltimeProc_V2_2=null,this._updateLifeBar2=null,this._skillEnable2=null,this._updateDurabilityEffectList2=null,this._addSkillMessage_LR=null,this.m_log_temp=null,this.m_battle_general=database.BattleGeneral,this.m_general_limit_ability=null,this.m_origin_pos=null,this.m_skill_target_enemys=[],this.m_hitting_enemys=[],this.m_skill_sounds=[],this.m_used_effects=null,this.m_recycled_effects=null,this.dash_offset=null,this.last_use_effect=null,this.m_debug_list=[],this.m_ordering_offset=0,this.m_shader_type=TransShaderType.None,this.m_trans_cb_func=null,this.m_trans_cg_func_num=0,this.m_retrun_state=BattleGeneral_GeneralState.None,this.m_return_type=ActionType.Basic,this.m_find_sub_skill_type_return=BuffSkillType.None,this.m_temp_groupNum=0,this.gen_ver=0,this.cache_raid_info=null,this.cache_hp_rate=0,this.sd_img=[],this.m_team_type=BattleGeneral_TeamType.Left,this.m_cur_state=BattleGeneral_GeneralState.Idle,this.m_prev_state=BattleGeneral_GeneralState.Idle,this.m_attack_delta_time=0,this._findEnemyTarget=null,this.m_life_point=0,this.m_info_bar=null,this._cbEventListenerFieldMng=null,this.m_my_team=null,this._shakeSkillSlot=null,this._skillEnable=null,this.m_is_drop_item_check=!1,this.m_is_death_animation_start=!1,this.m_revision_pos=ZERO(),this._cbEventListenerUIMng=null,this.m_is_auto_skill=!1,this.m_center_field=ZERO(),this.m_is_first_enable_skill_cooltime=!1,this.m_normal_attack_count=0,this.m_cur_time_scale=1,this._addBattleFxNode=null,this.m_attack_position_index=0,this.m_is_first_attack=!1,this.m_is_friend_general=!1,this.m_hit_duration=0,this.m_hitted_duration=!1,this.m_cur_pos=ZERO(),this.m_death_ready_delta_time=0,this.dash_target=null,this.m_is_general_pause=!1,this._addSkillMessage=null,this._req_team_cooltime=null,this._skillTeamCooltimeProc=null,this.is_reserved_backcourt=!1,this.m_is_ex_reordering=!1,this.m_focus_state=FOCUS_STATE.NONE,this._updateLifeBar=null,this._updateDurabilityEffectList=null,this._skillCooltimeProc_V2=null,this.m_current_skill_charge_count=0,this.m_life_point_label=null,this.m_dash_delta=0,this.m_is_sandbag=!1,this.dead_heal_delta_time=0,((this._raid_boss_skill_cooltime=this)._mussang_boss_skill_cooltime=this).m_durability_effects=[],this.m_sub_skill_targets=[],this.m_Tick_skill_targets=[],this.m_target_ours=[],this.m_sk=null,this.m_target_enemys=[],this.m_map_cure=new Map,this.m_cur_action=ActionType.Basic,this.m_skin_id=0,this.m_bone_id=0,this.m_skin_path=null,this.m_bone_pat=null,this.m_asyncLoadCallback=null,this.m_transEndCallback=null,this.m_texture_list=null,this.m_texture_loaded_count=0,this.is_loaded=!1,this.m_common_fx_parts=[],this.m_common_fx_used=[],this.m_aura=null,this.m_aura2=null,this.m_boss=null,this.m_leader=null,this.m_is_trans=!1,this.m_is_remove_all_effect=!1,this.m_check_idle2=!1,this.m_check_prepare2=!1,this.m_current_time_scale=1,this.m_exec_freeze_gnrl_group=0,this.m_fx_used=[],this.m_map_damage=new Map,this.m_map_skill_damage=new Map,this.m_skill_charge_buff_list=[],this.m_game_type=BattleContext._getInstance().getGameType(),this.dead_heal_queue=[],this.dead_heal_delta_time=0,this.m_is_reborn_enable=!1,this.m_reborn_onetime_effect=null,this.m_is_self_reborn_enable=!1,this.m_self_reborn_onetime_effect=null,this.m_self_reborn_durability_effect=new database.BattleDurabilityEffect,this.m_Is_Move_Skill_DeltaTime=!0,this.m_Skill_DeltaTime_Not_Init=0,this.m_Is_Charge_Skill=!0,this.m_Is_durationBuff_Sec_30=!0,this.m_Is_durationBuff_Sec_15=!0,this.m_Is_Use_Wave_Begin_Onetime_Effect=!1,this.m_Voice_priority_value=9999,this.m_Voice_File_Path="",this.Is_Play_Charge_Skill_Voice=!1,this.Is_Play_Voice_20_sec=!1,this.m_use_voice_type=[],this._getIconCnt=null,this.m_use_skill_hp_rate_75=!1,this.m_use_skill_hp_rate_50=!1,this.m_use_skill_hp_rate_25=!1},onExit:function(){if(this._super(),!BATTLE_TO_SHOP){this.removeAllChildrenWithCleanup(!0);for(var i=0;i<this.sd_img.length;i++)DEF_GENERAL_CACHE.push(this.sd_img[i]);this.sd_img=null,delete this.sd_img,this.removeChild(this.m_sk),this.m_sk._skeleton.data.animations=[],this.m_sk._skeleton.data.bones=[],this.m_sk._skeleton.data.events=[],this.m_sk._skeleton.data.slots=[],this.m_sk._skeleton.data.skins=[],this.m_sk._skeleton.data=null,this.m_sk.removeAllChildrenWithCleanup(!0),this.m_sk._spineComplete=null;for(var idx=0;idx<this.m_common_fx_used.length;idx++)null!=this.m_common_fx_used[idx]&&(this.removeChild(this.m_common_fx_used[idx]),this.m_common_fx_used[idx].fxClear());for(idx=0;idx<this.m_fx_used.length;idx++)null!=this.m_fx_used[idx]&&(this.removeChild(this.m_fx_used[idx]),this.m_fx_used[idx].fxClear());this.m_fx_used=null,delete this.m_fx_used,this.m_sk.setStartListener=null,this.m_sk.setEndListener=null,this.m_sk.setCompleteListener=null,(this.m_sk.setEventListener=null)!=this.m_boss&&(this.removeChild(this.m_boss),this.m_boss.fxClear()),this.m_boss=null,delete this.m_boss,null!=this.m_leader&&(this.removeChild(this.m_leader),this.m_leader.fxClear()),this.m_leader=null,delete this.m_leader,this.m_battle_general.fx_parts=[],this.m_battle_general.active_skill=[],this._cbEventListenerFieldMng=null,this._cbEventListenerUIMng=null,this._shakeSkillSlot=null,this._shakeSkillSlot2=null,this._skillCooltimeProc=null,this._skillCooltimeProc2=null,this._skillTeamCooltimeProc=null,this._skillTeamCooltimeProc2=null,this._skillCooltimeProc_V2=null,this._skillCooltimeProc_V2_2=null,this._updateLifeBar=null,this._updateLifeBar2=null,this._skillEnable=null,this._skillEnable2=null,this._updateDurabilityEffectList=null,this._updateDurabilityEffectList2=null,this._addBattleFxNode=null,this._addSkillMessage=null,this._addSkillMessage_LR=null,this._req_team_cooltime=null,this.m_game_type=null,this.m_team_type=null,this.m_cur_state=null,this.m_prev_state=null,this.m_battle_general=null,this.m_general_limit_ability=null,this.m_origin_pos=null,this.m_cur_pos=null,this._findEnemyTarget=null,this.m_target_enemys=null,this.m_skill_target_enemys=null,this.m_sub_skill_targets=null,this.m_Tick_skill_targets=null,this.m_info_bar=null,this.m_hitting_enemys=null,this.m_skill_sounds=null,this.m_used_effects=null,this.m_recycled_effects=null,this.m_my_team=null,this.m_map_damage=null,this.m_map_skill_damage=null,this.m_map_cure=null,this.m_durability_effects=null,this.m_revision_pos=null,this.m_center_field=null,this.dash_offset=null,this.dash_target=null,this.last_use_effect=null,this.m_focus_state=null,this.m_debug_list=null,this.m_skill_charge_buff_list=null,this.m_life_point_label=null,this.dead_heal_queue=null,this.m_sk=null,this.m_reborn_onetime_effect=null,this.m_cur_action=null,this.m_skin_path=null,this.m_bone_pat=null,this.m_asyncLoadCallback=null,this.m_transEndCallback=null,this.m_texture_list=null,this.m_common_fx_parts=null,this.m_common_fx_used=null,this.m_aura=null,this.m_aura2=null,this.m_target_ours=null,this.m_shader_type=null,this.m_trans_cb_func=null,this.cache_raid_info=null,this.m_reborn_base_gnrl=null,this.m_self_reborn_onetime_effect=null,this.m_self_reborn_durability_effect=null,this.m_equipments=null,this.m_durability_mng=null,this.m_onetime_mng=null,this._raid_boss_skill_cooltime=null,delete this._raid_boss_skill_cooltime,this._mussang_boss_skill_cooltime=null,delete this._mussang_boss_skill_cooltime,delete this._cbEventListenerFieldMng,delete this._cbEventListenerUIMng,delete this._shakeSkillSlot,delete this._shakeSkillSlot2,delete this._skillCooltimeProc,delete this._skillCooltimeProc2,delete this._skillTeamCooltimeProc,delete this._skillTeamCooltimeProc2,delete this._skillCooltimeProc_V2,delete this._skillCooltimeProc_V2_2,delete this._updateLifeBar,delete this._updateLifeBar2,delete this._skillEnable,delete this._skillEnable2,delete this._updateDurabilityEffectList,delete this._updateDurabilityEffectList2,delete this._addBattleFxNode,delete this._addSkillMessage,delete this._addSkillMessage_LR,delete this._req_team_cooltime,delete this.m_game_type,delete this.m_team_type,delete this.m_cur_state,delete this.m_prev_state,delete this.m_battle_general,delete this.m_general_limit_ability,delete this.m_origin_pos,delete this.m_cur_pos,delete this._findEnemyTarget,delete this.m_attack_delta_time,delete this.m_target_enemys,delete this.m_skill_target_enemys,delete this.m_sub_skill_targets,delete this.m_Tick_skill_targets,delete this.m_life_point,delete this.m_info_bar,delete this.m_hitting_enemys,delete this.m_skill_sounds,delete this.m_used_effects,delete this.m_recycled_effects,delete this.m_my_team,delete this.m_is_drop_item_check,delete this.m_is_death_animation_start,delete this.m_map_damage,delete this.m_map_skill_damage,delete this.m_map_cure,delete this.m_durability_effects,delete this.m_revision_pos,delete this.m_is_auto_skill,delete this.m_center_field,delete this.m_is_first_enable_skill_cooltime,delete this.m_normal_attack_count,delete this.m_cur_time_scale,delete this.m_attack_position_index,delete this.m_is_first_attack,delete this.m_is_friend_general,delete this.m_hit_duration,delete this.m_hitted_duration,delete this.m_death_ready_delta_time,delete this.dash_offset,delete this.dash_target,delete this.m_is_general_pause,delete this.m_is_ex_reordering,delete this.last_use_effect,delete this.is_reserved_backcourt,delete this.m_focus_state,delete this.m_debug_list,delete this.m_current_skill_charge_count,delete this.m_dash_delta,delete this.m_skill_charge_buff_list,delete this.m_life_point_label,delete this.m_is_sandbag,delete this.dead_heal_queue,delete this.m_is_reborn_enable,delete this.dead_heal_delta_time,delete this.m_sk,delete this.m_reborn_onetime_effect,delete this.m_cur_action,delete this.m_skin_id,delete this.m_bone_id,delete this.m_skin_path,delete this.m_bone_pat,delete this.m_asyncLoadCallback,delete this.m_transEndCallback,delete this.m_texture_list,delete this.m_texture_loaded_count,delete this.is_loaded,delete this.m_common_fx_parts,delete this.m_common_fx_used,delete this.m_aura,delete this.m_aura2,delete this.m_is_trans,delete this.m_is_remove_all_effect,delete this.m_check_idle2,delete this.m_check_prepare2,delete this.m_current_time_scale,delete this.m_exec_freeze_gnrl_group,delete this.m_target_ours,delete this.m_ordering_offset,delete this.m_shader_type,delete this.m_trans_cb_func,delete this.m_trans_cg_func_num,delete this.m_retrun_state,delete this.m_return_type,delete this.m_find_sub_skill_type_return,delete this.m_temp_groupNum,delete this.gen_ver,delete this.cache_raid_info,delete this.cache_hp_rate,delete this.m_reborn_base_gnrl,delete this.m_is_self_reborn_enable,delete this.m_self_reborn_onetime_effect,delete this.m_self_reborn_durability_effect,delete this.m_equipments,delete this.m_durability_mng,delete this.m_onetime_mng,delete this.m_play_skill,cc.log("BattleGeneral Eit")}},getPlaySkill:function(){return this.m_play_skill},setPlaySkill:function(skillyn){this.m_play_skill=skillyn},getArmServiceType:function(){return this.m_battle_general.general.arm_service_type},getElementType:function(){return this.m_battle_general.general.element_type},getCurrentState:function(){return this.m_cur_state},getTeamType:function(){return this.m_team_type},getGeneral:function(){return this.m_battle_general},getBattlePosition:function(){return this.m_battle_general.position},setFriend:function(isFriend){this.m_is_friend_general=isFriend},IsFriend:function(){return this.m_is_friend_general},IsExReordering:function(){return this.m_is_ex_reordering},getSkillTargetEnemys:function(){return this.m_skill_target_enemys},getMyTeam:function(){return this.m_my_team},setMyTeamManager:function(mng){var mng_team=mng;this.m_my_team=mng_team,mng_team=null},getAttackPosition:function(){return this.m_attack_position_index},getGeneralID:function(){return this.m_battle_general.general.gnrl_id},setSandbag:function(is_sandbag){this.m_is_sandbag=is_sandbag},IsSandbag:function(){return this.m_is_sandbag},setTeamType:function(type){this.m_team_type=type},lazyInitialize:function(battle_gnrl_lazy,team_type){var battle_gnrl=battle_gnrl_lazy;this.m_battle_general=$.extend({},battle_gnrl),0<this.m_battle_general.limit_step_id&&(this.m_general_limit_ability=MasterManager.getInstance().get_GeneralLimitAbility(this.m_battle_general.limit_step_id,this.m_battle_general.general.rare_type)),this.setTeamType(team_type);var gt=BattleContext._getInstance().getGameType(),gnrl=MasterManager.getInstance().get_General(this.m_battle_general.general.bone_id),json="",atlas="",scale=.32,skin_id=this.m_battle_general.general.skin_id;scale=team_type==BattleGeneral_TeamType.Right?gt==db.BattleGameType.DailyDungeon&&this.m_battle_general.is_zoom?.55:gt==db.BattleGameType.EventDungeon&&this.m_battle_general.is_zoom&&this.m_battle_general.is_cutin_npc?.55:gt==db.BattleGameType.EventRaidDungeon&&this.m_battle_general.is_zoom?.48:gt==db.BattleGameType.Mission&&1002==this.m_battle_general.general.gnrl_group?.48:.32:(this.m_battle_general.general.skin_id!=this.m_battle_general.general.bone_id&&0!=this.m_battle_general.display_class&&(skin_id=this.m_battle_general.general.bone_id+1e3*(this.m_battle_general.display_class-1)),.32);var json_group_num=gnrl.gnrl_group;this.m_temp_groupNum=json_group_num;var sd_files=SDGeneralName[json_group_num],char_eff_files=SDEffectName[json_group_num],char_eff_pngs=SDEffectPngName[json_group_num],skill_cut_is=1;59<=json_group_num&&json_group_num<=200?skill_cut_is=-1:1001!=json_group_num&&1002!=json_group_num||(skill_cut_is=-1);var char_eff_is=1;if((59<=json_group_num&&json_group_num<=76||78<=json_group_num&&json_group_num<=200)&&(char_eff_is=-1),-1!=char_eff_is){for(var idx=0;idx<char_eff_files.length;idx++){var sd_path=RES_CDN_DEFULT+cmString("gnrl_%03d/effect/%s.atlas",json_group_num,char_eff_files[idx]),sd_path2=RES_CDN_DEFULT+cmString("gnrl_%03d/effect/%s.json",json_group_num,char_eff_files[idx]);-1==this.sd_img.indexOf(sd_path)&&this.sd_img.push(sd_path),-1==this.sd_img.indexOf(sd_path2)&&this.sd_img.push(sd_path2),sd_path2=sd_path=null}for(idx=0;idx<char_eff_pngs.length;idx++){var sd_path3=RES_CDN_DEFULT+cmString("gnrl_%03d/effect/%s.png",json_group_num,char_eff_pngs[idx]);-1==this.sd_img.indexOf(sd_path3)&&this.sd_img.push(sd_path3),sd_path3=null}}if(-1!=skill_cut_is){var sd_path4=RES_CDN_DEFULT+cmString("menu_skill_cut/%02d.png",json_group_num);-1==this.sd_img.indexOf(sd_path4)&&this.sd_img.push(sd_path4),sd_path4=null}var sd_path5=RES_CDN_DEFULT+cmString("gnrl_%03d/sd/%s.json",json_group_num,this.m_battle_general.general.bone_id);-1==this.sd_img.indexOf(sd_path5)&&this.sd_img.push(sd_path5);var sd_path6=RES_CDN_DEFULT+cmString("gnrl_%03d/sd/%s.atlas",json_group_num,skin_id);-1==this.sd_img.indexOf(sd_path6)&&this.sd_img.push(sd_path6),sd_path6=sd_path5=null;for(idx=0;idx<sd_files.length;idx++){var sd_path_file=RES_CDN_DEFULT+cmString("gnrl_%03d/sd/%s.png",json_group_num,sd_files[idx]);-1==this.sd_img.indexOf(sd_path_file)&&this.sd_img.push(sd_path_file),sd_path_file=null}resourceLoader(this.sd_img,function(){json=RES_CDN_DEFULT+cmString("gnrl_%03d/sd/%s.json",json_group_num,this.m_battle_general.general.bone_id),atlas=RES_CDN_DEFULT+cmString("gnrl_%03d/sd/%s.atlas",json_group_num,skin_id);try{this.m_sk=new sp.SkeletonAnimation(json,atlas,scale),null!=this.m_sk&&(this.initMix(),this.is_loaded=!0,this.loadedSkeleton(),this.addChild(this.m_sk))}catch(e){cc.log(e),MainObserver.getInstance().postNotification(NOTIFY_NETWORK_ERROR)}}.bind(this)),battle_gnrl=null},setSpineSkin:function(){var display_class;0==this.gen_ver||2==this.gen_ver?(0!=this.m_battle_general.display_class?3<(display_class=this.m_battle_general.display_class)&&(display_class=3):3<(display_class=this.m_battle_general.general.gnrl_class)&&(display_class=3),this.m_sk.setSkin(cmString("%d",display_class))):this.m_sk.setSkin(cmString("%d",this.getBattleGeneral().general.element_type))},getStateInfo:function(){var raid_info={},rate=1e4*this.getCurrentLifePoint()/this.getMaxHealthPoint();rate==this.cache_hp_rate?raid_info=this.cache_raid_info:(raid_info=MasterTable.getInstance().get_RaidBossStateInfo(BattleContext._getInstance().getRaidDungeonData().data.raid_boss_info_idx,rate),this.cache_raid_info=raid_info,this.cache_hp_rate=rate);try{return raid_info}finally{raid_info=null}},loadedSkeleton:function(){this.m_team_type==BattleGeneral_TeamType.Left&&(this.m_sk._skeleton.flipX=!0),this.m_attack_delta_time=0;try{this.setSpineSkin()}catch(e){this.m_sk.setSkin("default")}this.m_sk.setStartListener(this.spineStartListener.bind(this)),this.m_sk.setEndListener(this.spineEndListener.bind(this)),this.m_sk.setCompleteListener(this.spineCompleteListener.bind(this)),this.m_sk.setEventListener(this.spineEventListener.bind(this));var bone=(this.m_transEndCallback=this).m_sk.findBone("bar"),tempType=!0;tempType=this.m_team_type==BattleGeneral_TeamType.Left,this.m_info_bar=new BattleGeneralInfoBar.prototype.create(this,tempType),(this.m_info_bar._lifeBarAdjustEnd=this).m_info_bar.setPosition(0,bone.y+15),this.m_info_bar.setVisible(!1),this.addChild(this.m_info_bar),this.m_life_point_label=cmLabel.getLabel("",LABEL_FONT_INDEX.FONT_143),this.m_life_point_label.setAnchorPoint(ANCHOR_MIDDLE_TOP()),this.m_life_point_label.setPosition(0,bone.y-5),this.addChild(this.m_life_point_label),this.m_life_point_label.setVisible(!1),BattleContext._getInstance().getGameType()==db.BattleGameType.Prologue&&this.m_info_bar.setVisible(!1),this.m_battle_general.fx_parts=new Array,BattleService.getInstance().getMasterFxPartList(this.m_battle_general.general.gnrl_group,this.m_battle_general.general.gnrl_type,this.m_battle_general.fx_parts),this.initNormalAttackCount();for(var part=null,part1=null,part2=null,i=0;i<10;i++)if(part=null,(part=new database.BattleFxPart).fx_atlas=RES_CDN_DEFULT+"effect/Common_fx_hit.atlas",part.fx_bone=RES_CDN_DEFULT+"effect/Common_fx_hit.json",part.fx_pngs.push(RES_CDN_DEFULT+"effect/Common_fx_hit.png"),part.fx_id="fx_hit",part.fx_layer=database.FxLayerType.FxLayer_PersnalSkillHitLayer,part.hit_point=FX_POS_CENTER,part.is_loop=!1,this.m_battle_general.fx_parts.push(part),part1=part=null,(part1=new database.BattleFxPart).fx_atlas=RES_CDN_DEFULT+"effect/Common_fx_critical_hit.atlas",part1.fx_bone=RES_CDN_DEFULT+"effect/Common_fx_critical_hit.json",part1.fx_pngs.push(RES_CDN_DEFULT+"effect/Common_fx_critical_hit.png"),part1.fx_id="fx_critical_hit",part1.fx_layer=database.FxLayerType.FxLayer_PersnalSkillHitLayer,part1.hit_point=FX_POS_CENTER,part1.is_loop=!1,this.m_battle_general.fx_parts.push(part1),part1=null,this.m_game_type==db.BattleGameType.DailyDungeon){var m=MasterTable.getInstance(),daily_dungeon=BattleContext._getInstance().getDailyDungeonData(),reward_list=m.get_DailyDungeonBonusItemList(daily_dungeon.daily_dungeon.daily_dungeon_bonus_idx,1);if(0<reward_list.length){var bonus=reward_list[0];part2=(bonus.bonus_type==BONUS_TYPE_GOLD?(part2=null,(part2=new database.BattleFxPart).fx_atlas=RES_CDN_DEFULT+"effect/Daily_dungeon_hit_coin.atlas",part2.fx_bone=RES_CDN_DEFULT+"effect/Daily_dungeon_hit_coin.json",part2.fx_pngs.push(RES_CDN_DEFULT+"effect/Daily_dungeon_hit_coin.png")):bonus.bonus_type==BONUS_TYPE_HEART?(part2=null,(part2=new database.BattleFxPart).fx_atlas=RES_CDN_DEFULT+"effect/Daily_dungeon_hit_heart.atlas",part2.fx_bone=RES_CDN_DEFULT+"effect/Daily_dungeon_hit_heart.json",part2.fx_pngs.push(RES_CDN_DEFULT+"effect/Daily_dungeon_hit_heart.png")):(bonus.bonus_type,BONUS_TYPE_USER_EXP,part2=null,(part2=new database.BattleFxPart).fx_atlas=RES_CDN_DEFULT+"effect/Daily_dungeon_hit_exp.atlas",part2.fx_bone=RES_CDN_DEFULT+"effect/Daily_dungeon_hit_exp.json",part2.fx_pngs.push(RES_CDN_DEFULT+"effect/Daily_dungeon_hit_exp.png")),part2.fx_id="fx_hit_daily",part2.fx_layer=database.FxLayerType.FxLayer_PersnalSkillHitLayer,part2.hit_point=FX_POS_CENTER,part2.is_loop=!1,this.m_battle_general.fx_parts.push(part2),null),bonus=null}else part2=null,(part2=new database.BattleFxPart).fx_atlas=RES_CDN_DEFULT+"effect/Daily_dungeon_hit_coin.atlas",part2.fx_bone=RES_CDN_DEFULT+"effect/Daily_dungeon_hit_coin.json",part2.fx_pngs.push(RES_CDN_DEFULT+"effect/Daily_dungeon_hit_coin.png"),part2.fx_id="fx_hit_daily",part2.fx_layer=database.FxLayerType.FxLayer_PersnalSkillHitLayer,part2.hit_point=FX_POS_CENTER,part2.is_loop=!1,this.m_battle_general.fx_parts.push(part2),part2=null;reward_list=daily_dungeon=m=null}this.playAction(ActionType.Basic),this.initCommonFx(),this.m_battle_general.is_zoom&&(this.m_team_type==BattleGeneral_TeamType.Left?this.onLeader():this.m_team_type==BattleGeneral_TeamType.Right?this.m_game_type==db.BattleGameType.DailyDungeon&&this.m_battle_general.is_zoom?this.onBoss(DAILY_BOSS_BOTTOM_SCALE):this.m_game_type==db.BattleGameType.EventDungeon&&this.m_battle_general.is_zoom&&this.m_battle_general.is_cutin_npc?this.onBoss(DAILY_BOSS_BOTTOM_SCALE):this.onBoss(1):this.onBoss(1)),this.m_normal_attack_count=this.m_battle_general.normal_hit_count,bone=null},initNormalAttackCount:function(){this.m_battle_general.normal_hit_count=2},checkElementAdvanceTargetDamage:function(base_dmg){for(var base=base_dmg,point=0,element_type=base.getElementType(),target_elem_type=this.getElementType(),element_attack_buff_rate=ELEMENT_ATTACK_BUF_RATE,element_attack_debuff_rate=ELEMENT_ATTACK_BUF_RATE,dur_length=this.m_durability_effects.length,idx=0;idx<dur_length;idx++)this.m_durability_effects[idx].trans_type==database.BattleEffectTrans.Advenced_Element_Attack_Damage_Inc?element_attack_buff_rate+=this.m_durability_effects[idx].value:this.m_durability_effects[idx].trans_type==database.BattleEffectTrans.Weak_Element_Attack_Damage_Dec&&(element_attack_debuff_rate+=this.m_durability_effects[idx].value);switch(100<=element_attack_debuff_rate&&(element_attack_debuff_rate=99),element_type){case ELEMENT_TYPE_FIRE:target_elem_type==ELEMENT_TYPE_WATER?point=-element_attack_debuff_rate:target_elem_type==ELEMENT_TYPE_WIND&&(point=element_attack_buff_rate);break;case ELEMENT_TYPE_WATER:target_elem_type==ELEMENT_TYPE_FIRE?point=element_attack_buff_rate:target_elem_type==ELEMENT_TYPE_WIND&&(point=-element_attack_debuff_rate);break;case ELEMENT_TYPE_WIND:target_elem_type==ELEMENT_TYPE_FIRE?point=-element_attack_debuff_rate:target_elem_type==ELEMENT_TYPE_WATER&&(point=element_attack_buff_rate);break;case ELEMENT_TYPE_LIGHT:target_elem_type==ELEMENT_TYPE_DARK&&(point=element_attack_buff_rate);break;case ELEMENT_TYPE_DARK:target_elem_type==ELEMENT_TYPE_LIGHT&&(point=element_attack_buff_rate);break;case ELEMENT_TYPE_NONE:}var dur_list=[];base.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_All_Attacks,dur_list);for(var dur_list_length=dur_list.length,dur_list_idx=0;dur_list_idx<dur_list_length;dur_list_idx++){var dur=$.extend({},dur_list[dur_list_idx]);dur.trans_type==database.BattleEffectTrans.Attack_Favorable_Element&&(point=element_attack_buff_rate),dur=null}var base_element_adv_inc=base.getGeneral().adv_attk_damage_inc,target_element_adv_dec=this.m_battle_general.adv_def_damage_dec;return base=null,point+=(base_element_adv_inc-target_element_adv_dec)/100},checkGuardRateAndValue:function(guard_rate){var guard_invoke_buf=this.m_my_team.getLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Guard_Invoke_Rate,this.m_battle_general);(guard_invoke_buf+=this.m_my_team.getSpecialLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Guard_Invoke_Rate,this.m_battle_general),guard_invoke_buf+=this.durabilityBufDebufPoint(database.BattleChainStatType.ChainStatType_Guard_Invoke_Rate),guard_invoke_buf+=this.getEquipmentSetGroupBuff(database.BattleChainStatType.ChainStatType_Guard_Invoke_Rate),guard_invoke_buf+=this.TransPassiveOneTimeEffectBufPoint(database.BattleChainStatType.ChainStatType_Guard_Invoke_Rate,database.BattleInvokeType.BattleInvokeType_Always),guard_invoke_buf+=this.m_my_team.getPassiveSkillBufPoint(database.BattleChainStatType.ChainStatType_Guard_Invoke_Rate,this.m_battle_general),0<this.m_battle_general.limit_step_id&&(guard_invoke_buf*=this.m_general_limit_ability.guard_rate),4==this.m_battle_general.general.gnrl_class)&&(guard_invoke_buf+=MasterManager.getInstance().get_GeneralRebirthStatInfo(this.m_battle_general.general.gnrl_group).guard_rate);return this.m_battle_general.general.guard_rate+guard_invoke_buf},checkGuardRateAndValue2:function(guard_power){var guard_defence_rate_buf=this.m_my_team.getLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Guard_Defence_Rate,this.m_battle_general);(guard_defence_rate_buf+=this.m_my_team.getSpecialLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Guard_Defence_Rate,this.m_battle_general),guard_defence_rate_buf+=this.durabilityBufDebufPoint(database.BattleChainStatType.ChainStatType_Guard_Defence_Rate),guard_defence_rate_buf+=this.getEquipmentSetGroupBuff(database.BattleChainStatType.ChainStatType_Guard_Defence_Rate),guard_defence_rate_buf+=this.TransPassiveOneTimeEffectBufPoint(database.BattleChainStatType.ChainStatType_Guard_Defence_Rate,database.BattleInvokeType.BattleInvokeType_All_Hitted),guard_defence_rate_buf+=this.m_my_team.getPassiveSkillBufPoint(database.BattleChainStatType.ChainStatType_Guard_Defence_Rate,this.m_battle_general),0<this.m_battle_general.limit_step_id&&(guard_defence_rate_buf*=this.m_general_limit_ability.guard_decrease),4==this.m_battle_general.general.gnrl_class)&&(guard_defence_rate_buf+=MasterManager.getInstance().get_GeneralRebirthStatInfo(this.m_battle_general.general.gnrl_group).guard_decrease);return(guard_power=this.m_battle_general.general.guard_value+guard_defence_rate_buf)<0&&(guard_power=0),guard_power},getCalcDamage:function(baseCalc,damageCalc,logCalc,use_guard){var base=baseCalc,damage=damageCalc,log=logCalc,damage_point=damage.damage,damage_type=damage.damage_type;if(log._base_element_type=base.getElementType(),log._target_element_type=this.getElementType(),log._attack_time=base.getAttackSpeed(),damage.attack_type==Hit_Attack_Type.SKILL&&(log._skill_element_trans_buf=damage.is_element_trans_buf),damage_type==database.DamageType.Critical){var buf_cri_rate=base.m_my_team.getLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value,base.getGeneral());buf_cri_rate+=base.m_my_team.getSpecialLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value,base.getGeneral()),buf_cri_rate+=base.durabilityBufDebufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value),buf_cri_rate+=base.m_my_team.getBattleFormationBufPoint(base.getGeneral().position,database.BattleChainStatType.ChainStatType_Cri_Power_Value,base.getGeneral()),buf_cri_rate+=base.m_my_team.getFriendLeaderSkillBuf(database.BattleChainStatType.ChainStatType_Cri_Power_Value,base.getGeneral()),buf_cri_rate+=base.m_my_team.getPassiveSkillBufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value,base.getGeneral()),buf_cri_rate+=this.m_my_team.getTargetTeamPassiveSkillDebufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value),buf_cri_rate+=base.getEventDungeonGnrlBuf(database.BattleChainStatType.ChainStatType_Cri_Power_Value),buf_cri_rate+=base.TransPassiveOneTimeEffectBufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value,database.BattleInvokeType.BattleInvokeType_Always),buf_cri_rate+=base.TransPassiveOneTimeEffectBufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value,database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate),buf_cri_rate+=base.TransPassiveOneTimeEffectBufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value,database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate);var per=base.m_life_point/base.getMaxHealthPoint(),invoke_type=database.BattleInvokeType.BattleInvokeType_None;if(per<=.1?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_10_Per_Rate:per<=.15?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_15_Per_Rate:per<=.2?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate:per<=.25?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_25_Per_Rate:per<=.3?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate:per<=.4?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate:per<=.5?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate:per<=.75&&(invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate),invoke_type!=database.BattleInvokeType.BattleInvokeType_None)for(;invoke_type!=database.BattleInvokeType.BattleInvokeType_None;)switch(buf_cri_rate+=base.durabilityBufDebufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value,invoke_type),invoke_type){case database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_None;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_25_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_25_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_15_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_10_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_15_Per_Rate;break;default:invoke_type=database.BattleInvokeType.BattleInvokeType_None}if(4==this.m_battle_general.general.gnrl_class){var rebirth_stat=MasterManager.getInstance().get_GeneralRebirthStatInfo(this.m_battle_general.general.gnrl_group);null!=rebirth_stat.cri_ratio&&(buf_cri_rate+=rebirth_stat.cri_ratio)}var basePower=base.getGeneral().general.cri_ratio;0<base.getGeneral().limit_step_id&&(basePower*=base.m_general_limit_ability.cri_rate);var cri_rate=(basePower+buf_cri_rate)/1e4;cri_rate<1&&(cri_rate=1),damage_point*=cri_rate,this.playVoicePart(voice_critical_hitted),log._cri_power=cri_rate,log._buf_cri_power_rate=buf_cri_rate;var gnrl=base.getGeneral(),one_list=[];base.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_All_Attk_Critical,gnrl,one_list);for(var one_idx=0;one_idx<one_list.length;one_idx++){var o=one_list[one_idx];damage.is_last_hit&&base.addOnetimeEffect(o)}if((damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3)&&damage.is_first_hit){gnrl=base.getGeneral();var dur_list=[];base.findTransPassiveSkillDurationEffectFind(database.BattleInvokeType.BattleInvokeType_Normal_Attk_Critical,dur_list);for(var dur_list_idx=0;dur_list_idx<dur_list.length;dur_list_idx++){var dur_stack=0;if(0!=dur_list[dur_list_idx].durability.dura_end_effect){for(var target_dur_idx=0;target_dur_idx<this.m_durability_effects.length;target_dur_idx++)dur_list[dur_list_idx].trans_type==this.m_durability_effects[target_dur_idx].trans_type&&dur_list[dur_list_idx].is_friend_effect==base.IsFriend()&&++dur_stack;dur_list[dur_list_idx].durability.dura_end_effect>dur_stack&&this.addDurabilityEffect(dur_list[dur_list_idx],base)}}dur_list=null}}damage.attack_type==Hit_Attack_Type.SKILL&&(damage_point+=damage_point*base.getGeneral().skill_attk_damage_inc/1e4-damage_point*this.m_battle_general.skill_def_damage_dec/1e4);var is_ignore_def_by_npc=1==base.getGeneral().npc_attk_dmg_type;damage.attack_type==Hit_Attack_Type.SKILL&&(is_ignore_def_by_npc=!1);var is_ignore_def_by_active_sub_skill=!0,is_ignore_def_by_reader_skill=!0,is_ignore_def_by_passive_skill=!0;if(damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3){for(var dur_effect_idx=0;dur_effect_idx<base.m_durability_effects.length;dur_effect_idx++){if((dur=$.extend({},base.m_durability_effects[dur_effect_idx])).trans_type==database.BattleEffectTrans.Normal_Attack_Defence_Ignore_Attack)is_ignore_def_by_active_sub_skill=!1;else if(dur.trans_type==database.BattleEffectTrans.Onetime_Effect_Call_Exec)for(var rand=parseInt(1e4*Math.random()),one_dur_end_effects_idx=0;one_dur_end_effects_idx<dur.end_effects.length;one_dur_end_effects_idx++)dur.end_effects[one_dur_end_effects_idx].stat_trans==database.BattleEffectTrans.Normal_Attack_Defence_Ignore_Attack&&rand<dur.end_effects[one_dur_end_effects_idx].rate&&(is_ignore_def_by_active_sub_skill=!1);dur=null}var reader_one_list=[];base.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_Normal_Attack,base.getGeneral(),reader_one_list);rand=parseInt(1e4*Math.random()+1);for(var reader_one_list_idx=0;reader_one_list_idx<reader_one_list.length;reader_one_list_idx++){rand<(one=$.extend({},reader_one_list[reader_one_list_idx])).rate&&one.stat_trans==database.BattleEffectTrans.Normal_Attack_Defence_Ignore_Attack&&(is_ignore_def_by_reader_skill=!1),one=null}var passive_one_list=[];base.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Normal_Attack,passive_one_list),rand=parseInt(1e4*Math.random()+1);for(var passive_one_list_idx=0;passive_one_list_idx<passive_one_list.length;passive_one_list_idx++){rand<(one=$.extend({},passive_one_list[passive_one_list_idx])).rate&&one.stat_trans==database.BattleEffectTrans.Normal_Attack_Defence_Ignore_Attack&&(is_ignore_def_by_passive_skill=!1),one=null}}var is_ignore_def_by_active_skill=!0;if(damage.attack_type==Hit_Attack_Type.SKILL)for(var active_skill_idx=0;active_skill_idx<base.getGeneral().active_skill.length;active_skill_idx++){for(var active=$.extend({},base.getGeneral().active_skill[active_skill_idx]),active_skill_jdx=0;active_skill_jdx<active.onetime_effects.length;active_skill_jdx++){(one=$.extend({},active.onetime_effects[active_skill_jdx])).stat_trans==database.BattleEffectTrans.Defence_Ignore_Attack&&(0!=one.element_type?one.element_type==this.m_battle_general.general.element_type&&(is_ignore_def_by_active_skill=!1):is_ignore_def_by_active_skill=!1),one=null}active=null}var is_ignore_def_by_percent=!0;if(damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3){passive_one_list=[];base.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Normal_Attack,passive_one_list);rand=parseInt(1e4*Math.random());var ignore_rate=0;for(passive_one_list_idx=0;passive_one_list_idx<passive_one_list.length;passive_one_list_idx++){if((one=$.extend({},passive_one_list[passive_one_list_idx])).stat_trans==database.BattleEffectTrans.Enermy_General_Plus_Ignore_Percent_By_Stun){for(var Team_GeneralList=this.m_my_team.getTeamMembers(),Team_Trans_Stun_Cnt=0,target_team_idx=0;target_team_idx<Team_GeneralList.length;target_team_idx++)(Team_GeneralList[target_team_idx].IsDurabilityEffect(database.BattleEffectTrans.Stun)||Team_GeneralList[target_team_idx].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Stun))&&++Team_Trans_Stun_Cnt;if(0<Team_Trans_Stun_Cnt)ignore_rate+=Team_Trans_Stun_Cnt/one.onetime_effect.unit_target_dec*one.onetime_effect.unit_target_dmg_dec_value}else if(one.stat_trans==database.BattleEffectTrans.Enermy_General_Plus_Ignore_Percent_By_Freeze){for(var Team_GeneralList2=this.m_my_team.getTeamMembers(),Team_Trans_Freeze_Cnt=0,target_team_idx2=0;target_team_idx2<Team_GeneralList2.length;target_team_idx2++)(Team_GeneralList2[target_team_idx2].IsDurabilityEffect(database.BattleEffectTrans.Freeze)||Team_GeneralList2[target_team_idx2].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Freeze))&&++Team_Trans_Freeze_Cnt;if(0<Team_Trans_Freeze_Cnt)ignore_rate+=Team_Trans_Freeze_Cnt/one.onetime_effect.unit_target_dec*one.onetime_effect.unit_target_dmg_dec_value}else if(one.stat_trans==database.BattleEffectTrans.Enermy_General_Plus_Ignore_Percent_By_Poison){for(var Team_GeneralList3=this.m_my_team.getTeamMembers(),Team_Trans_Poison_Cnt=0,target_team_idx3=0;target_team_idx3<Team_GeneralList3.length;target_team_idx3++)(Team_GeneralList3[target_team_idx3].IsDurabilityEffect(database.BattleEffectTrans.Poison)||Team_GeneralList3[target_team_idx3].IsDurabilityEffect(database.BattleEffectTrans.New_Poison_Dmg_Rate)||Team_GeneralList3[target_team_idx3].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Poison))&&++Team_Trans_Poison_Cnt;if(0<Team_Trans_Poison_Cnt)ignore_rate+=Team_Trans_Poison_Cnt/one.onetime_effect.unit_target_dec*one.onetime_effect.unit_target_dmg_dec_value}else if(one.stat_trans==database.BattleEffectTrans.Enermy_General_Plus_Ignore_Percent_By_Silence){for(var Team_GeneralList4=this.m_my_team.getTeamMembers(),Team_Trans_Silence_Cnt=0,target_team_idx4=0;target_team_idx4<Team_GeneralList4.length;target_team_idx4++)(Team_GeneralList4[target_team_idx4].IsDurabilityEffect(database.BattleEffectTrans.Silence)||Team_GeneralList4[target_team_idx4].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Silence))&&++Team_Trans_Silence_Cnt;if(0<Team_Trans_Silence_Cnt)ignore_rate+=Team_Trans_Silence_Cnt/one.onetime_effect.unit_target_dec*one.onetime_effect.unit_target_dmg_dec_value}else if(one.stat_trans==database.BattleEffectTrans.Enermy_General_Plus_Ignore_Percent_By_Burning){for(var Team_GeneralList5=this.m_my_team.getTeamMembers(),Team_Trans_Burn_Cnt=0,target_team_idx5=0;target_team_idx5<Team_GeneralList5.length;target_team_idx5++)(Team_GeneralList5[target_team_idx5].IsDurabilityEffect(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||Team_GeneralList5[target_team_idx5].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate))&&++Team_Trans_Burn_Cnt;if(0<Team_Trans_Burn_Cnt)ignore_rate+=Team_Trans_Burn_Cnt/one.onetime_effect.unit_target_dec*one.onetime_effect.unit_target_dmg_dec_value}else if(one.stat_trans==database.BattleEffectTrans.Enermy_General_Plus_Ignore_Percent_By_Elec){for(var Team_GeneralList6=this.m_my_team.getTeamMembers(),Team_Trans_Elec_Cnt=0,target_team_idx6=0;target_team_idx6<Team_GeneralList6.length;target_team_idx6++)(Team_GeneralList6[target_team_idx6].IsDurabilityEffect(database.BattleEffectTrans.Damage_Reduce)||Team_GeneralList6[target_team_idx6].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Damage_Reduce))&&++Team_Trans_Elec_Cnt;if(0<Team_Trans_Elec_Cnt)ignore_rate+=Team_Trans_Elec_Cnt/one.onetime_effect.unit_target_dec*one.onetime_effect.unit_target_dmg_dec_value}else if(one.stat_trans==database.BattleEffectTrans.Enermy_General_Plus_Ignore_Percent_By_Wounds){for(var Team_GeneralList7=this.m_my_team.getTeamMembers(),Team_Trans_Wounds_Cnt=0,target_team_idx7=0;target_team_idx7<Team_GeneralList7.length;target_team_idx7++)(Team_GeneralList7[target_team_idx7].IsDurabilityEffect(database.BattleEffectTrans.Wound_Obstruct_Heal)||Team_GeneralList7[target_team_idx7].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Wound))&&++Team_Trans_Wounds_Cnt;if(0<Team_Trans_Wounds_Cnt)ignore_rate+=Team_Trans_Wounds_Cnt/one.onetime_effect.unit_target_dec*one.onetime_effect.unit_target_dmg_dec_value}else if(one.stat_trans==database.BattleEffectTrans.Enermy_General_Plus_Ignore_Percent_By_Blind)for(var Team_GeneralList8=this.m_my_team.getTeamMembers(),target_team_idx8=0;target_team_idx8<Team_GeneralList8.length;target_team_idx8++)(Team_GeneralList8[target_team_idx8].IsDurabilityEffect(database.BattleEffectTrans.Blind_Darkness)||Team_GeneralList8[target_team_idx8].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Blind))&&++EnermyTeam_Trans_Blind_Cnt;0!=ignore_rate&&rand<=ignore_rate&&(is_ignore_def_by_percent=!1)}}if((damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3)&&damage_type==database.DamageType.Critical){passive_one_list=[];base.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Normal_Attk_Critical,passive_one_list);rand=0;for(var passive_one_list_tdx=0;passive_one_list_tdx<passive_one_list.length;passive_one_list_tdx++){var passive=$.extend({},passive_one_list[passive_one_list_tdx]);rand=parseInt(1e4*Math.random());passive.stat_trans==database.BattleEffectTrans.Defence_Ignore_Attack&&(0!=passive.rate?passive.rate>=rand&&(is_ignore_def_by_percent=!1):is_ignore_def_by_percent=!1)}}if(!base.findTransType(database.BattleEffectTrans.Defence_Ignore_Attack)&&!is_ignore_def_by_npc&&is_ignore_def_by_active_sub_skill&&is_ignore_def_by_reader_skill&&is_ignore_def_by_passive_skill&&is_ignore_def_by_active_skill&&is_ignore_def_by_percent){var def_point=this.getDefencePoint();def_point<0&&(def_point=0);var def_rate=120/(def_point+100);damage_point*=def_rate,log._def_point=def_point,log._def_rate=def_rate}else log._def_point=20,log._def_rate=1;if(damage.is_ignore_guard_rate,use_guard&&!damage.is_ignore_guard_rate&&damage_type!=database.DamageType.Critical&&damage_type!=database.DamageType.Miss){var guard_random=parseInt(1e4*Math.random()),guard_rate=0,guard_power=0;if(guard_power=this.checkGuardRateAndValue2(guard_power),guard_random<(guard_rate=this.checkGuardRateAndValue(guard_rate))){damage_point-=damage_point*guard_power/1e4,damage_type=database.DamageType.Defence,log._is_guard_success=!0,log._guard_rate=guard_rate,log._guard_dec=guard_power,damage.damage_type==database.DamageType.Normal&&(damage.damage_type=damage_type);for(var passive_idx=0;passive_idx<this.m_battle_general.trans_passive_skill.length;passive_idx++){var p=this.m_battle_general.trans_passive_skill[passive_idx];if(damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_1){if(p.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_All_Hitted_Defence||p.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Normal_Hitted_Defence)for(one_idx=0;one_idx<p.onetime_effects.length;one_idx++){if((o=p.onetime_effects[one_idx]).onetime_effect.input_ability==database.BattleInputAbility.Defence&&o.onetime_effect.output_ability==database.BattleOutputAbility.Life)this.addOnetimeEffect(o);else if(o.onetime_effect.input_ability==database.BattleInputAbility.Fixed_Value&&o.onetime_effect.output_ability==database.BattleOutputAbility.Life)if(0==p.trans_passive.action_id)this.addOnetimeEffect(o);else{var target_list=[];(action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id)).enemy_me_type==database.BattleSelfOther.Other?null!=this._findEnemyTarget&&(target_list=this._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):action.enemy_me_type==database.BattleSelfOther.Self&&(target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position));for(var t_target_idx=0;t_target_idx<target_list.length;t_target_idx++)31==action.priority_position?target_list[t_target_idx]!=base&&target_list[t_target_idx].addOnetimeEffect(o):target_list[t_target_idx].addOnetimeEffect(o)}else if(o.onetime_effect.input_ability==database.BattleInputAbility.Attack&&o.onetime_effect.output_ability==database.BattleOutputAbility.Damage)base.m_battle_general.is_First_Gurad||(o.damage=this.getAttackPoint(),base.addOnetimeEffect(o,database.BattleEffectTrans.None,database.DamageType.Counter_Damage));else if(o.onetime_effect.input_ability==database.BattleInputAbility.Max_Life&&o.onetime_effect.output_ability==database.BattleOutputAbility.Life){if(o.stat_trans==database.BattleEffectTrans.Timer_Passed_Stack_Up_Our_Team_Heal&&1<this.m_battle_general.general.gnrl_class&&(o.stack_count=this.m_battle_general.one_start_stack),0==p.trans_passive.action_id)base.m_battle_general.is_First_Gurad||this.addOnetimeEffect(o);else if(!base.m_battle_general.is_First_Gurad){target_list=[];(action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id)).enemy_me_type==database.BattleSelfOther.Other?target_list=this._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position):action.enemy_me_type==database.BattleSelfOther.Self&&(target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position));for(var t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addOnetimeEffect(o)}}else o.onetime_effect.input_ability==database.BattleInputAbility.Skill_CoolTime_Inc&&o.onetime_effect.output_ability==database.BattleOutputAbility.Cooltime?base.m_battle_general.is_First_Gurad||base.addOnetimeEffect(o):o.onetime_effect.input_ability==database.BattleInputAbility.Skill_CoolTime_Dec&&o.onetime_effect.output_ability==database.BattleOutputAbility.Cooltime&&(base.m_battle_general.is_First_Gurad||this.addOnetimeEffect(o))}if(p.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_All_Hitted_Defence||p.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Normal_Attk_Defence)for(var p_dur_ef_idx=0;p_dur_ef_idx<p.durability_effects.length;p_dur_ef_idx++)if(!base.m_battle_general.is_First_Gurad)if(p.durability_effects[p_dur_ef_idx].our_enemy==database.BattleSelfOther.Other)base.findTransType(database.BattleEffectTrans.Golden_Invincibility)||(p.durability_effects[p_dur_ef_idx].trans_type==database.BattleEffectTrans.Element_Type_Fire_Trans||p.durability_effects[p_dur_ef_idx].trans_type==database.BattleEffectTrans.Element_Type_Water_Trans||p.durability_effects[p_dur_ef_idx].trans_type==database.BattleEffectTrans.Element_Type_Wind_Trans||p.durability_effects[p_dur_ef_idx].trans_type==database.BattleEffectTrans.Element_Type_Light_Trans||(p.durability_effects[p_dur_ef_idx].trans_type,database.BattleEffectTrans.Element_Type_Dark_Trans),base.addDurabilityEffect(p.durability_effects[p_dur_ef_idx],this));else if(p.durability_effects[p_dur_ef_idx].our_enemy==database.BattleSelfOther.Self){target_list=[];var action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id);target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position);for(t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addDurabilityEffect(p.durability_effects[p_dur_ef_idx],this)}}else if(damage.attack_type==Hit_Attack_Type.SKILL){if(p.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_All_Hitted_Defence||p.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Skill_Hitted_Defence)for(one_idx=0;one_idx<p.onetime_effects.length;one_idx++){if((o=p.onetime_effects[one_idx]).onetime_effect.input_ability==database.BattleInputAbility.Defence&&o.onetime_effect.output_ability==database.BattleOutputAbility.Life)this.addOnetimeEffect(o);else if(o.onetime_effect.input_ability==database.BattleInputAbility.Attack&&o.onetime_effect.output_ability==database.BattleOutputAbility.Damage)base.m_battle_general.is_First_Gurad||(o.damage=this.getAttackPoint(),base.addOnetimeEffect(o,database.BattleEffectTrans.None,database.DamageType.Counter_Damage));else if(o.onetime_effect.input_ability==database.BattleInputAbility.Max_Life&&o.onetime_effect.output_ability==database.BattleOutputAbility.Life){if(o.stat_trans==database.BattleEffectTrans.Timer_Passed_Stack_Up_Our_Team_Heal&&1<this.m_battle_general.general.gnrl_class&&(o.stack_count=this.m_battle_general.one_start_stack),0==p.trans_passive.action_id)base.m_battle_general.is_First_Gurad||this.addOnetimeEffect(o);else if(!base.m_battle_general.is_First_Gurad){target_list=[];(action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id)).enemy_me_type==database.BattleSelfOther.Other?target_list=this._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position):action.enemy_me_type==database.BattleSelfOther.Self&&(target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position));for(t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addOnetimeEffect(o)}}else o.onetime_effect.input_ability==database.BattleInputAbility.Skill_CoolTime_Inc&&o.onetime_effect.output_ability==database.BattleOutputAbility.Cooltime&&(base.m_battle_general.is_First_Gurad||base.addOnetimeEffect(o))}if((p.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_All_Hitted_Defence||p.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Normal_Attk_Defence)&&!base.m_battle_general.is_First_Gurad)for(p_dur_ef_idx=0;p_dur_ef_idx<p.durability_effects.length;p_dur_ef_idx++)if(p.durability_effects[p_dur_ef_idx].our_enemy==database.BattleSelfOther.Other)base.findTransType(database.BattleEffectTrans.Golden_Invincibility)||(p.durability_effects[p_dur_ef_idx].trans_type==database.BattleEffectTrans.Element_Type_Fire_Trans||p.durability_effects[p_dur_ef_idx].trans_type==database.BattleEffectTrans.Element_Type_Water_Trans||p.durability_effects[p_dur_ef_idx].trans_type==database.BattleEffectTrans.Element_Type_Wind_Trans||p.durability_effects[p_dur_ef_idx].trans_type==database.BattleEffectTrans.Element_Type_Light_Trans||(p.durability_effects[p_dur_ef_idx].trans_type,database.BattleEffectTrans.Element_Type_Dark_Trans),base.addDurabilityEffect(p.durability_effects[p_dur_ef_idx],this));else if(p.durability_effects[p_dur_ef_idx].our_enemy==database.BattleSelfOther.Self){target_list=[],action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id);target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position);for(t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addDurabilityEffect(p.durability_effects[p_dur_ef_idx],this)}}}base.m_battle_general.is_First_Gurad=!0}}damage_point=damage_point*damage.shared_point/100;var send_damage;0!=(send_damage=base.durabilityBufDebufPoint(database.BattleChainStatType.ChainStatType_After_Send_Damage_Rate))&&(damage_point+=damage_point*send_damage/1e4);var damage_inc_rate=0,is_have_debuf=!1;one_list=[];base.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_All_Attacks,one_list);for(var one_list_idx_a=0;one_list_idx_a<one_list.length;one_list_idx_a++){if((one=$.extend({},one_list[one_list_idx_a])).stat_trans==database.BattleEffectTrans.Bad_Trans_Dmg_Inc){for(var dur_idx=0;dur_idx<base.m_durability_effects.length;dur_idx++)base.m_durability_effects[dur_idx].up_down==database.BattleUpDown.Down&&(is_have_debuf=!0);if(is_have_debuf){var min_value=one.value,max_value=Math.max(one.value,one.max_value);damage_inc_rate+=Math.random()*(max_value-min_value)+min_value}}one=null}damage_point+=damage_point*damage_inc_rate/100;var arm_trans=database.BattleEffectTrans.None;if((arm_type=this.getArmServiceType())==db.GeneralArmServiceType.ArmServiceType_Melee?arm_trans=database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Arm_Service_Type_Melee:arm_type==db.GeneralArmServiceType.ArmServiceType_Lancer?arm_trans=database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Arm_Service_Type_Lancer:arm_type==db.GeneralArmServiceType.ArmServiceType_Ranger&&(arm_trans=database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Arm_Service_Type_Ranger),(arm_find_obj=base.getTransPassiveSkillOneTimeEffectFind(database.BattleInvokeType.BattleInvokeType_All_Attacks,arm_trans)).find_one){min_value=(arm_one=arm_find_obj.one).value,max_value=Math.max(arm_one.value,arm_one.max_value);damage_point+=damage_point*(effect_value=Math.random()*(max_value-min_value)+min_value)/100}var leader_ones=[];base.getMyTeam().getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_All_Attacks,base.getGeneral(),leader_ones);var arm_type=this.getArmServiceType();for(one_idx=0;one_idx<leader_ones.length;one_idx++){min_value=(o=leader_ones[one_idx]).value,max_value=Math.max(o.value,o.max_value);var effect_value=Math.random()*(max_value-min_value)+min_value;o.input_ability_type==database.BattleInputAbility.Attack&&o.output_ability_type==database.BattleOutputAbility.Damage&&(o.stat_trans==database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Arm_Service_Type_Melee?arm_type==db.GeneralArmServiceType.ArmServiceType_Melee&&(damage_point+=damage_point*effect_value/100):o.stat_trans==database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Arm_Service_Type_Lancer?arm_type==db.GeneralArmServiceType.ArmServiceType_Lancer&&(damage_point+=damage_point*effect_value/100):o.stat_trans==database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Arm_Service_Type_Ranger&&arm_type==db.GeneralArmServiceType.ArmServiceType_Ranger&&(damage_point+=damage_point*effect_value/100))}leader_ones=[];base.getMyTeam().getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_All_Attacks,base.getGeneral(),leader_ones);for(arm_type=this.getArmServiceType(),one_idx=0;one_idx<leader_ones.length;one_idx++){min_value=(o=leader_ones[one_idx]).value,max_value=Math.max(o.value,o.max_value),effect_value=Math.random()*(max_value-min_value)+min_value;o.input_ability_type==database.BattleInputAbility.Attack&&o.output_ability_type==database.BattleOutputAbility.Damage&&(o.stat_trans==database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Element_Type_Fire?this.m_battle_general.general.element_type==ELEMENT_TYPE_FIRE&&(damage_point+=damage_point*effect_value/100):o.stat_trans==database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Element_Type_Water?this.m_battle_general.general.element_type==ELEMENT_TYPE_WATER&&(damage_point+=damage_point*effect_value/100):o.stat_trans==database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Element_Type_Wind?this.m_battle_general.general.element_type==ELEMENT_TYPE_WIND&&(damage_point+=damage_point*effect_value/100):o.stat_trans==database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Element_Type_Light?this.m_battle_general.general.element_type==ELEMENT_TYPE_LIGHT&&(damage_point+=damage_point*effect_value/100):o.stat_trans==database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Element_Type_Dark&&this.m_battle_general.general.element_type==ELEMENT_TYPE_DARK&&(damage_point+=damage_point*effect_value/100))}if(base.IsDurabilityEffect(database.BattleEffectTrans.Target_Radio_Show_Buff_Effect)){var trans_ones=[];base.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_All_Attack_Radio_Show_Effect_Check,trans_ones);for(var o_tr_idx=0;o_tr_idx<trans_ones.length;o_tr_idx++){min_value=trans_ones[o_tr_idx].value,max_value=Math.max(trans_ones[o_tr_idx].value,trans_ones[o_tr_idx].max_value),effect_value=Math.random()*(max_value-min_value)+min_value;trans_ones[o_tr_idx].input_ability_type==database.BattleInputAbility.Attack&&trans_ones[o_tr_idx].output_ability_type==database.BattleOutputAbility.Damage&&(trans_ones[o_tr_idx].stat_trans==database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Element_Type_Fire?this.m_battle_general.general.element_type==ELEMENT_TYPE_FIRE&&(damage_point+=damage_point*effect_value/100):trans_ones[o_tr_idx].stat_trans==database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Element_Type_Water?this.m_battle_general.general.element_type==ELEMENT_TYPE_WATER&&(damage_point+=damage_point*effect_value/100):trans_ones[o_tr_idx].stat_trans==database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Element_Type_Wind?this.m_battle_general.general.element_type==ELEMENT_TYPE_WIND&&(damage_point+=damage_point*effect_value/100):trans_ones[o_tr_idx].stat_trans==database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Element_Type_Light?this.m_battle_general.general.element_type==ELEMENT_TYPE_LIGHT&&(damage_point+=damage_point*effect_value/100):trans_ones[o_tr_idx].stat_trans==database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Element_Type_Dark&&this.m_battle_general.general.element_type==ELEMENT_TYPE_DARK&&(damage_point+=damage_point*effect_value/100))}}for(var random_damage_point=0,dur_base_eff=0;dur_base_eff<base.m_durability_effects.length;dur_base_eff++)if(base.m_durability_effects[dur_base_eff].trans_type==database.BattleEffectTrans.Onetime_Effect_Call_Exec)for(var dur_base_eff_one=0;dur_base_eff_one<base.m_durability_effects[dur_base_eff].end_effects.length;dur_base_eff_one++)base.m_durability_effects[dur_base_eff].end_effects[dur_base_eff_one].stat_trans==database.BattleEffectTrans.Random_Damage_Inc&&(random_damage_point+=base.m_durability_effects[dur_base_eff].end_effects[dur_base_eff_one].random_damage_value);(damage_point+=damage_point*(random_damage_point/100),damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3)?damage_point-=damage_point*(recv_damage_dec=this.durabilityBufDebufPoint(database.BattleChainStatType.ChainStatType_After_Recv_Damage_Dec_Rate))/100:damage_point-=damage_point*(recv_damage_dec=this.durabilityBufDebufPoint(database.BattleChainStatType.ChainStatType_After_Recv_Damage_Dec_Rate))/100;damage_point-=damage_point*(recv_damage_dec=this.getMyTeam().getSpecialLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_After_Recv_Damage_Dec_Rate,this.getGeneral()))/100,damage_point+=damage_point*(recv_damage_dec=base.getMyTeam().getSpecialLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_After_Send_Damage_Rate,base.getGeneral()))/100;var recv_damage_dec=0;is_have_debuf=!1,one_list=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_All_Hitted,one_list);for(var one_list_idx_b=0;one_list_idx_b<one_list.length;one_list_idx_b++){if((one=$.extend({},one_list[one_list_idx_b])).stat_trans==database.BattleEffectTrans.Bad_Trans_Send_Dmg_Dec){for(var dur_idx_b=0;dur_idx_b<this.m_durability_effects.length;dur_idx_b++)this.m_durability_effects[dur_idx_b].up_down==database.BattleUpDown.Down&&(is_have_debuf=!0);if(is_have_debuf){min_value=one.value,max_value=Math.max(one.value,one.max_value);recv_damage_dec+=Math.random()*(max_value-min_value)+min_value}}one=null}if(damage_point-=damage_point*recv_damage_dec/100,(damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3)&&damage.is_first_hit){for(var is_not_use_good_trans_send_heal=!1,heal_target=[],onetime_heal={},is_not_use_good_trans=!1,trans_passive_skill_idx_5=0;trans_passive_skill_idx_5<base.getGeneral().trans_passive_skill.length;trans_passive_skill_idx_5++)if(base.getGeneral().trans_passive_skill[trans_passive_skill_idx_5].trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Normal_Attack)for(var passive_idx10=0;passive_idx10<base.getGeneral().trans_passive_skill[trans_passive_skill_idx_5].onetime_effects.length;passive_idx10++)base.getGeneral().trans_passive_skill[trans_passive_skill_idx_5].onetime_effects[passive_idx10].stat_trans==database.BattleEffectTrans.Not_Good_Trans_Enemy_Attack_Team_Heal_Value?(is_not_use_good_trans_send_heal=!0,onetime_heal=$.extend({},base.getGeneral().trans_passive_skill[trans_passive_skill_idx_5].onetime_effects[passive_idx10]),0==base.getGeneral().trans_passive_skill[trans_passive_skill_idx_5].trans_passive.action_id?heal_target.push_back(base):heal_target=base.getMyTeam().findOurTarget(base,base.getGeneral().trans_passive_skill[trans_passive_skill_idx_5].action.target_count,base.getGeneral().trans_passive_skill[trans_passive_skill_idx_5].action.priority_position)):base.getGeneral().trans_passive_skill[trans_passive_skill_idx_5].onetime_effects[passive_idx10].stat_trans==database.BattleEffectTrans.Not_Good_Trans_Enemy_Attack_Team_Heal_Rate&&(is_not_use_good_trans_send_heal=!0,onetime_heal=$.extend({},base.getGeneral().trans_passive_skill[trans_passive_skill_idx_5].onetime_effects[passive_idx10]),0==base.getGeneral().trans_passive_skill[trans_passive_skill_idx_5].trans_passive.action_id?heal_target.push_back(base):heal_target=base.getMyTeam().findOurTarget(base,base.getGeneral().trans_passive_skill[trans_passive_skill_idx_5].action.target_count,base_passive.action.priority_position));if(is_not_use_good_trans_send_heal){for(var dur_idx10=0;dur_idx10<this.m_durability_effects.length;dur_idx10++)this.m_durability_effects[dur_idx10].up_down==database.BattleUpDown.Up&&(is_not_use_good_trans=!0);if(!is_not_use_good_trans)for(var target_idx10=0;target_idx10<heal_target.length;target_idx10++)heal_target[target_idx10].addOnetimeEffect(onetime_heal)}}if(damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3){reader_one_list=[];base.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_Normal_Attack,base.getGeneral(),reader_one_list);for(var reader_one_idx=0;reader_one_idx<reader_one_list.length;reader_one_idx++)reader_one_list[reader_one_idx].stat_trans==database.BattleEffectTrans.All_Trans_Dmg_Inc_Rate&&(this.findTransType(database.BattleEffectTrans.Stun)||this.findTransType(database.BattleEffectTrans.Freeze)||this.findTransType(database.BattleEffectTrans.Poison)||this.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||this.findTransType(database.BattleEffectTrans.Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Silence)||this.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||this.findTransType(database.BattleEffectTrans.Electric_Shork)||this.findTransType(database.BattleEffectTrans.Bleeding_Woounds)||this.findTransType(database.BattleEffectTrans.Blind_Darkness)||this.findTransType(database.BattleEffectTrans.Not_Resist_Stun)||this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)||this.findTransType(database.BattleEffectTrans.Not_Resist_Poison)||this.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Not_Resist_Silence)||this.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Not_Resist_Wound)||this.findTransType(database.BattleEffectTrans.Not_Resist_Blind))&&(damage_point+=damage_point*reader_one_list[reader_one_idx].onetime_effect.stat_trans_value/100)}else if(damage.attack_type==Hit_Attack_Type.SKILL){reader_one_list=[];base.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_Normal_Attack,base.getGeneral(),reader_one_list);for(reader_one_idx=0;reader_one_idx<reader_one_list.length;reader_one_idx++)reader_one_list[reader_one_idx].stat_trans==database.BattleEffectTrans.All_Trans_Dmg_Inc_Rate&&(this.findTransType(database.BattleEffectTrans.Stun)||this.findTransType(database.BattleEffectTrans.Freeze)||this.findTransType(database.BattleEffectTrans.Poison)||this.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||this.findTransType(database.BattleEffectTrans.Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Silence)||this.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||this.findTransType(database.BattleEffectTrans.Electric_Shork)||this.findTransType(database.BattleEffectTrans.Bleeding_Woounds)||this.findTransType(database.BattleEffectTrans.Blind_Darkness)||this.findTransType(database.BattleEffectTrans.Not_Resist_Stun)||this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)||this.findTransType(database.BattleEffectTrans.Not_Resist_Poison)||this.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Not_Resist_Silence)||this.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Not_Resist_Wound)||this.findTransType(database.BattleEffectTrans.Not_Resist_Blind))&&(damage_point+=damage_point*reader_one_list[reader_one_idx].onetime_effect.stat_trans_value/100)}for(var dur_idx_0=0;dur_idx_0<base.m_durability_effects.length;dur_idx_0++)if(base.m_durability_effects[dur_idx_0].trans_type==database.BattleEffectTrans.Onetime_Effect_Call_Exec)for(var one_jdx_0=0;one_jdx_0<base.m_durability_effects[dur_idx_0].end_effects.length;one_jdx_0++)if(base.m_durability_effects[dur_idx_0].end_effects[one_jdx_0].stat_trans==database.BattleEffectTrans.All_Trans_Dmg_Inc_Rate)for(var dur_tdx=0;dur_tdx<this.m_durability_effects.length;dur_tdx++)this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Stun&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Freeze&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Poison&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.New_Poison_Dmg_Rate&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Damage_Reduce&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Silence&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.After_Recv_Damage_Inc_Rate&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Wound_Obstruct_Heal&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Electric_Shork&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Bleeding_Woounds&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Blind_Darkness&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Not_Resist_Stun&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Not_Resist_Freeze&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Not_Resist_Poison&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Not_Resist_Damage_Reduce&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Not_Resist_Silence&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Not_Resist_Wound&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Not_Resist_Blind||(damage_point+=damage_point*base.m_durability_effects[dur_idx_0].end_effects[one_jdx_0].onetime_effect.stat_trans_value/100);else if(base.m_durability_effects[dur_idx_0].end_effects[one_jdx_0].stat_trans==database.BattleEffectTrans.Damage_Increased_General_State_Dong_To_Enemy_All_Trans)for(dur_tdx=0;dur_tdx<this.m_durability_effects.length;dur_tdx++)this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Stun&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Freeze&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Poison&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.New_Poison_Dmg_Rate&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Damage_Reduce&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Silence&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.After_Recv_Damage_Inc_Rate&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Wound_Obstruct_Heal&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Electric_Shork&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Bleeding_Woounds&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Blind_Darkness&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Not_Resist_Stun&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Not_Resist_Freeze&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Not_Resist_Poison&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Not_Resist_Damage_Reduce&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Not_Resist_Silence&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Not_Resist_Wound&&this.m_durability_effects[dur_tdx].trans_type!=database.BattleEffectTrans.Not_Resist_Blind||base.getBattleGeneral().general.state_type==STATE_TYPE_DONG&&(damage_point+=damage_point*base.m_durability_effects[dur_idx_0].end_effects[one_jdx_0].onetime_effect.stat_trans_value/1e4);var all_trans_passive_ones=[];base.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_All_Attacks,all_trans_passive_ones);for(var one_idx_po1=0;one_idx_po1<all_trans_passive_ones.length;one_idx_po1++)all_trans_passive_ones[one_idx_po1].stat_trans==database.BattleEffectTrans.All_Trans_Dmg_Inc_Rate&&(this.findTransType(database.BattleEffectTrans.Stun)||this.findTransType(database.BattleEffectTrans.Freeze)||this.findTransType(database.BattleEffectTrans.Poison)||this.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||this.findTransType(database.BattleEffectTrans.Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Silence)||this.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||this.findTransType(database.BattleEffectTrans.Electric_Shork)||this.findTransType(database.BattleEffectTrans.Bleeding_Woounds)||this.findTransType(database.BattleEffectTrans.Blind_Darkness)||this.findTransType(database.BattleEffectTrans.Not_Resist_Stun)||this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)||this.findTransType(database.BattleEffectTrans.Not_Resist_Poison)||this.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Not_Resist_Silence)||this.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Not_Resist_Wound)||this.findTransType(database.BattleEffectTrans.Not_Resist_Blind))&&(damage_point+=damage_point*all_trans_passive_ones[one_idx_po1].onetime_effect.stat_trans_value/100);var is_not_use_good_trans_send_mng=!1,damage_value=(is_not_use_good_trans=!1,0);one_list=[];base.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_All_Attacks,one_list);for(var one_list_idx5=0;one_list_idx5<one_list.length;one_list_idx5++){if((one=$.extend({},one_list[one_list_idx5])).stat_trans==database.BattleEffectTrans.Not_Good_Trans_Send_Dmg_inc){is_not_use_good_trans_send_mng=!0;min_value=one.value,max_value=Math.max(one.value,one.max_value);damage_value=Math.random()*(max_value-min_value)+min_value}}if(is_not_use_good_trans_send_mng)for(var dur_idx7=0;dur_idx7<this.m_durability_effects.length;dur_idx7++){(dur=$.extend({},this.m_durability_effects[dur_idx7])).up_down==database.BattleUpDown.Up&&(is_not_use_good_trans=!0),is_not_use_good_trans||(damage_point+=damage_point*damage_value/100),dur=null}for(var recv_damage=this.durabilityBufDebufPoint(database.BattleChainStatType.ChainStatType_After_Recv_Damage_Rate),dur_ef_length=this.m_durability_effects.length,dur_ef_kdx=0;dur_ef_kdx<dur_ef_length;dur_ef_kdx++)this.m_durability_effects[dur_ef_kdx].trans_type==database.BattleEffectTrans.Attaker_Fire_Dmg_Inc?base.getElementType()==ELEMENT_TYPE_FIRE&&(recv_damage+=this.m_durability_effects[dur_ef_kdx].value):this.m_durability_effects[dur_ef_kdx].trans_type==database.BattleEffectTrans.Attaker_Water_Dmg_Inc?base.getElementType()==ELEMENT_TYPE_WATER&&(recv_damage+=this.m_durability_effects[dur_ef_kdx].value):this.m_durability_effects[dur_ef_kdx].trans_type==database.BattleEffectTrans.Attaker_Wind_Dmg_Inc?base.getElementType()==ELEMENT_TYPE_WIND&&(recv_damage+=this.m_durability_effects[dur_ef_kdx].value):this.m_durability_effects[dur_ef_kdx].trans_type==database.BattleEffectTrans.Attaker_Light_Dmg_Inc||this.m_durability_effects[dur_ef_kdx].trans_type==database.BattleEffectTrans.Glitter_Beach_Stack_Attaker_Light_Dmg_Inc?base.getElementType()==ELEMENT_TYPE_LIGHT&&(recv_damage+=this.m_durability_effects[dur_ef_kdx].value):this.m_durability_effects[dur_ef_kdx].trans_type==database.BattleEffectTrans.Attaker_Dark_Dmg_Inc&&base.getElementType()==ELEMENT_TYPE_DARK&&(recv_damage+=this.m_durability_effects[dur_ef_kdx].value);damage_point+=damage_point*recv_damage/1e4;var arm_find_obj;arm_trans=database.BattleEffectTrans.None;if((arm_type=base.getArmServiceType())==db.GeneralArmServiceType.ArmServiceType_Melee?arm_trans=database.BattleEffectTrans.After_Recv_Dmg_Dec_Rate_Arm_Service_Type_Melee:arm_type==db.GeneralArmServiceType.ArmServiceType_Lancer?arm_trans=database.BattleEffectTrans.After_Recv_Dmg_Dec_Rate_Arm_Service_Type_Lancer:arm_type==db.GeneralArmServiceType.ArmServiceType_Ranger&&(arm_trans=database.BattleEffectTrans.After_Recv_Dmg_Dec_Rate_Arm_Service_Type_Ranger),(arm_find_obj=this.getTransPassiveSkillOneTimeEffectFind(database.BattleInvokeType.BattleInvokeType_All_Attacks,arm_trans)).find_one){var arm_one;min_value=(arm_one=arm_find_obj.one).value,max_value=Math.max(arm_one.value,arm_one.max_value);damage_point-=damage_point*(effect_value=Math.random()*(max_value-min_value)+min_value)/100}if(damage.attack_type==Hit_Attack_Type.SKILL){var pp=0;this.findTransType(database.BattleEffectTrans.After_Recv_Skill_Dmg_Dec_Rate)&&(pp=this.durabilityBufPoint(database.BattleEffectTrans.After_Recv_Skill_Dmg_Dec_Rate)),this.findTransType(database.BattleEffectTrans.Angel_Stack_After_Recv_Skill_Dmg_Dec_Rate)?pp+=this.durabilityBufPoint(database.BattleEffectTrans.Angel_Stack_After_Recv_Skill_Dmg_Dec_Rate):this.findTransType(database.BattleEffectTrans.Glitter_Beach_Stack_After_Recv_Skill_Dmg_Dec_Rate)?pp+=this.durabilityBufPoint(database.BattleEffectTrans.Glitter_Beach_Stack_After_Recv_Skill_Dmg_Dec_Rate):this.findTransType(database.BattleEffectTrans.Timer_Passed_Stack_Up_After_Recv_Skill_Dmg_Dec)&&(pp+=this.durabilityBufPoint(database.BattleEffectTrans.Timer_Passed_Stack_Up_After_Recv_Skill_Dmg_Dec));one_list=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Skill_Hitted,one_list);for(one_idx=0;one_idx<one_list.length;one_idx++)if(one_list[one_idx].stat_trans==database.BattleEffectTrans.After_Recv_Skill_Dmg_Dec_Rate)pp+=one_list[one_idx].value;else if(one_list[one_idx].stat_trans==database.BattleEffectTrans.Angel_Stack_After_Recv_Skill_Dmg_Dec_Rate){1==this.m_battle_general.general.gnrl_class&&(this.m_battle_general.stack_angel=0),pp+=value=Math.floor(one_list[one_idx].value*this.m_battle_general.stack_angel)}else if(one_list[one_idx].stat_trans==database.BattleEffectTrans.Glitter_Beach_Stack_After_Recv_Skill_Dmg_Dec_Rate){var stack=0;1<this.m_battle_general.general.gnrl_class&&(stack=this.m_battle_general.one_start_stack),pp+=value=Math.floor(one_list[one_idx].value*stack)}else if(one_list[one_idx].stat_trans==database.BattleEffectTrans.Timer_Passed_Stack_Up_After_Recv_Skill_Dmg_Dec){stack=0;1<this.m_battle_general.general.gnrl_class&&(stack=this.m_battle_general.one_start_stack),pp+=value=Math.floor(one_list[one_idx].value*stack)}0!=pp&&(damage_point-=damage_point*pp/100)}if(damage.attack_type==Hit_Attack_Type.SKILL){var skill_attk_buf_point=base.durabilityBufPoint(database.BattleEffectTrans.ActiveSkill_Damage_Inc);skill_attk_buf_point+=base.durabilityBufPoint(database.BattleEffectTrans.Glitter_Beach_Stack_ActiveSkill_Damage_Inc),skill_attk_buf_point+=base.durabilityBufPoint(database.BattleEffectTrans.Timer_Passed_Stack_Up_Skill_Attk_Inc),skill_attk_buf_point+=base.durabilityBufPoint(database.BattleEffectTrans.Passive_Duration_Active_Skill_Damage_Inc),skill_attk_buf_point+=base.durabilityBufPoint(database.BattleEffectTrans.Caster_Lv_Skill_Attack_Inc),skill_attk_buf_point+=base.durabilityBufPoint(database.BattleEffectTrans.Caster_Lv_Skill_Attack_Inc_Dup_Limit),skill_attk_buf_point-=base.durabilityBufPoint(database.BattleEffectTrans.ActiveSkill_Damage_Dec),skill_attk_buf_point+=base.TransPassiveOneTimeEffectBufPoint(database.BattleChainStatType.CainStatType_Skill_Attk_Damage_Inc_Rate,database.BattleInvokeType.BattleInvokeType_Always),skill_attk_buf_point+=base.m_my_team.getSpecialLeaderSkillBufPoint(database.BattleChainStatType.CainStatType_Skill_Attk_Damage_Inc_Rate,base.getGeneral());var stack_wanko=base.getGeneral().stack_wanko;if(0!=stack_wanko){one_list=[];base.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Always,one_list);for(one_idx=0;one_idx<one_list.length;one_idx++){var value=0;if(one_list[one_idx].stat_trans==database.BattleEffectTrans.Accumulate_Stack_Wanko_Skill_Damge_Inc){min_value=one_list[one_idx].value,max_value=Math.max(one_list[one_idx].value,one_list[one_idx].max_value);value=Math.random()*(max_value-min_value)+min_value}skill_attk_buf_point+=stack_wanko*value}}damage_point+=damage_point*skill_attk_buf_point/100}if(damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3){one_list=[];base.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Normal_Attack,one_list),base.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_All_Attacks,one_list);for(var one_list_kdx=0;one_list_kdx<one_list.length;one_list_kdx++){var passive_one=$.extend({},one_list[one_list_kdx]);this.findTransType(passive_one.element_trans_type)&&0!=passive_one.element_trans_type&&(damage_point+=damage_point*passive_one.element_value/100),passive_one=null}}else if(damage.attack_type==Hit_Attack_Type.SKILL){one_list=[];base.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Skill_Attck,one_list),base.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_All_Attacks,one_list);for(one_list_kdx=0;one_list_kdx<one_list.length;one_list_kdx++){passive_one=$.extend({},one_list[one_list_kdx]);this.findTransType(passive_one.element_trans_type)&&0!=passive_one.element_trans_type&&(damage_point+=damage_point*passive_one.element_value/100),passive_one=null}var one_list2=[];base.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Skill_Attack_Radio_Show_Effect_Check,one_list2);for(one_list_kdx=0;one_list_kdx<one_list2.length;one_list_kdx++){var passive_one2=$.extend({},one_list2[one_list_kdx]);if(passive_one2.stat_trans==database.BattleEffectTrans.Random_Damage_Inc){for(var found_is=!1,one_list_tdx=0;one_list_tdx<base.m_durability_effects.length;one_list_tdx++)if(one_list_tdx,base.m_durability_effects[one_list_tdx].trans_type==database.BattleEffectTrans.Target_Radio_Show_Buff_Effect){found_is=!0;break}if(1==found_is){min_value=passive_one2.onetime_effect.value,max_value=Math.max(min_value,passive_one2.onetime_effect.max_value);damage_point+=damage_point*((effect_value=Math.random()*(max_value-min_value)+min_value)/100)}}passive_one2=null}}var equip_send_dmg_int_rate=base.getEquipmentPassiveBuff(this.m_battle_general,database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleChainStatType.ChainStatType_After_Send_Damage_Rate);damage.attack_type==Hit_Attack_Type.SKILL?equip_send_dmg_int_rate+=base.getEquipmentPassiveBuff(this.m_battle_general,database.BattleInvokeType.BattleInvokeType_Skill_Attck,database.BattleChainStatType.ChainStatType_After_Send_Damage_Rate):equip_send_dmg_int_rate+=base.getEquipmentPassiveBuff(this.m_battle_general,database.BattleInvokeType.BattleInvokeType_Normal_Attack,database.BattleChainStatType.ChainStatType_After_Send_Damage_Rate),damage_point+=damage_point*equip_send_dmg_int_rate/1e4;var equip_recv_dmg_dec_rate=this.getEquipmentPassiveBuff(base.getGeneral(),database.BattleInvokeType.BattleInvokeType_All_Hitted,database.BattleChainStatType.ChainStatType_After_Recv_Damage_Dec_Rate);if(damage.attack_type==Hit_Attack_Type.SKILL?equip_recv_dmg_dec_rate+=this.getEquipmentPassiveBuff(base.getGeneral(),database.BattleInvokeType.BattleInvokeType_Skill_Hitted,database.BattleChainStatType.ChainStatType_After_Recv_Damage_Dec_Rate):equip_recv_dmg_dec_rate+=this.getEquipmentPassiveBuff(base.getGeneral(),database.BattleInvokeType.BattleInvokeType_Normal_Hitted,database.BattleChainStatType.ChainStatType_After_Recv_Damage_Dec_Rate),damage_point-=damage_point*equip_recv_dmg_dec_rate/1e4,damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3){var buf_dur_effects=[];base.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_Normal_Attack,buf_dur_effects),base.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_All_Attacks,buf_dur_effects),base.findTransPassiveSkillDurationEffectFind(database.BattleInvokeType.BattleInvokeType_Normal_Attack,buf_dur_effects),base.findTransPassiveSkillDurationEffectFind(database.BattleInvokeType.BattleInvokeType_All_Attacks,buf_dur_effects);for(var buf_dur_eff_idx=0;buf_dur_eff_idx<buf_dur_effects.length;buf_dur_eff_idx++){if((d=$.extend({},buf_dur_effects[buf_dur_eff_idx])).trans_type==database.BattleEffectTrans.Onetime_Effect_Call_Exec)for(var buf_end_idx_o=0;buf_end_idx_o<d.end_effects.length;buf_end_idx_o++){if(0!=(o=d.end_effects[buf_end_idx_o]).element_trans_type)switch(o.element_trans_type){case database.BattleEffectTrans.All_Element_Types:(this.findTransType(database.BattleEffectTrans.Element_Type_Fire_Trans)||this.findTransType(database.BattleEffectTrans.Element_Type_Water_Trans)||this.findTransType(database.BattleEffectTrans.Element_Type_Wind_Trans)||this.findTransType(database.BattleEffectTrans.Element_Type_Light_Trans)||this.findTransType(database.BattleEffectTrans.Element_Type_Dark_Trans))&&(damage_point+=damage_point*o.element_value/100)}else for(var buf_end_idx_o2=0;buf_end_idx_o2<d.end_effects.length;buf_end_idx_o2++){var o2=d.end_effects[buf_end_idx_o2];o2.element_type==ELEMENT_TYPE_ALL?damage_point+=damage_point*o2.element_type_value/100:o2.element_type==this.getElementType()&&(damage_point+=damage_point*o2.element_type_value/100),o2=null}o=null}d=null}}if(damage.attack_type==Hit_Attack_Type.SKILL){var equip_onetime_effects=[];base.getEquipmentOnetimeEffect(this.m_battle_general,database.BattleInvokeType.BattleInvokeType_Skill_Attck,equip_onetime_effects),base.getEquipmentOnetimeEffect(this.m_battle_general,database.BattleInvokeType.BattleInvokeType_All_Attacks,equip_onetime_effects);for(var idx=0;idx<equip_onetime_effects.length;idx++){if((o=equip_onetime_effects[idx]).our_enemy==database.BattleSelfOther.Other&&o.input_ability_type==database.BattleInputAbility.Attack&&o.output_ability_type==database.BattleOutputAbility.Damage){min_value=o.value,max_value=Math.max(o.value,o.max_value),effect_value=Math.random()*(max_value-min_value)+min_value;o.element_trans_type==database.BattleEffectTrans.All_Element_Types?(this.findTransType(database.BattleEffectTrans.Element_Type_Fire_Trans)||this.findTransType(database.BattleEffectTrans.Element_Type_Water_Trans)||this.findTransType(database.BattleEffectTrans.Element_Type_Wind_Trans)||this.findTransType(database.BattleEffectTrans.Element_Type_Light_Trans)||this.findTransType(database.BattleEffectTrans.Element_Type_Dark_Trans))&&(damage_point+=damage_point*o.element_value/100):damage_point+=damage_point*effect_value/100}}}else if(damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3){equip_onetime_effects=[];base.getEquipmentOnetimeEffect(this.m_battle_general,database.BattleInvokeType.BattleInvokeType_Normal_Attack,equip_onetime_effects),base.getEquipmentOnetimeEffect(this.m_battle_general,database.BattleInvokeType.BattleInvokeType_All_Attacks,equip_onetime_effects);for(idx=0;idx<equip_onetime_effects.length;idx++){if((o=equip_onetime_effects[idx]).our_enemy==database.BattleSelfOther.Other&&o.input_ability_type==database.BattleInputAbility.Attack&&o.output_ability_type==database.BattleOutputAbility.Damage){min_value=o.value,max_value=Math.max(o.value,o.max_value),effect_value=Math.random()*(max_value-min_value)+min_value;o.element_trans_type==database.BattleEffectTrans.All_Element_Types?(this.findTransType(database.BattleEffectTrans.Element_Type_Fire_Trans)||this.findTransType(database.BattleEffectTrans.Element_Type_Water_Trans)||this.findTransType(database.BattleEffectTrans.Element_Type_Wind_Trans)||this.findTransType(database.BattleEffectTrans.Element_Type_Light_Trans)||this.findTransType(database.BattleEffectTrans.Element_Type_Dark_Trans))&&(damage_point+=damage_point*o.element_value/100):damage_point+=damage_point*effect_value/100}}}for(var accum_damage_rate=0,trans_element_type=database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Element_Type_Fire+this.getElementType()-1,point=0,dd_idx=0;dd_idx<base.m_durability_effects.length;dd_idx++)base.m_durability_effects[dd_idx].trans_type==trans_element_type&&(0!=base.m_durability_effects[dd_idx].durability.state_type&&base.m_durability_effects[dd_idx].durability.state_type==this.m_battle_general.general.state_type&&(point+=base.m_durability_effects[dd_idx].durability.state_type_value),point+=base.m_durability_effects[dd_idx].value);0!=point&&(accum_damage_rate+=point);for(var base_trans_element_type=database.BattleEffectTrans.After_Recv_Dmg_Dec_Rate_Element_Type_Fire+base.getElementType()-1,dd_idx2=point=0;dd_idx2<this.m_durability_effects.length;dd_idx2++)this.m_durability_effects[dd_idx2].trans_type==base_trans_element_type&&(0!=this.m_durability_effects[dd_idx2].durability.state_type&&this.m_durability_effects[dd_idx2].durability.state_type==base.getGeneral().general.state_type&&(point+=this.m_durability_effects[dd_idx2].durability.state_type_value),point+=this.m_durability_effects[dd_idx2].value);0!=point&&(accum_damage_rate-=point);leader_ones=[];this.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_All_Hitted,this.m_battle_general,leader_ones);for(var leader_ones_idx=0;leader_ones_idx<leader_ones.length;leader_ones_idx++){if((one=$.extend({},leader_ones[leader_ones_idx])).stat_trans==database.BattleEffectTrans.After_Recv_Dmg_Dec_Rate_Element_Type_Fire+base.getElementType()-1){min_value=one.value,max_value=Math.max(one.value,one.max_value);accum_damage_rate-=effect_value=Math.random()*(max_value-min_value)+min_value,one=null}}if(this.IsDurabilityEffect(database.BattleEffectTrans.Target_Radio_Show_Buff_Effect)){trans_ones=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_All_Hit_Radio_Show_Effect_Check,trans_ones);for(var one_tr_idx=0;one_tr_idx<trans_ones.length;one_tr_idx++)if(trans_ones[one_tr_idx].stat_trans==database.BattleEffectTrans.After_Recv_Dmg_Dec_Rate_Element_Type_Fire+base.getElementType()-1){min_value=trans_ones[one_tr_idx].value,max_value=Math.max(trans_ones[one_tr_idx].value,trans_ones[one_tr_idx].max_value);accum_damage_rate-=effect_value=Math.random()*(max_value-min_value)+min_value}}var trans_arm_service_type=database.BattleEffectTrans.After_Send_Dmg_Inc_Rate_Arm_Service_Type_Melee+this.getArmServiceType()-1,c=base.durabilityBufPoint(trans_arm_service_type);0!=c&&(accum_damage_rate+=c);var d,base_trans_arm_service_type=database.BattleEffectTrans.After_Recv_Dmg_Dec_Rate_Arm_Service_Type_Melee+base.getArmServiceType()-1;0!=(d=this.durabilityBufPoint(base_trans_arm_service_type))&&(accum_damage_rate-=d),0!=accum_damage_rate&&(damage_point+=damage_point*accum_damage_rate/100);for(var damage_rate_state=0,base_state_type=base.getGeneral().general.state_type,dur_eff_idx=0;dur_eff_idx<this.m_durability_effects.length;dur_eff_idx++)switch(this.m_durability_effects[dur_eff_idx].trans_type){case database.BattleEffectTrans.Attacker_State_Type_Dong_Damage_Inc:base_state_type==STATE_TYPE_DONG&&(damage_rate_state=this.m_durability_effects[dur_eff_idx].value);break;case database.BattleEffectTrans.Attacker_State_Type_Wie_Damage_inc:base_state_type==STATE_TYPE_WIE&&(damage_rate_state=this.m_durability_effects[dur_eff_idx].value);break;case database.BattleEffectTrans.Attacker_State_Type_Chock_Damage_Inc:base_state_type==STATE_TYPE_CHOCK&&(damage_rate_state=this.m_durability_effects[dur_eff_idx].value);break;case database.BattleEffectTrans.Attacker_State_Type_O_Damage_Inc:base_state_type==STATE_TYPE_O&&(damage_rate_state=this.m_durability_effects[dur_eff_idx].value);break;case database.BattleEffectTrans.Attacker_State_Type_Won_Damage_Inc:base_state_type==STATE_TYPE_WON&&(damage_rate_state=this.m_durability_effects[dur_eff_idx].value);break;case database.BattleEffectTrans.Attacker_State_Type_Jae_Damage_Inc:base_state_type==STATE_TYPE_JAE&&(damage_rate_state=this.m_durability_effects[dur_eff_idx].value);break;case database.BattleEffectTrans.Attacker_State_Type_Wae_Damage_Inc:base_state_type==STATE_TYPE_WAE&&(damage_rate_state=this.m_durability_effects[dur_eff_idx].value)}0!=damage_rate_state&&(damage_point+=damage_point*damage_rate_state/1e4);var element_damage=0,base_passive_ones=[];base.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Always,base_passive_ones);for(var base_passive_ones_idx=0;base_passive_ones_idx<base_passive_ones.length;base_passive_ones_idx++){(ones=$.extend({},base_passive_ones[base_passive_ones_idx])).stat_trans==trans_element_type?element_damage+=ones.value:ones.stat_trans==trans_arm_service_type&&(element_damage+=ones.value),ones=null}var passive_ones=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Always,passive_ones);for(var passive_ones_idx=0;passive_ones_idx<passive_ones.length;passive_ones_idx++){var ones;(ones=$.extend({},passive_ones[passive_ones_idx])).stat_trans==base_trans_element_type?element_damage-=ones.value:ones.stat_trans==trans_arm_service_type&&(element_damage-=ones.value)}if(0!=element_damage&&(damage_point+=damage_point*element_damage/100),this.m_battle_general.is_zoom){gnrl=base.getGeneral();for(var passvie_idx=0;passvie_idx<gnrl.trans_passive_skill.length;passvie_idx++){null==(p=gnrl.trans_passive_skill[passvie_idx]).onetime_effects&&(p.onetime_effects=[]);for(var ontime_idx=0;ontime_idx<p.onetime_effects.length;ontime_idx++){if((o=p.onetime_effects[ontime_idx]).stat_trans==database.BattleEffectTrans.Boss_Damage_Inc&&0!=o.target_boss_types.length)-1!=o.target_boss_types.findIndex(function(type){if(type==this.m_battle_general.npc_boss_type)return!0}.bind(this))&&(p.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_All_Attacks?damage_point+=damage_point*o.onetime_effect.target_boss_value/1e4:p.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Normal_Attack?damage.attack_type!=Hit_Attack_Type.ATTACK_1&&damage.attack_type!=Hit_Attack_Type.ATTACK_2&&damage.attack_type!=Hit_Attack_Type.TTACK_3||(damage_point+=damage_point*o.onetime_effect.target_boss_value/1e4):p.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Skill_Attck&&damage.attack_type==Hit_Attack_Type.SKILL&&(damage_point+=damage_point*o.onetime_effect.target_boss_value/1e4))}}one_list=[];if(damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3){base.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_All_Attacks,gnrl,one_list),base.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_Normal_Attack,gnrl,one_list);for(one_idx=0;one_idx<one_list.length;one_idx++){if(0!=(o=one_list[one_idx]).target_boss_types.length&&o.stat_trans==database.BattleEffectTrans.Boss_Damage_Inc)-1!=o.target_boss_types.findIndex(function(bt){if(this.m_battle_general.npc_boss_type==bt)return!0}.bind(this))&&(damage_point+=damage_point*o.onetime_effect.target_boss_value/1e4)}}else if(damage.attack_type==Hit_Attack_Type.SKILL){base.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_All_Attacks,gnrl,one_list),base.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_Skill_Attck,gnrl,one_list);for(one_idx=0;one_idx<one_list.length;one_idx++){if(0!=(o=one_list[one_idx]).target_boss_types.length)-1!=o.target_boss_types.findIndex(function(bt){if(this.m_battle_general.npc_boss_type==bt)return!0}.bind(this))&&(damage_point+=damage_point*o.onetime_effect.target_boss_value/1e4)}}var duration=[];base.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_All_Attacks,duration);for(var duration_idx=0;duration_idx<duration.length;duration_idx++){if((dur=$.extend({},duration[duration_idx])).trans_type==database.BattleEffectTrans.Onetime_Effect_Call_Exec)for(var o_end_effects_idx=0;o_end_effects_idx<dur.end_effects.length;o_end_effects_idx++){switch((o=$.extend({},dur.end_effects[o_end_effects_idx])).stat_trans){case database.BattleEffectTrans.Boss_Damage_Inc:found_is=!1;for(var idx_o_1=0;idx_o_1<o.target_boss_types.length;idx_o_1++){var bt=o.target_boss_types[idx_o_1];if(idx_o_1,this.m_battle_general.npc_boss_type==bt){found_is=!0;break}bt=null}1==found_is&&(damage_point+=damage_point*o.onetime_effect.target_boss_value/1e4)}o=null}dur=null}if(damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3){var duration2=[];base.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_Normal_Attack,duration2);for(duration_idx=0;duration_idx<duration2.length;duration_idx++){if((dur=$.extend({},duration2[duration_idx])).trans_type==database.BattleEffectTrans.Onetime_Effect_Call_Exec)for(o_end_effects_idx=0;o_end_effects_idx<dur.end_effects.length;o_end_effects_idx++){switch((o=$.extend({},dur.end_effects[o_end_effects_idx])).stat_trans){case database.BattleEffectTrans.Boss_Damage_Inc:for(found_is=!1,idx_o_1=0;idx_o_1<o.target_boss_types.length;idx_o_1++){bt=o.target_boss_types[idx_o_1];if(idx_o_1,this.m_battle_general.npc_boss_type==bt){found_is=!0;break}bt=null}1==found_is&&(damage_point+=damage_point*o.onetime_effect.target_boss_value/1e4)}o=null}dur=null}}if(damage.attack_type==Hit_Attack_Type.SKILL){var duration3=[];base.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_Skill_Attck,duration3);for(duration_idx=0;duration_idx<duration3.length;duration_idx++){var dur;if((dur=$.extend({},duration3[duration_idx])).trans_type==database.BattleEffectTrans.Onetime_Effect_Call_Exec)for(o_end_effects_idx=0;o_end_effects_idx<dur.end_effects.length;o_end_effects_idx++){switch((o=$.extend({},dur.end_effects[o_end_effects_idx])).stat_trans){case database.BattleEffectTrans.Boss_Damage_Inc:for(found_is=!1,idx_o_1=0;idx_o_1<o.target_boss_types.length;idx_o_1++){bt=o.target_boss_types[idx_o_1];if(idx_o_1,this.m_battle_general.npc_boss_type==bt){found_is=!0;break}bt=null}1==found_is&&(damage_point+=damage_point*o.onetime_effect.target_boss_value/1e4)}o=null}dur=null}}if(damage.attack_type==Hit_Attack_Type.SKILL)for(var active_idx=0;active_idx<gnrl.active_skill.length;active_idx++){active=$.extend({},gnrl.active_skill[active_idx]);for(var one_ac_idx=0;one_ac_idx<active.onetime_effects.length;one_ac_idx++){if(0!=(one=$.extend({},active.onetime_effects[one_ac_idx])).target_boss_types)-1!=one.target_boss_types.findIndex(function(bt){if(this.m_battle_general.npc_boss_type==bt)return!0}.bind(this))&&one.input_ability_type!=database.BattleInputAbility.Fixed_Value&&(damage_point+=damage_point*one.onetime_effect.target_boss_value/1e4)}}}if(damage.attack_type==Hit_Attack_Type.SKILL)for(gnrl=base.getGeneral(),active_idx=0;active_idx<gnrl.active_skill.length;active_idx++)for(active=$.extend({},gnrl.active_skill[active_idx]),one_ac_idx=0;one_ac_idx<active.onetime_effects.length;one_ac_idx++){if(!(one=$.extend({},active.onetime_effects[one_ac_idx])).state_types.empty())-1!=one.state_types.findIndex(function(st){if(this.m_battle_general.general.state_type==st)return!0}.bind(this))&&(damage_point+=damage_point*one.onetime_effect.state_value/1e4)}else if(damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3)for(var dur_i=0;dur_i<base.m_durability_effects.length;dur_i++)if(base.m_durability_effects[dur_i].trans_type==database.BattleEffectTrans.Onetime_Effect_Call_Exec)for(var one_j=0;one_j<base.m_durability_effects[dur_i].end_effects.length;one_j++){var one;if(!(one=$.extend({},base.m_durability_effects[dur_i].end_effects[one_j])).state_types.empty())-1!=one.state_types.findIndex(function(st){if(this.m_battle_general.general.state_type==st)return!0}.bind(this))&&(damage_point+=damage_point*one.onetime_effect.state_value/1e4)}return damage_point<1&&(damage_point=1),damage.damage_type=damage_type,damageCalc=damage,base=damage=null,this.m_log_temp=log,damage_point},addDamage:function(baseAdd,damageAdd){var base=baseAdd,damage=damageAdd;if(this.m_my_team.getBattleState()!=BattleState.GamePlaying)return!1;this.addDebugGeneral("addDamage");for(var is_freeze=!1,idx=0;idx<this.m_durability_effects.length;idx++){(dur=$.extend({},this.m_durability_effects[idx])).trans_type==database.BattleEffectTrans.Freeze&&(is_freeze=!0)}if(is_freeze)return!1;damage.is_first_hit&&(base.m_battle_general.is_First_Gurad=!1);var log=new DamageLog;if(log._attk_name=base.getGeneral().general.name,log._def_name=this.m_battle_general.general.name,log._max_life=this.getMaxHealthPoint(),log._attaker_limit_step=base.getGeneral().limit_step_id,log._attack_type=damage.attack_type,(damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3)&&(base.findTransType(database.BattleEffectTrans.Blind_Darkness)||base.findTransType(database.BattleEffectTrans.Not_Resist_Blind))){if(log._is_miss=!0,null!=this._cbEventListenerFieldMng)(evt=new battle.Event).floatValue=0,evt.dataValue1=this,evt.intValue=database.DamageType.Miss,this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_DAMAGE_SHOW,evt),evt=null;return this.addDamageLogDebug(log),!1}if(damage.is_evasion){if(damage.damage=0,damage.damage_type=database.DamageType.Miss,damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3)for(idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++){if((passive=this.m_battle_general.trans_passive_skill[idx]).trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Normal_Attack_evasion)for(var jdx=0;jdx<passive.onetime_effects.length;jdx++){var o=passive.onetime_effects[jdx];if(0==passive.trans_passive.action_id)this.addOnetimeEffect(o);else{var target_list=[];(action=MasterManager.getInstance().get_ActionImplementation(passive.trans_passive.action_id)).enemy_me_type==database.BattleSelfOther.Other?null!=this._findEnemyTarget&&(target_list=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position)):action.enemy_me_type==database.BattleSelfOther.Self&&(target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position));for(var t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addOnetimeEffect(o)}}if(passive.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Normal_Attack_evasion)for(jdx=0;jdx<passive.durability_effects.length;jdx++){var dur=passive.durability_effects[jdx];if(0==passive.trans_passive.action_id)this.addDurabilityEffect(dur,base);else{target_list=[];var action=MasterManager.getInstance().get_ActionImplementation(passive.trans_passive.action_id);dur.our_enemy==database.BattleSelfOther.Other?null!=this._findEnemyTarget&&(target_list=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position)):dur.our_enemy==database.BattleSelfOther.Self&&(target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position));for(t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addDurabilityEffect(dur,this)}}}if(damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3||damage.attack_type==Hit_Attack_Type.SKILL)for(idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++){if((passive=this.m_battle_general.trans_passive_skill[idx]).trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_All_Attack_Evasion)for(jdx=0;jdx<passive.onetime_effects.length;jdx++){var damage_type=database.DamageType.Normal;if((o=passive.onetime_effects[jdx]).input_ability_type!=database.BattleInputAbility.Damage&&o.input_ability_type!=database.BattleInputAbility.Attack||(o.damage=this.getAttackPoint(),0==passive.trans_passive.action_id&&(damage_type=database.DamageType.Reflect_Damage)),0==passive.trans_passive.action_id)base.addOnetimeEffect(o,database.BattleEffectTrans.None,damage_type);else{target_list=[];(action=MasterManager.getInstance().get_ActionImplementation(passive.trans_passive.action_id)).enemy_me_type==database.BattleSelfOther.Other?null!=this._findEnemyTarget&&(target_list=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position)):action.enemy_me_type==database.BattleSelfOther.Self&&(target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position));for(t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addOnetimeEffect(o)}}if(passive.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_All_Attack_Evasion)for(jdx=0;jdx<passive.durability_effects.length;jdx++){dur=passive.durability_effects[jdx];if(0==passive.trans_passive.action_id)this.addDurabilityEffect(dur,base);else{target_list=[],action=MasterManager.getInstance().get_ActionImplementation(passive.trans_passive.action_id);dur.our_enemy==database.BattleSelfOther.Other?null!=this._findEnemyTarget&&(target_list=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position)):dur.our_enemy==database.BattleSelfOther.Self&&(target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position));for(t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addDurabilityEffect(dur,this)}}}}if(damage.is_last_hit)for(idx=0;idx<base.getGeneral().trans_passive_skill.length;idx++){if((p=base.getGeneral().trans_passive_skill[idx]).trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_All_Attacks)for(jdx=0;jdx<p.durability_effects.length;jdx++){dur=p.durability_effects[jdx];var rand=parseInt(100*Math.random())+1;if(dur.percent>=rand)if(0==p.trans_passive.action_id)dur.our_enemy==database.BattleSelfOther.Other?this.addDurabilityEffect(dur,base):dur.our_enemy==database.BattleSelfOther.Self&&base.addDurabilityEffect(dur,base);else{target_list=[],action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id);dur.our_enemy==database.BattleSelfOther.Other?null!=base._findEnemyTarget&&(target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):dur.our_enemy==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addDurabilityEffect(dur,this)}}}var damage_point=this.getCalcDamage(base,damage,log,!0);if(damage.attack_type!=Hit_Attack_Type.ATTACK_1&&damage.attack_type!=Hit_Attack_Type.ATTACK_2&&damage.attack_type!=Hit_Attack_Type.ATTACK_3||0!=base.getGeneral().npc_attk_dmg_min_value&&damage_point<base.getGeneral().npc_attk_dmg_min_value&&(damage_point=base.getGeneral().npc_attk_dmg_min_value),damage.damage_type==database.DamageType.Defence&&this.m_battle_general.is_zoom&&this.m_team_type==BattleGeneral_TeamType.Right?this.playVoicePart(voice_npc_boss_hit_shield):damage.damage_type==database.DamageType.Defence&&base.getGeneral().is_zoom&&this.m_team_type==BattleGeneral_TeamType.Left&&base.playVoicePart(voice_npc_boss_attack_shield),damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3){var one_list=[],r=0;if(one_list=[],this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Normal_Hitted,one_list),r=parseInt(1e4*Math.random()+1),0<damage_point)for(var one_idx=0;one_idx<one_list.length;one_idx++){var one=$.extend({},one_list[one_idx]);r<one.onetime_effect.rate&&one.stat_trans==database.BattleEffectTrans.After_Recv_Damage_Dec&&((damage_point-=damage_point*one.onetime_effect.value/100)<0&&(damage_point=0),this.addCommonEffectNode("Jegalryang_Hero_fx_fan_defence")),one=null}if(one_list=[],this.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_Normal_Hitted,this.m_battle_general,one_list),r=parseInt(1e4*Math.random()+1),0<damage_point)for(var o_idx=0;o_idx<one_list.length;o_idx++){r<(o=one_list[o_idx]).onetime_effect.rate&&o.stat_trans==database.BattleEffectTrans.After_Recv_Damage_Dec&&((damage_point-=damage_point*o.onetime_effect.value/100)<0&&(damage_point=0),239==this.m_my_team.get_Reader_Gnrl_Group_id()?this.addCommonEffectNode("Yeomong_Halloween17_ghost_defence"):275==this.m_my_team.get_Reader_Gnrl_Group_id()&&this.addCommonEffectNode("Gwanwoo_Dress_fx_buff_flowerguard"))}}if((damage_type=damage.damage_type)==database.DamageType.Critical)if(damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3){if(damage.is_last_hit)for(var passive_idx=0;passive_idx<base.getGeneral().trans_passive_skill.length;passive_idx++){if((p=base.getGeneral().trans_passive_skill[passive_idx]).trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_All_Attk_Critical||p.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Normal_Attk_Critical){for(one_idx=0;one_idx<p.onetime_effects.length;one_idx++){if((o=p.onetime_effects[one_idx]).input_ability_type==database.BattleInputAbility.Skill_CoolTime_Dec&&o.output_ability_type==database.BattleOutputAbility.Cooltime)if(0==p.trans_passive.action_id)base.addOnetimeEffect(o);else{target_list=[];(action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id)).enemy_me_type==database.BattleSelfOther.Other?null!=this._findEnemyTarget&&(target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):action.enemy_me_type==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addOnetimeEffect(o)}else if(o.input_ability_type!=database.BattleInputAbility.Fixed_Value&&o.input_ability_type!=database.BattleInputAbility.Max_Life||o.output_ability_type!=database.BattleOutputAbility.Life){if((o.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Rate_Dec||o.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Dec)&&o.output_ability_type==database.BattleOutputAbility.Cooltime)if(0==p.trans_passive.action_id)base.addOnetimeEffect(o);else{target_list=[];(action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id)).enemy_me_type==database.BattleSelfOther.Other?null!=base._findEnemyTarget&&(target_list=this._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):action.enemy_me_type==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(t_idx=0;t_idx<target_list.length;t_idx++)31==action.priority_position?target_list[t_idx]!=base&&target_list[t_idx].addOnetimeEffect(o):target_list[t_idx].addOnetimeEffect(o)}}else if(0==p.trans_passive.action_id)base.addOnetimeEffect(o);else{var target_list=[];(action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id)).enemy_me_type==database.BattleSelfOther.Other?null!=base._findEnemyTarget&&null!=base._findEnemyTarget&&(target_list=this._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):action.enemy_me_type==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(var t_target_idx=0;t_target_idx<target_list.length;t_target_idx++)31==action.priority_position?target_list[t_target_idx]!=base&&target_list[t_target_idx].addOnetimeEffect(o):target_list[t_target_idx].addOnetimeEffect(o)}}for(var dur_p_idx=0;dur_p_idx<p.durability_effects.length;dur_p_idx++)if(p.durability_effects[dur_p_idx].trans_type==database.BattleEffectTrans.ActiveSkill_Damage_Inc){target_list=[],action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id);p.durability_effects[dur_p_idx].our_enemy==database.BattleSelfOther.Other?target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position):p.durability_effects[dur_p_idx].our_enemy==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(var target_idx=0;target_idx<target_list.length;target_idx++)target_list[target_idx].addDurabilityEffect(p.durability_effects[dur_p_idx],base)}else if(p.durability_effects[dur_p_idx].trans_type==database.BattleEffectTrans.Glitter_Beach_Stack_ActiveSkill_Damage_Inc){target_list=[],action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id);p.durability_effects[dur_p_idx].our_enemy==database.BattleSelfOther.Other?target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position):p.durability_effects[dur_p_idx].our_enemy==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));var stack=0;1<this.m_battle_general.general.gnrl_class&&(stack=this.m_battle_general.one_start_stack);var v=p.durability_effects[dur_p_idx].value*stack;p.durability_effects[dur_p_idx].value=v;for(target_idx=0;target_idx<target_list.length;target_idx++)target_list[target_idx].addDurabilityEffect(p.durability_effects[dur_p_idx],base)}else if(p.durability_effects[dur_p_idx].trans_type==database.BattleEffectTrans.Timer_Passed_Stack_Up_Skill_Attk_Inc){target_list=[],action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id);p.durability_effects[dur_p_idx].our_enemy==database.BattleSelfOther.Other?target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position):p.durability_effects[dur_p_idx].our_enemy==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));stack=0;1<this.m_battle_general.general.gnrl_class&&(stack=this.m_battle_general.one_start_stack);v=p.durability_effects[dur_p_idx].value*stack;p.durability_effects[dur_p_idx].value=v;for(target_idx=0;target_idx<target_list.length;target_idx++)target_list[target_idx].addDurabilityEffect(p.durability_effects[dur_p_idx],base)}}else if(p.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_All_Attk_Critical||p.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Normal_Attk_Critical)for(var dur_idx3=0;dur_idx3<p.durability_effects.length;dur_idx3++){if((dur=$.extend({},p.durability_effects[dur_idx3])).trans_type==database.BattleEffectTrans.Stun||dur.trans_type==database.BattleEffectTrans.Silence||dur.trans_type==database.BattleEffectTrans.Poison||dur.trans_type==database.BattleEffectTrans.After_Recv_Damage_Inc_Rate||dur.trans_type==database.BattleEffectTrans.Damage_Reduce||dur.trans_type==database.BattleEffectTrans.New_Poison_Dmg_Rate||dur.trans_type==database.BattleEffectTrans.Wound_Obstruct_Heal||dur.trans_type==database.BattleEffectTrans.Blind_Darkness||dur.trans_type==database.BattleEffectTrans.Freeze||dur.trans_type==database.BattleEffectTrans.Not_Resist_Stun||dur.trans_type==database.BattleEffectTrans.Not_Resist_Silence||dur.trans_type==database.BattleEffectTrans.Not_Resist_Poison||dur.trans_type==database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate||dur.trans_type==database.BattleEffectTrans.Not_Resist_Damage_Reduce||dur.trans_type==database.BattleEffectTrans.Not_Resist_Wound||dur.trans_type==database.BattleEffectTrans.Not_Resist_Blind||dur.trans_type==database.BattleEffectTrans.Not_Resist_Freeze){if(this.checkTransInvinsiblity(dur.trans_type))continue;if(this.findTransType(database.BattleEffectTrans.Golden_Invincibility))continue}rand=parseInt(100*Math.random()+1);if(dur.percent>=rand)if(0==p.trans_passive.action_id)p.durability_effects[dur_idx3].our_enemy==database.BattleSelfOther.Other?this.addDurabilityEffect(p.durability_effects[dur_idx3],base):p.durability_effects[dur_idx3].our_enemy==database.BattleSelfOther.Self&&base.addDurabilityEffect(p.durability_effects[dur_idx3],base);else{target_list=[],action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id);dur.our_enemy==database.BattleSelfOther.Other?target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position):p.durability_effects[dur_idx3].our_enemy==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addDurabilityEffect(dur,this)}dur=null}}if(damage.is_first_hit)for(var passive_idx2=0;passive_idx2<this.m_battle_general.trans_passive_skill.length;passive_idx2++)if(this.m_battle_general.trans_passive_skill[passive_idx2].trans_passive.invoke_type1,database.BattleInvokeType.BattleInvokeType_All_Hitted_Critical,this.m_battle_general.trans_passive_skill[passive_idx2].trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_All_Hitted_Critical)for(var dur_idx2=0;dur_idx2<this.m_battle_general.trans_passive_skill[passive_idx2].durability_effects.length;dur_idx2++)if(this.m_battle_general.trans_passive_skill[passive_idx2].durability_effects[dur_idx2].trans_type==database.BattleEffectTrans.Critical_Percent_Rate_Inc||this.m_battle_general.trans_passive_skill[passive_idx2].durability_effects[dur_idx2].trans_type==database.BattleEffectTrans.New_Damage_Reduce_Rate)if(0==this.m_battle_general.trans_passive_skill[passive_idx2].trans_passive.action_id)this.addDurabilityEffect(this.m_battle_general.trans_passive_skill[passive_idx2].durability_effects[dur_idx2],base);else{target_list=[],action=MasterManager.getInstance().get_ActionImplementation(this.m_battle_general.trans_passive_skill[passive_idx2].trans_passive.action_id);this.m_battle_general.trans_passive_skill[passive_idx2].durability_effects[dur_idx2].our_enemy==database.BattleSelfOther.Other?target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position):this.m_battle_general.trans_passive_skill[passive_idx2].durability_effects[dur_idx2].our_enemy==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(var t_t_idx=0;t_t_idx<target_list.length;t_t_idx++)target_list[t_t_idx].addDurabilityEffect(this.m_battle_general.trans_passive_skill[passive_idx2].durability_effects[dur_idx2],this)}}else if(damage.attack_type==Hit_Attack_Type.SKILL){if(damage.is_last_hit)for(passive_idx=0;passive_idx<base.getGeneral().trans_passive_skill.length;passive_idx++){var p;if((p=base.getGeneral().trans_passive_skill[passive_idx]).trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_All_Attk_Critical||p.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Skill_Attk_Critical)for(one_idx=0;one_idx<p.onetime_effects.length;one_idx++){if((o=p.onetime_effects[one_idx]).input_ability_type==database.BattleInputAbility.Skill_CoolTime_Dec&&o.output_ability_type==database.BattleOutputAbility.Cooltime)if(0==p.trans_passive.action_id)base.addOnetimeEffect(o);else{target_list=[];(action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id)).enemy_me_type==database.BattleSelfOther.Other?target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position):action.enemy_me_type==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,target_list,action.target_count,action.priority_position));for(t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addOnetimeEffect(o)}else if(o.input_ability_type!=database.BattleInputAbility.Fixed_Value&&o.input_ability_type!=database.BattleInputAbility.Max_Life||o.output_ability_type!=database.BattleOutputAbility.Life){if((o.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Rate_Dec||o.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Dec)&&o.output_ability_type==database.BattleOutputAbility.Cooltime)if(0==p.trans_passive.action_id)base.addOnetimeEffect(o);else{target_list=[];(action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id)).enemy_me_type==database.BattleSelfOther.Other?target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position):action.enemy_me_type==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(t_idx=0;t_idx<target_list.length;t_idx++)31==action.priority_position?target_list[t_idx]!=base&&target_list[t_idx].addOnetimeEffect(o):target_list[t_idx].addOnetimeEffect(o)}}else if(0==p.trans_passive.action_id)base.addOnetimeEffect(o);else{target_list=[];(action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id)).enemy_me_type==database.BattleSelfOther.Other?null!=base._findEnemyTarget&&(target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):action.enemy_me_type==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(t_target_idx=0;t_target_idx<target_list.length;t_target_idx++)31==action.priority_position?target_list[t_target_idx]!=base&&target_list[t_target_idx].addOnetimeEffect(o):target_list[t_target_idx].addOnetimeEffect(o)}}else if(p.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_All_Attk_Critical||p.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Skill_Attk_Critical)for(var dur_idx=0;dur_idx<p.durability_effects.length;dur_idx++){if((dur=$.extend({},p.durability_effects[dur_idx])).trans_type==database.BattleEffectTrans.Stun||dur.trans_type==database.BattleEffectTrans.Silence||dur.trans_type==database.BattleEffectTrans.Poison||dur.trans_type==database.BattleEffectTrans.After_Recv_Damage_Inc_Rate||dur.trans_type==database.BattleEffectTrans.Damage_Reduce||dur.trans_type==database.BattleEffectTrans.New_Poison_Dmg_Rate||dur.trans_type==database.BattleEffectTrans.Wound_Obstruct_Heal||dur.trans_type==database.BattleEffectTrans.Blind_Darkness||dur.trans_type==database.BattleEffectTrans.Freeze||dur.trans_type==database.BattleEffectTrans.Not_Resist_Stun||dur.trans_type==database.BattleEffectTrans.Not_Resist_Silence||dur.trans_type==database.BattleEffectTrans.Not_Resist_Poison||dur.trans_type==database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate||dur.trans_type==database.BattleEffectTrans.Not_Resist_Damage_Reduce||dur.trans_type==database.BattleEffectTrans.Not_Resist_Wound||dur.trans_type==database.BattleEffectTrans.Not_Resist_Blind||dur.trans_type==database.BattleEffectTrans.Not_Resist_Freeze){if(this.checkTransInvinsiblity(dur.trans_type))continue;if(this.findTransType(database.BattleEffectTrans.Golden_Invincibility))continue}rand=parseInt(100*Math.random()+1);if(dur.percent>=rand)if(0==p.trans_passive.action_id)this.addDurabilityEffect(dur,base);else{target_list=[],action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id);dur.our_enemy==database.BattleSelfOther.Other?target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position):dur.our_enemy==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addDurabilityEffect(dur,this)}dur=null}}if(damage.is_first_hit)for(passive_idx2=0;passive_idx2<this.m_battle_general.trans_passive_skill.length;passive_idx2++)if(this.m_battle_general.trans_passive_skill[passive_idx2].trans_passive.invoke_type1,database.BattleInvokeType.BattleInvokeType_All_Hitted_Critical,this.m_battle_general.trans_passive_skill[passive_idx2].trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_All_Hitted_Critical)for(dur_idx2=0;dur_idx2<this.m_battle_general.trans_passive_skill[passive_idx2].durability_effects.length;dur_idx2++)this.m_battle_general.trans_passive_skill[passive_idx2].durability_effects[dur_idx2].trans_type==database.BattleEffectTrans.Critical_Percent_Rate_Inc&&this.addDurabilityEffect(this.m_battle_general.trans_passive_skill[passive_idx2].durability_effects[dur_idx2],base)}base.getTeamType()==BattleGeneral_TeamType.Left&&this.m_game_type==db.BattleGameType.WorldWarNpcDungeon&&(damage_point+=damage_point*base.getMyTeam().getWorldWarCastleSpecialFuncIncStat(this.m_battle_general.general,eCastleSpecialTalent.est_increase_enemy_damage,1)/1e4);if((damage_type=damage.damage_type)==database.DamageType.Normal)if(damage.attack_type==Hit_Attack_Type.SKILL){var skill_charge_count=damage.skill_charge_count;if(1==skill_charge_count)if(0<damage.element_adv_type)switch(damage.element_type){case ELEMENT_TYPE_FIRE:damage_type=database.DamageType.ElementType_Fire_SkillCharge_1;break;case ELEMENT_TYPE_WATER:damage_type=database.DamageType.ElementType_Water_SkillCharge_1;break;case ELEMENT_TYPE_WIND:damage_type=database.DamageType.ElementType_Wind_SkillCharge_1;break;case ELEMENT_TYPE_LIGHT:damage_type=database.DamageType.ElementType_Light_SkillCharge_1;break;case ELEMENT_TYPE_DARK:damage_type=database.DamageType.ElementType_Dark_SkillCharge_1;break;case ELEMENT_TYPE_NONE:default:damage_type=database.DamageType.SkillCharge_1}else damage_type=damage.element_adv_type<0?database.DamageType.ElementType_Weak_SkillCharge_1:database.DamageType.SkillCharge_1;else if(2==skill_charge_count){if(0<damage.element_adv_type)switch(damage.element_type){case ELEMENT_TYPE_FIRE:damage_type=database.DamageType.ElementType_Fire_SkillCharge_2;break;case ELEMENT_TYPE_WATER:damage_type=database.DamageType.ElementType_Water_SkillCharge_2;break;case ELEMENT_TYPE_WIND:damage_type=database.DamageType.ElementType_Wind_SkillCharge_2;break;case ELEMENT_TYPE_LIGHT:damage_type=database.DamageType.ElementType_Light_SkillCharge_2;break;case ELEMENT_TYPE_DARK:damage_type=database.DamageType.ElementType_Dark_SkillCharge_2;break;case ELEMENT_TYPE_NONE:default:damage_type=database.DamageType.SkillCharge_2}else damage_type=damage.element_adv_type<0?database.DamageType.ElementType_Weak_SkillCharge_2:database.DamageType.SkillCharge_2}else if(3==skill_charge_count){if(0<damage.element_adv_type)switch(damage.element_type){case ELEMENT_TYPE_FIRE:damage_type=database.DamageType.ElementType_Fire_SkillCharge_3;break;case ELEMENT_TYPE_WATER:damage_type=database.DamageType.ElementType_Water_SkillCharge_3;break;case ELEMENT_TYPE_WIND:damage_type=database.DamageType.ElementType_Wind_SkillCharge_3;break;case ELEMENT_TYPE_LIGHT:damage_type=database.DamageType.ElementType_Light_SkillCharge_3;break;case ELEMENT_TYPE_DARK:damage_type=database.DamageType.ElementType_Dark_SkillCharge_3;break;case ELEMENT_TYPE_NONE:default:damage_type=database.DamageType.SkillCharge_3}else damage_type=damage.element_adv_type<0?database.DamageType.ElementType_Weak_SkillCharge_3:database.DamageType.SkillCharge_3}}else if(damage.element_adv_type<0)damage_type=database.DamageType.ElementAdv_Weak;else if(0<damage.element_adv_type){switch(damage.element_type){case ELEMENT_TYPE_FIRE:damage_type=database.DamageType.ElementType_Fire;break;case ELEMENT_TYPE_WATER:damage_type=database.DamageType.ElementType_Water;break;case ELEMENT_TYPE_WIND:damage_type=database.DamageType.ElementType_Wind;break;case ELEMENT_TYPE_LIGHT:damage_type=database.DamageType.ElementType_Light;break;case ELEMENT_TYPE_DARK:damage_type=database.DamageType.ElementType_Dark;break;case ELEMENT_TYPE_NONE:default:damage_type=database.DamageType.Normal}}for(var md_idx=0;md_idx<this.m_durability_effects.length;md_idx++)this.m_durability_effects[md_idx].trans_type==database.BattleEffectTrans.Our_Team_Damage_Dec&&(damage_point=this.DamageDispersion(base,damage_point,damage.damage_type,log));if(this.IsAlive()){if(base.getTeamType()==BattleGeneral_TeamType.Left&&damage.damage_type!=database.DamageType.Miss&&(this.m_my_team.IsCutinStage()?base.m_my_team.addEventDungeonCutinAccumDamage(damage_point):this.m_game_type==db.BattleGameType.RaidDungeon?base.m_my_team.addEventDungeonCutinAccumDamage(damage_point):this.m_game_type==db.BattleGameType.EventMussangBossDungeon?base.m_my_team.addEventDungeonMusssangBossAccumDamage(damage_point):this.m_game_type==db.BattleGameType.EventRaidDungeon&&base.m_my_team.addEventRaidAccumDamage(damage_point)),null!=this._cbEventListenerFieldMng){(evt=new battle.Event).floatValue=damage_point,evt.dataValue1=this,evt.intValue=damage_type;for(var dura_idx=0;dura_idx<this.m_durability_effects.length;dura_idx++){var dura=this.m_durability_effects[dura_idx];dura.trans_type==database.BattleEffectTrans.HP_Shield_Caster_Max_HP||dura.trans_type==database.BattleEffectTrans.Darkness_Shield||dura.trans_type==database.BattleEffectTrans.HP_Shield_Caster_Heal_Value?dura.life_shield>evt.floatValue?evt.floatValue=0:evt.floatValue-=dura.life_shield:dura.trans_type==database.BattleEffectTrans.Golden_Invincibility&&(evt.floatValue=0,damage_type=database.DamageType.Normal,evt.intValue=parseInt(damage_type))}this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_DAMAGE_SHOW,evt),evt=null}else cc.log("************************* cant find '_cbEventListenerFieldMng' ************************");if(damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3){for(idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++){var ts=this.m_battle_general.trans_passive_skill[idx];if(ts.trans_passive.invoke_type1,database.BattleInvokeType.BattleInvokeType_Normal_Hitted,ts.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Normal_Hitted)for(jdx=0;jdx<ts.durability_effects.length;jdx++){if(ts.durability_effects[jdx].trans_type==database.BattleEffectTrans.Stun||ts.durability_effects[jdx].trans_type==database.BattleEffectTrans.Silence||ts.durability_effects[jdx].trans_type==database.BattleEffectTrans.Poison||ts.durability_effects[jdx].trans_type==database.BattleEffectTrans.After_Recv_Damage_Inc_Rate||ts.durability_effects[jdx].trans_type==database.BattleEffectTrans.Damage_Reduce||ts.durability_effects[jdx].trans_type==database.BattleEffectTrans.New_Poison_Dmg_Rate||ts.durability_effects[jdx].trans_type==database.BattleEffectTrans.Wound_Obstruct_Heal||ts.durability_effects[jdx].trans_type==database.BattleEffectTrans.Blind_Darkness||ts.durability_effects[jdx].trans_type==database.BattleEffectTrans.Freeze||ts.durability_effects[jdx].trans_type==database.BattleEffectTrans.Not_Resist_Stun||ts.durability_effects[jdx].trans_type==database.BattleEffectTrans.Not_Resist_Silence||ts.durability_effects[jdx].trans_type==database.BattleEffectTrans.Not_Resist_Poison||ts.durability_effects[jdx].trans_type==database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate||ts.durability_effects[jdx].trans_type==database.BattleEffectTrans.Not_Resist_Damage_Reduce||ts.durability_effects[jdx].trans_type==database.BattleEffectTrans.Not_Resist_Wound||ts.durability_effects[jdx].trans_type==database.BattleEffectTrans.Not_Resist_Blind||ts.durability_effects[jdx].trans_type==database.BattleEffectTrans.Not_Resist_Freeze){if(this.checkTransInvinsiblity(ts.durability_effects[jdx].trans_type))continue;if(base.findTransType(database.BattleEffectTrans.Golden_Invincibility))continue}if(damage.is_first_hit&&((0==ts.durability_effects[jdx].element_type||ts.durability_effects[jdx].element_type==base.getGeneral().general.element_type)&&!(0!=ts.durability_effects[jdx].arm_service_type&&ts.durability_effects[jdx].arm_service_type!=base.getGeneral().general.arm_service_type||0!=ts.durability_effects[jdx].fight_type&&ts.durability_effects[jdx].fight_type!=base.getGeneral().general.fight_type))){rand=parseInt(100*Math.random()+1);for(var trans_resist_value=0,kdx=0,len2=this.m_battle_general.resistance.length;kdx<len2;kdx++)this.m_battle_general.resistance[kdx].trans_type==ts.durability_effects[jdx].trans_type&&(trans_resist_value+=this.m_battle_general.resistance[kdx].resist_value);trans_resist_value+=base.m_my_team.getLeaderSkillTransResistBufPoint(ts.durability_effects[jdx].trans_type,this.m_battle_general),trans_resist_value+=base.m_my_team.getSpecialLeaderSkillTransResistBufPoint(ts.durability_effects[jdx].trans_type,this.m_battle_general),trans_resist_value+=base.m_my_team.getFriendLeaderSkillTransResistBufPoint(ts.durability_effects[jdx].trans_type,this.m_battle_general),trans_resist_value+=base.getEventDungeonGnrlTransResistBuf(ts.durability_effects[jdx].trans_type),trans_resist_value+=base.durabilityBufResistPoint(ts.durability_effects[jdx].trans_type),rand<=(percent=ts.durability_effects[jdx].percent-trans_resist_value)&&base.addDurabilityEffect(ts.durability_effects[jdx],this)}}}if(this.findTransType(database.BattleEffectTrans.Reflect_Damage)&&0<damage_point&&damage.is_first_hit){var reflect_damage_type=database.DamageType.Reflect_Damage,reflect_damage=damage_point*this.durabilityBufPoint(database.BattleEffectTrans.Reflect_Damage)/100;this.m_team_type==BattleGeneral_TeamType.Left&&(this.m_game_type==db.BattleGameType.RaidDungeon?this.m_my_team.addEventDungeonCutinAccumDamage(reflect_damage):this.m_my_team.IsCutinStage()?this.m_my_team.addEventDungeonCutinAccumDamage(damage_point):this.m_game_type==db.BattleGameType.EventMussangBossDungeon?this.m_my_team.addEventDungeonMusssangBossAccumDamage(reflect_damage):this.m_game_type==db.BattleGameType.EventRaidDungeon&&this.m_my_team.addEventRaidAccumDamage(reflect_damage)),this.findTransType(database.BattleEffectTrans.Blind_Darkness)||this.findTransType(database.BattleEffectTrans.Not_Resist_Blind)?(reflect_damage=0,reflect_damage_type=database.DamageType.Miss):this.findTransType(database.BattleEffectTrans.Golden_Invincibility)&&(reflect_damage=0,reflect_damage_type=database.DamageType.Normal),base.selfLifeDown(reflect_damage);for(dura_idx=0;dura_idx<base.m_durability_effects.length;dura_idx++)base.m_durability_effects[dura_idx].trans_type!=database.BattleEffectTrans.HP_Shield_Caster_Max_HP&&base.m_durability_effects[dura_idx].trans_type!=database.BattleEffectTrans.Darkness_Shield&&base.m_durability_effects[dura_idx].trans_type!=database.BattleEffectTrans.HP_Shield_Caster_Heal_Value||(base.m_durability_effects[dura_idx].life_shield>reflect_damage?reflect_damage=0:reflect_damage-=base.m_durability_effects[dura_idx].life_shield);if(!base.IsAlive()){var check_gnrl_group=247;this.m_battle_general.general.gnrl_group;for(passive_idx=0;passive_idx<this.m_battle_general.trans_passive_skill.length;passive_idx++)this.m_battle_general.trans_passive_skill[passive_idx].trans_passive.invoke_type1!=database.BattleInvokeType.BattleInvokeType_Dead_At&&this.m_battle_general.trans_passive_skill[passive_idx].trans_passive.invoke_type2!=database.BattleInvokeType.BattleInvokeType_Dead_At||base.deathTransPassiveSkill(this.m_battle_general.trans_passive_skill[passive_idx],this);this.killedGeneralByBase(base,damage.attack_type)}if(null!=this._cbEventListenerFieldMng)(evt=new battle.Event).floatValue=reflect_damage,evt.dataValue1=base,evt.intValue=reflect_damage_type,this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_DAMAGE_SHOW,evt);if(null!=this._cbEventListenerUIMng)(evt=new battle.Event).intValue=base.getTeamType(),evt.dataValue1=base,this._cbEventListenerUIMng.EventListenerFromGeneral(EventCode.EVT_UI_MNG_HITTED,evt),evt=null}if(0<damage_point){var base_map_damage=[];base_map_damage[0]=[this.m_battle_general.gnrl_id,this.m_battle_general.position];var found=base.m_map_damage.find(base_map_damage[0]),found_value=base.m_map_damage.at(base_map_damage[0]),dmg_list=[];if(1==found&&(dmg_list=found_value),0==dmg_list.size()){var equip_onetime_effects=[];this.getEquipmentOnetimeEffect(this.m_battle_general,database.BattleInvokeType.BattleInvokeType_Normal_Hitted_Counter,equip_onetime_effects);var counter_rate=0;for(kdx=0;kdx<equip_onetime_effects.length;kdx++){(o=equip_onetime_effects[kdx]).our_enemy==database.BattleSelfOther.Other&&(counter_rate+=o.rate)}if(0<counter_rate)if(parseInt(1e4*Math.random()+1)<counter_rate&&0!=equip_onetime_effects.length){var origin_attk=this.getAttackPoint(),attk=origin_attk,calc_attk=attk,gnrl_id=base.getGeneral().general.gnrl_id,d=(base.getBattlePosition(),new Damage),element_advance_attk_buf_rate=base.checkElementAdvanceTargetDamage(this);calc_attk+=attk*element_advance_attk_buf_rate/100,d.origin_damage=origin_attk,d.shared_point=100,d.gnrl_id=gnrl_id,d.damage_type=database.DamageType.Normal,d.hit_point=2,d.damage=calc_attk,0<element_advance_attk_buf_rate&&(d.is_element_trans_buf=!0,d.attk_element_type_buf=element_advance_attk_buf_rate),element_advance_attk_buf_rate<0?d.element_adv_type=-1:0<element_advance_attk_buf_rate&&(d.element_adv_type=1),d.attack_type=Hit_Attack_Type.ATTACK_1;var temp_log=new DamageLog,attk_dmg=base.getCalcDamage(this,d,temp_log,!1),effect=equip_onetime_effects[0],equip_reflect_damage_type=database.DamageType.Counter_Damage;this.findTransType(database.BattleEffectTrans.Blind_Darkness)||this.findTransType(database.BattleEffectTrans.Not_Resist_Blind)?(attk_dmg=0,equip_reflect_damage_type=database.DamageType.Miss):base.findTransType(database.BattleEffectTrans.Golden_Invincibility)&&(attk_dmg=0,equip_reflect_damage_type=database.DamageType.Miss);var min_value=effect.value,max_value=Math.max(effect.value,effect.max_value),point=attk_dmg*(Math.random()*(max_value-min_value)+min_value)/100;if(this.m_team_type==BattleGeneral_TeamType.Left&&(this.m_game_type==db.BattleGameType.RaidDungeon?this.m_my_team.addEventDungeonCutinAccumDamage(point):this.m_my_team.IsCutinStage()?this.m_my_team.addEventDungeonCutinAccumDamage(point):this.m_game_type==db.BattleGameType.EventMussangBossDungeon?this.m_my_team.addEventDungeonMusssangBossAccumDamage(point):this.m_game_type==db.BattleGameType.EventRaidDungeon&&this.m_my_team.addEventRaidAccumDamage(point)),base.selfLifeDown(point),null!=this._cbEventListenerFieldMng)(evt=new battle.Event).floatValue=point,evt.dataValue1=base,evt.intValue=equip_reflect_damage_type,this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_DAMAGE_SHOW,evt),evt=null;if(null!=this._cbEventListenerUIMng)(evt=new battle.Event).intValue=base.getTeamType(),evt.dataValue1=base,this._cbEventListenerUIMng.EventListenerFromGeneral(EventCode.EVT_UI_MNG_HITTED,evt),evt=null;d=null}}}}else if(damage.attack_type==Hit_Attack_Type.SKILL)for(idx=0;idx<this.m_durability_effects.length;idx++)if(this.m_durability_effects[idx].trans_type==database.BattleEffectTrans.Reflect_Damage_Skill&&damage.is_first_hit&&this.m_durability_effects[idx].use_count<this.m_durability_effects[idx].durability.dura_end_effect){reflect_damage=damage_point/damage.shared_point*100*this.m_durability_effects[idx].value/100,reflect_damage_type=database.DamageType.Reflect_Damage;if(this.m_team_type==BattleGeneral_TeamType.Left&&(this.m_game_type==db.BattleGameType.RaidDungeon?this.m_my_team.addEventDungeonCutinAccumDamage(reflect_damage):this.m_my_team.IsCutinStage()?this.m_my_team.addEventDungeonCutinAccumDamage(reflect_damage):this.m_game_type==db.BattleGameType.EventMussangBossDungeon?this.m_my_team.addEventDungeonMusssangBossAccumDamage(reflect_damage):this.m_game_type==db.BattleGameType.EventRaidDungeon&&this.m_my_team.addEventRaidAccumDamage(reflect_damage)),this.findTransType(database.BattleEffectTrans.Blind_Darkness)||this.findTransType(database.BattleEffectTrans.Not_Resist_Blind)?(reflect_damage=0,reflect_damage_type=database.DamageType.Miss):this.findTransType(database.BattleEffectTrans.Golden_Invincibility)&&(reflect_damage=0,reflect_damage_type=database.DamageType.Normal),this.m_durability_effects[idx].durability.repeat_effect<=reflect_damage&&0!=this.m_durability_effects[idx].durability.repeat_effect&&(reflect_damage=this.m_durability_effects[idx].durability.repeat_effect),base.selfLifeDown(reflect_damage),!base.IsAlive()){check_gnrl_group=247;this.m_battle_general.general.gnrl_group;for(passive_idx=0;passive_idx<this.m_battle_general.trans_passive_skill.length;passive_idx++)this.m_battle_general.trans_passive_skill[passive_idx].trans_passive.invoke_type1!=database.BattleInvokeType.BattleInvokeType_Dead_At&&this.m_battle_general.trans_passive_skill[passive_idx].trans_passive.invoke_type2!=database.BattleInvokeType.BattleInvokeType_Dead_At||base.deathTransPassiveSkill(this.m_battle_general.trans_passive_skill[passive_idx],this);if(this.killedGeneralByBase(base,damage.attack_type),this.m_team_type==BattleGeneral_TeamType.Right&&null!=base._cbEventListenerFieldMng){var e=new battle.Event;base._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_CHANGE_BG_END,e),e=null}}if(this.m_team_type==BattleGeneral_TeamType.Left&&(this.m_game_type==db.BattleGameType.RaidDungeon?this.m_my_team.addEventDungeonCutinAccumDamage(reflect_damage):this.m_my_team.IsCutinStage()?this.m_my_team.addEventDungeonCutinAccumDamage(reflect_damage):this.m_game_type==db.BattleGameType.EventMussangBossDungeon?this.m_my_team.addEventDungeonMusssangBossAccumDamage(reflect_damage):this.m_game_type==db.BattleGameType.EventRaidDungeon&&this.m_my_team.addEventRaidAccumDamage(reflect_damage)),++this.m_durability_effects[idx].use_count,this.m_durability_effects[idx].use_count>=this.m_durability_effects[idx].durability.dura_end_effect&&(this.m_durability_effects[idx].delta_duration=this.m_durability_effects[idx].duration,this.m_durability_effects[idx].is_end=!0),null!=this._cbEventListenerFieldMng)(evt=new battle.Event).floatValue=reflect_damage,evt.dataValue1=base,evt.intValue=reflect_damage_type,this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_DAMAGE_SHOW,evt);if(null!=this._cbEventListenerUIMng)(evt=new battle.Event).intValue=base.getTeamType(),evt.dataValue1=base,this._cbEventListenerUIMng.EventListenerFromGeneral(EventCode.EVT_UI_MNG_HITTED,evt),evt=null}}if(this.hitEffectShow(damage_type,damage.hit_point),damage.damage_type!=database.DamageType.Miss&&this.selfLifeDown(damage_point,2),!this.IsAlive()){check_gnrl_group=28;this.m_battle_general.general.gnrl_group==check_gnrl_group&&cc.log("check Death");for(idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++){(passive=this.m_battle_general.trans_passive_skill[idx]).trans_passive.invoke_type1!=database.BattleInvokeType.BattleInvokeType_Dead_At&&passive.trans_passive.invoke_type2!=database.BattleInvokeType.BattleInvokeType_Dead_At||this.deathTransPassiveSkill(passive,base)}base.killedGeneralByBase(this,damage.attack_type)}var trans_passive_ones=[];if(this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_All_Hitted_Critical,trans_passive_ones),1==damage.is_first_hit&&damage.damage_type==database.DamageType.Critical)for(var t_p_idx=0;t_p_idx<trans_passive_ones.length;t_p_idx++){var Cri_Hit_Heal=$.extend({},trans_passive_ones[t_p_idx]);if(Cri_Hit_Heal.input_ability_type==database.BattleInputAbility.Max_Life&&Cri_Hit_Heal.output_ability_type==database.BattleOutputAbility.Life){var Cri_Hit_Heal_From_Maxhp=new database.BattleOneTimeEffect;Cri_Hit_Heal_From_Maxhp.input_ability_type=database.BattleInputAbility.Max_Life,Cri_Hit_Heal_From_Maxhp.output_ability_type=database.BattleOutputAbility.Life,Cri_Hit_Heal_From_Maxhp.max_value=Cri_Hit_Heal.max_value,Cri_Hit_Heal_From_Maxhp.value=Cri_Hit_Heal.value,Cri_Hit_Heal_From_Maxhp.rate=Cri_Hit_Heal.rate;found=0;for(var passive,found_is=!1,i_tp_idx=0;i_tp_idx<this.m_battle_general.trans_passive_skill.length;i_tp_idx++)if(found=i_tp_idx,this.m_battle_general.trans_passive_skill[i_tp_idx].trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_All_Hitted_Critical){found_is=!0;break}if(1==found_is)if(0==(passive=this.m_battle_general.trans_passive_skill[found]).trans_passive.action_id)this.addOnetimeEffect(Cri_Hit_Heal_From_Maxhp);else{target_list=[],action=MasterManager.getInstance().get_ActionImplementation(passive.trans_passive.action_id);Cri_Hit_Heal_From_Maxhp.our_enemy==database.BattleSelfOther.Other?null!=this._findEnemyTarget&&(target_list=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position)):Cri_Hit_Heal_From_Maxhp.our_enemy==database.BattleSelfOther.Self&&(target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position));for(var t_idx_tp=0;t_idx_tp<target_list.length;t_idx_tp++)target_list[t_idx_tp].addOnetimeEffect(Cri_Hit_Heal_From_Maxhp)}else this.addOnetimeEffect(Cri_Hit_Heal_From_Maxhp)}}var buf_dur_effects=[];base.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_Normal_Attack,buf_dur_effects);for(var buf_dur_effect_idx=0;buf_dur_effect_idx<buf_dur_effects.length;buf_dur_effect_idx++){if((d=$.extend({},buf_dur_effects[buf_dur_effect_idx])).trans_type==database.BattleEffectTrans.Onetime_Effect_Call_Exec)for(var o_buf_dur_effect_idx=0;o_buf_dur_effect_idx<d.end_effects.length;o_buf_dur_effect_idx++){(o=$.extend({},d.end_effects[o_buf_dur_effect_idx])).our_enemy==database.BattleSelfOther.Other&&(o.input_ability_type==database.BattleInputAbility.Life&&o.output_ability_type==database.BattleOutputAbility.Damage?damage.is_first_hit&&this.addOnetimeEffect(o):this.addOnetimeEffect(o)),o=null}d=null}for(var passive_idx_i=0;passive_idx_i<this.m_battle_general.trans_passive_skill.length;passive_idx_i++){if(this.m_battle_general.trans_passive_skill[passive_idx_i].trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_All_Hitted)for(var dur_jdx_j=0;dur_jdx_j<this.m_battle_general.trans_passive_skill[passive_idx_i].durability_effects.length;dur_jdx_j++)if(0==this.m_battle_general.trans_passive_skill[passive_idx_i].trans_passive.action_id)this.m_battle_general.trans_passive_skill[passive_idx_i].durability_effects[dur_jdx_j].our_enemy==database.BattleSelfOther.Self?damage.is_last_hit&&this.addDurabilityEffect(this.m_battle_general.trans_passive_skill[passive_idx_i].durability_effects[dur_jdx_j],base):this.m_battle_general.trans_passive_skill[passive_idx_i].durability_effects[dur_jdx_j].our_enemy==database.BattleSelfOther.Other&&damage.is_last_hit&&base.addDurabilityEffect(this.m_battle_general.trans_passive_skill[passive_idx_i].durability_effects[dur_jdx_j],base);else if(damage.is_last_hit){target_list=[],action=MasterManager.getInstance().get_ActionImplementation(this.m_battle_general.trans_passive_skill[passive_idx_i].trans_passive.action_id);this.m_battle_general.trans_passive_skill[passive_idx_i].durability_effects[dur_jdx_j].our_enemy==database.BattleSelfOther.Other?target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position):this.m_battle_general.trans_passive_skill[passive_idx_i].durability_effects[dur_jdx_j].our_enemy==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(var t_idx_k=0;t_idx_k<target_list.length;t_idx_k++)target_list[t_idx_k].addDurabilityEffect(this.m_battle_general.trans_passive_skill[passive_idx_i].durability_effects[dur_jdx_j],this)}if(this.m_battle_general.trans_passive_skill[passive_idx_i].trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_All_Hitted&&null!=this.m_battle_general.trans_passive_skill[passive_idx_i].onetime_effects)for(var trans_passive_one_jdx=0;trans_passive_one_jdx<this.m_battle_general.trans_passive_skill[passive_idx_i].onetime_effects.length;trans_passive_one_jdx++)if(damage.is_first_hit){if(this.m_battle_general.trans_passive_skill[passive_idx_i].onetime_effects[trans_passive_one_jdx].stat_trans==database.BattleEffectTrans.Hitted_Add_Stack_WanKo&&this.m_battle_general.trans_passive_skill[passive_idx_i].onetime_effects[trans_passive_one_jdx].onetime_effect.limit_value>this.m_battle_general.stack_wanko&&(++this.m_battle_general.hit_count_wanko,this.m_battle_general.trans_passive_skill[passive_idx_i].onetime_effects[trans_passive_one_jdx].sub_value<=this.m_battle_general.hit_count_wanko))for(var passive_dur_idx=this.m_battle_general.hit_count_wanko=0;passive_dur_idx<this.m_battle_general.trans_passive_skill[passive_idx_i].durability_effects.length;passive_dur_idx++)this.m_battle_general.trans_passive_skill[passive_idx_i].durability_effects[passive_dur_idx].trans_type==database.BattleEffectTrans.Hitted_Add_Stack_WanKo&&(this.addDurabilityEffect(this.m_battle_general.trans_passive_skill[passive_idx_i].durability_effects[passive_dur_idx],base),++this.m_battle_general.stack_wanko)}else{target_list=[],action=MasterManager.getInstance().get_ActionImplementation(this.m_battle_general.trans_passive_skill[passive_idx_i].trans_passive.action_id);this.m_battle_general.trans_passive_skill[passive_idx_i].onetime_effects[trans_passive_one_jdx].our_enemy==database.BattleSelfOther.Other?null!=this._findEnemyTarget&&(target_list=this._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):this.m_battle_general.trans_passive_skill[passive_idx_i].onetime_effects[trans_passive_one_jdx].our_enemy==database.BattleSelfOther.Self&&(target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position));for(var t_target_jdx2=0;t_target_jdx2<target_list.length;t_target_jdx2++)target_list[t_target_jdx2].addOnetimeEffect(this.m_battle_general.trans_passive_skill[passive_idx_i].onetime_effects[trans_passive_one_jdx])}}for(o_idx=0;o_idx<damage.onetime_effects.length;o_idx++){(o=damage.onetime_effects[o_idx]).our_enemy==database.BattleSelfOther.Self?(o.input_ability_type==database.BattleInputAbility.Damage&&(o.damage=damage_point),o.input_ability_type==database.BattleInputAbility.Attack&&(o.damage=damage.origin_damage*(damage.shared_point/100)),base.addOnetimeEffect(o,o.stat_trans)):(o.input_ability_type==database.BattleInputAbility.Caster_Life?o.damage=base.getCurrentLifePoint():o.input_ability_type==database.BattleInputAbility.Fixed_Value&&o.output_ability_type==database.BattleOutputAbility.Damage&&(o.value=base.getAttackPoint()),this.addOnetimeEffect(o,o.stat_trans))}var duration_plus=0,damage_plus=0,invoke_plus=0;1<base.m_current_skill_charge_count&&(duration_plus=base.getSkillChargeBuf(SKILL_CHARGE_ATTR_DURABILITY,SKILL_CHARGE_EFFECT_TYPE_DURABILITY_SECOND,base.m_current_skill_charge_count),damage_plus=base.getSkillChargeBuf(SKILL_CHARGE_ATTR_DURABILITY,SKILL_CHARGE_EFFECT_TYPE_ABILITY_VALUE,base.m_current_skill_charge_count),invoke_plus=base.getSkillChargeBuf(SKILL_CHARGE_ATTR_DURABILITY,SKILL_CHARGE_EFFECT_TYPE_INVOKE_RATE,base.m_current_skill_charge_count));var base_gnrl=base.getGeneral();try{var dura_random=base_gnrl.active_skill[0].skill.dura_random}catch(e){cc.log("e")}for(var evt,is_dura_random_checked=!1,i=0,len=damage.durability_effects.length;i<len;i++)if(this.RandomTransDurCheck(damage.durability_effects[i]),(damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Stun&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Silence&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Poison&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.After_Recv_Damage_Inc_Rate&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Damage_Reduce&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.New_Poison_Dmg_Rate&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Wound_Obstruct_Heal&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Blind_Darkness&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Freeze&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Stun&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Silence&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Poison&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Damage_Reduce&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Wound&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Blind&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Freeze||!this.checkTransInvinsiblity(damage.durability_effects[i].trans_type))&&!this.findTransType(database.BattleEffectTrans.Golden_Invincibility)){0!=damage.durability_effects[i].durability.extra_rate_arm_service_type&&damage.durability_effects[i].durability.extra_rate_arm_service_type==this.getArmServiceType()&&(invoke_plus+=damage.durability_effects[i].durability.arm_service_type_extra_rate),0!=damage.durability_effects[i].durability.extra_rate_element_type&&damage.durability_effects[i].durability.extra_rate_element_type==this.getElementType()&&(invoke_plus+=damage.durability_effects[i].durability.element_type_extra_rate);rand=parseInt(100*Math.random()+1);var not_resist_trans_type=0;switch(damage.durability_effects[i].trans_type){case database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate:not_resist_trans_type=database.BattleEffectTrans.After_Recv_Damage_Inc_Rate;break;case database.BattleEffectTrans.Not_Resist_Freeze:not_resist_trans_type=database.BattleEffectTrans.Freeze;break;case database.BattleEffectTrans.Not_Resist_Damage_Reduce:not_resist_trans_type=database.BattleEffectTrans.Damage_Reduce;break;case database.BattleEffectTrans.Not_Resist_Stun:not_resist_trans_type=database.BattleEffectTrans.Stun;break;case database.BattleEffectTrans.Not_Resist_Poison:not_resist_trans_type=database.BattleEffectTrans.New_Poison_Dmg_Rate;break;case database.BattleEffectTrans.Not_Resist_Silence:not_resist_trans_type=database.BattleEffectTrans.Silence;break;case database.BattleEffectTrans.Not_Resist_Wound:not_resist_trans_type=database.BattleEffectTrans.Wound_Obstruct_Heal;break;case database.BattleEffectTrans.Not_Resist_Blind:not_resist_trans_type=database.BattleEffectTrans.Blind_Darkness}trans_resist_value=0;var j=0;for(len2=this.m_battle_general.resistance.length;j<len2;j++){if(damage.durability_effects[i].trans_type==this.m_battle_general.resistance[j].trans_type){trans_resist_value=this.m_battle_general.resistance[j].resist_value;break}if(0!=not_resist_trans_type&&not_resist_trans_type==this.m_battle_general.resistance[j].trans_type){trans_resist_value=this.m_battle_general.resistance[j].resist_value;break}}var res_point=0;damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Stun&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Silence&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Poison&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.After_Recv_Damage_Inc_Rate&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Damage_Reduce&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.New_Poison_Dmg_Rate&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Wound_Obstruct_Heal&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Blind_Darkness&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Freeze&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Stun&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Silence&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Poison&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Damage_Reduce&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Wound&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Blind&&damage.durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Freeze||(res_point+=this.m_my_team.getLeaderSkillTransResistBufPoint(damage.durability_effects[i].trans_type,this.m_battle_general),res_point+=this.m_my_team.getSpecialLeaderSkillTransResistBufPoint(damage.durability_effects[i].trans_type,this.m_battle_general),res_point+=this.m_my_team.getFriendLeaderSkillTransResistBufPoint(damage.durability_effects[i].trans_type,this.m_battle_general),res_point+=this.getEventDungeonGnrlTransResistBuf(damage.durability_effects[i].trans_type),res_point+=this.durabilityBufResistPoint(damage.durability_effects[i].trans_type),res_point+=this.getEquipmentOptionStatBuff(database.BattleChainStatType.ChainStatType_All_Resistance_Inc_Value)/100,res_point+=this.m_my_team.getPassiveSkillBufPoint(database.BattleChainStatType.ChainStatType_All_Resistance_Inc_Value,this.m_battle_general)),this.IsDurabilityResistZeroCheck(damage.durability_effects[i].trans_type)&&(0<trans_resist_value&&(trans_resist_value=0),0<res_point&&(res_point=0)),trans_resist_value+=res_point,log._trans_resist_value=trans_resist_value;var percent=damage.durability_effects[i].percent+invoke_plus-trans_resist_value;if(damage.durability_effects[i].trans_type==database.BattleEffectTrans.Element_Type_Fire_Trans||damage.durability_effects[i].trans_type==database.BattleEffectTrans.Element_Type_Water_Trans||damage.durability_effects[i].trans_type==database.BattleEffectTrans.Element_Type_Wind_Trans||damage.durability_effects[i].trans_type==database.BattleEffectTrans.Element_Type_Dark_Trans||damage.durability_effects[i].trans_type==database.BattleEffectTrans.Element_Type_Light_Trans)0!=damage.durability_effects[i].durability.state_type&&damage.durability_effects[i].durability.state_type==this.m_battle_general.general.state_type&&(percent+=damage.durability_effects[i].durability.state_type_value),rand<=percent&&(damage.durability_effects[i].damage=damage.origin_damage+damage.origin_damage*damage_plus/100,damage.durability_effects[i].duration+=duration_plus,this.addDurabilityEffect(damage.durability_effects[i],base),log._trans=damage.durability_effects[i].trans_type);else if(1==dura_random){if(!is_dura_random_checked){var is_dur_enable=!0;0!=damage.durability_effects[i].arm_service_type&&damage.durability_effects[i].arm_service_type!=this.getArmServiceType()&&(is_dur_enable=!1),0!=damage.durability_effects[i].element_type&&damage.durability_effects[i].element_type!=this.getElementType()&&(is_dur_enable=!1),0!=damage.durability_effects[i].fight_type&&damage.durability_effects[i].fight_type!=this.getFightType()&&(is_dur_enable=!1),rand<=percent&&is_dur_enable&&(damage.durability_effects[i].damage=damage.origin_damage+damage.origin_damage*damage_plus/100,damage.durability_effects[i].duration+=duration_plus,this.addDurabilityEffect(damage.durability_effects[i],base),log._trans=damage.durability_effects[i].trans_type,is_dura_random_checked=!0)}}else{is_dur_enable=!0;0!=damage.durability_effects[i].arm_service_type&&damage.durability_effects[i].arm_service_type!=this.getArmServiceType()&&(is_dur_enable=!1),0!=damage.durability_effects[i].element_type&&damage.durability_effects[i].element_type!=this.getElementType()&&(is_dur_enable=!1),0!=damage.durability_effects[i].fight_type&&damage.durability_effects[i].fight_type!=this.getFightType()&&(is_dur_enable=!1),rand<=percent&&is_dur_enable&&(damage.durability_effects[i].damage=damage.origin_damage+damage.origin_damage*damage_plus/100,damage.durability_effects[i].duration+=duration_plus,this.addDurabilityEffect(damage.durability_effects[i],base),log._trans=damage.durability_effects[i].trans_type)}}null!=this._cbEventListenerUIMng&&((evt=new battle.Event).intValue=this.m_team_type,(evt.dataValue1=this)._cbEventListenerUIMng.EventListenerFromGeneral(EventCode.EVT_UI_MNG_HITTED,evt),evt=null);return log._damage_type=damage_type,log._shared_point=damage.shared_point,log._cur_life=this.getCurrentLifePoint(),log._damage=damage_point,log._origin_damage=damage.origin_damage,damage_type==database.DamageType.Miss&&(log._is_miss=!0),"number"!=typeof log._damage&&cc.log("eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee"),this.addDamageLogDebug(log),!(log=damage=base=base_gnrl=null)},getFightType:function(){return this.m_battle_general.general.fight_type},deathFxPlay:function(fx_id){var part_arr=this.findFxPartByFxId(fx_id),part=part_arr[1];if(1==part_arr[0]){var fx=this.recycledFxNode(part);this.m_fx_used.push(fx);var flip_x=this.m_sk._skeleton.flipX;if(part.is_used_flip?fx.setFlipX(flip_x):fx.setFlipX(0),fx.setPosition(ZERO()),this.addChild(fx,part.fx_layer),fx.runFXAnimation(FX_Animation.FX_GRADE_1),fx.setReserveRemove(!0),""!=part.fx_sound&&this.last_use_effect!=part.fx_sound){var audio=AudioEngine.getInstance(),path=RES_CDN_SOUND+SND_TYPE+"sound/"+part.fx_sound;audio.playEffect(path),this.last_use_effect=part.fx_sound}fx=flip_x=null}part=part_arr=null},deathTransPassiveSkill:function(passive,target){var damages=passive.action.damages,is_skill_charge=!1;if(passive.action.our_enemy==database.BattleSelfOther.Self){this.m_target_ours=this.m_my_team.findOurTarget(this,passive.action.target_count,passive.action.priority_position);for(var is_self_reborn=!1,idx_dur=0;idx_dur<this.m_durability_effects.length;idx_dur++)if(this.m_durability_effects[idx_dur].trans_type==database.BattleEffectTrans.Good_Trans_Invincibility_Mode)return;if(passive.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Dead_At||passive.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Self_Reborn)for(var idx=0;idx<passive.onetime_effects.length;idx++){if((o=passive.onetime_effects[idx]).stat_trans==database.BattleEffectTrans.Self_New_Reborn){if(1==this.m_is_reborn_enable)continue;this.IsAlive()||0!=passive.reborn_count||0<passive.durability_effects.length&&(this.selfRebornReserved(o,passive.durability_effects[0]),passive.reborn_count+=1,is_self_reborn=!0,267==this.m_battle_general.general.gnrl_group&&(this.m_battle_general.m_Is_Reborn_Active_Max_Charge=!0))}}if(!is_self_reborn&&0<this.m_target_ours.size()){if(passive.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Dead_At&&!is_self_reborn)for(idx=0;idx<this.m_target_ours.length;idx++)for(var t=this.m_target_ours[idx],jdx=0;jdx<passive.onetime_effects.length;jdx++){var o;if((o=passive.onetime_effects[jdx]).stat_trans!=database.BattleEffectTrans.Self_New_Reborn&&o.stat_trans!=database.BattleEffectTrans.New_Reborn&&o.stat_trans!=database.BattleEffectTrans.Active_Skill_Force_Charge_1&&o.stat_trans!=database.BattleEffectTrans.Active_Skill_Force_Charge_2&&o.stat_trans!=database.BattleEffectTrans.Active_Skill_Force_Charge_3)o.damage=this.getAttackPoint(),t.addOnetimeEffect(o);else if((o.stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_1||o.stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_2||o.stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_3)&&!this.m_battle_general.m_Is_Dead_Passive_Charge){var active_skill_charge_count=0;if(o.stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_1?active_skill_charge_count=1:o.stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_2?active_skill_charge_count=2:o.stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_3&&(active_skill_charge_count=3),t.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Cooldown_chain_rabbit)||t.IsDurabilityEffect(database.BattleEffectTrans.Motion_Singing)||t.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Charge)||t.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Charge_koi))is_skill_charge=!0;else for(var active_idx_t=0;active_idx_t<t.m_battle_general.active_skill.length;active_idx_t++)t.m_battle_general.active_skill[active_idx_t].skill_charge_count+=active_skill_charge_count,t.m_battle_general.active_skill[active_idx_t].skill_charge_count>=MAX_SKILL_CHARGE_BUFF&&(t.m_battle_general.active_skill[active_idx_t].skill_charge_count=MAX_SKILL_CHARGE_BUFF,t.m_battle_general.active_skill[active_idx_t].cooltime=0,t.m_battle_general.active_skill[active_idx_t].is_cooltime=!1,t.m_battle_general.active_skill[active_idx_t].is_prepared=!1),null!=t._skillCooltimeProc_V2&&t._skillCooltimeProc_V2.skillCooltimeProc_V2(t.m_battle_general.active_skill[active_idx_t].cooltime,t.m_battle_general.active_skill[active_idx_t].skill_charge_count),is_skill_charge=!0}}if(passive.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Dead_At)for(idx=0;idx<this.m_target_ours.length;idx++)for(t=this.m_target_ours[idx],jdx=0;jdx<passive.durability_effects.length;jdx++){var d=passive.durability_effects[jdx];(rand=parseInt(100*Math.random()+1))<=d.percent&&(0<d.end_effects.length&&(d.trans_type==database.BattleEffectTrans.Freeze||d.trans_type==database.BattleEffectTrans.Not_Resist_Freeze)&&(d.end_effects[0].damage=this.getAttackPoint()),t.addDurabilityEffect(d,this))}}}else{if(null!=this._findEnemyTarget&&(this.m_target_enemys=this._findEnemyTarget.findEnemyTarget(this,passive.action.target_count,passive.action.priority_position)),this.m_map_damage.clear(),0<this.m_target_enemys.size()){var origin_attk=this.getAttackPoint(),attk=origin_attk;if(passive.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Dead_At){305==this.m_battle_general.general.gnrl_group&&this.addCommonEffectNode("Hina_fx_skill_death"),400==this.m_battle_general.general.gnrl_group&&this.addCommonEffectNode("Jochung_fx_death");for(var t_idx=0;t_idx<this.m_target_enemys.length;t_idx++){t=this.m_target_enemys[t_idx];try{if(!t.IsAlive()||t.m_cur_state==BattleGeneral_GeneralState.Freeze)continue}catch(e){cc.log(" t : "+e);continue}for(var one_idx=0;one_idx<passive.onetime_effects.length;one_idx++){var one=passive.onetime_effects[one_idx];if(one.our_enemy==database.BattleSelfOther.Other)if(one.input_ability_type==database.BattleInputAbility.Attack&&one.output_ability_type==database.BattleOutputAbility.Damage)attk=origin_attk*one.value/100,-1!=one.target_boss_types.indexOf(t.getGeneral().npc_boss_type)&&(attk+=attk*one.onetime_effect.target_boss_value/1e4)}var calc_attk=attk,gnrl_id=t.getGeneral().general.gnrl_id,type=(t.getBattlePosition(),database.DamageType.Normal),element_advance_attk_buf_rate=t.checkElementAdvanceTargetDamage(this);calc_attk+=attk*element_advance_attk_buf_rate/100;for(var i=0;i<damages.size();i++){var dmg=damages.at(i),damage=new Damage;damage.onetime_effects=[],damage.durability_effects=[],damage.origin_damage=origin_attk,damage.shared_point=dmg,damage.gnrl_id=gnrl_id,damage.damage_type=type,damage.hit_point=2,damage.damage=calc_attk,element_advance_attk_buf_rate<0?damage.element_adv_type=-1:0<element_advance_attk_buf_rate&&(damage.element_adv_type=1),damage.attack_type=Hit_Attack_Type.DEATH_TRANS_PASSIVE,t.addDamage(this,damage),damage=null}t=gnrl_id=null}}if(passive.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Dead_At){this.m_battle_general.general.gnrl_group;for(var target_idx=0;target_idx<this.m_target_enemys.length;target_idx++){t=this.m_target_enemys[target_idx];for(var durability_idx=0;durability_idx<passive.durability_effects.length;durability_idx++){if(((d=passive.durability_effects[durability_idx]).trans_type!=database.BattleEffectTrans.Stun&&d.trans_type!=database.BattleEffectTrans.Silence&&d.trans_type!=database.BattleEffectTrans.Poison&&d.trans_type!=database.BattleEffectTrans.After_Recv_Damage_Inc_Rate&&d.trans_type!=database.BattleEffectTrans.Damage_Reduce&&d.trans_type!=database.BattleEffectTrans.New_Poison_Dmg_Rate&&d.trans_type!=database.BattleEffectTrans.Wound_Obstruct_Heal&&d.trans_type!=database.BattleEffectTrans.Blind_Darkness&&d.trans_type!=database.BattleEffectTrans.Freeze&&d.trans_type!=database.BattleEffectTrans.Not_Resist_Stun&&d.trans_type!=database.BattleEffectTrans.Not_Resist_Silence&&d.trans_type!=database.BattleEffectTrans.Not_Resist_Poison&&d.trans_type!=database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate&&d.trans_type!=database.BattleEffectTrans.Not_Resist_Damage_Reduce&&d.trans_type!=database.BattleEffectTrans.Not_Resist_Wound&&d.trans_type!=database.BattleEffectTrans.Not_Resist_Blind&&d.trans_type!=database.BattleEffectTrans.Not_Resist_Freeze||!t.checkTransInvinsiblity(d.trans_type))&&!(t.findTransType(database.BattleEffectTrans.Golden_Invincibility)||0!=d.element_type&&d.element_type!=t.getGeneral().general.element_type||0!=d.arm_service_type&&d.arm_service_type!=t.getGeneral().general.arm_service_type||0!=d.fight_type&&d.fight_type!=t.getGeneral().general.fight_type)){for(var rand=parseInt(100*Math.random()+1),trans_resist_value=0,resistance_idx=0;resistance_idx<t.getGeneral().resistance.length;resistance_idx++){var r=t.getGeneral().resistance[resistance_idx];r.trans_type==d.trans_type&&(trans_resist_value+=r.resist_value),r=null}trans_resist_value+=t.m_my_team.getLeaderSkillTransResistBufPoint(d.trans_type,this.m_battle_general),trans_resist_value+=t.m_my_team.getSpecialLeaderSkillTransResistBufPoint(d.trans_type,this.m_battle_general),trans_resist_value+=t.m_my_team.getFriendLeaderSkillTransResistBufPoint(d.trans_type,this.m_battle_general),trans_resist_value+=t.getEventDungeonGnrlTransResistBuf(d.trans_type),trans_resist_value+=t.durabilityBufResistPoint(d.trans_type),rand<=d.percent-trans_resist_value&&(d.gnrl_id=this.m_battle_general.general.gnrl_id,0<d.end_effects.length&&(d.trans_type==database.BattleEffectTrans.Freeze||d.trans_type==database.BattleEffectTrans.Not_Resist_Freeze)&&(d.end_effects[0].damage=this.getAttackPoint()),t.addDurabilityEffect(d,this)),d=null}}t=null}}}this.deathFxPlay("fx_death")}is_skill_charge&&(this.m_battle_general.m_Is_Dead_Passive_Charge=!0)},deathSelfReborn:function(active,target){for(var idx=0;idx<this.m_durability_effects.length;idx++){var dur=$.extend({},this.m_durability_effects[idx]);if(dur.invoke_type==database.BattleInvokeType.BattleInvokeType_Dead_At&&dur.trans_type==database.BattleEffectTrans.In_Duration_Dead_At_Reborn){if(1==this.m_is_reborn_enable)continue;if(this.m_battle_general.m_Reborn_count<=0){var one=new database.BattleOneTimeEffect;one.effect_id=98765,one.stat_trans=database.BattleEffectTrans.Self_New_Reborn,one.input_ability_type=database.BattleInputAbility.Max_Life,one.output_ability_type=database.BattleOutputAbility.Life;var v=dur.value/100;one.value=v,one.onetime_effect=[],one.onetime_effect.value=v,one.max_value=v,one.onetime_effect.max_value=v,one.rate=1e4,this.m_self_reborn_durability_effect.effect_id=0,this.selfRebornReserved(one),++this.m_battle_general.m_Reborn_count,this.m_battle_general.m_Is_Reborn_Active_Max_Charge=!0,one=null}}}},beginHit:function(duration,evasion){if(null==evasion&&(evasion=!1),this.addDebugGeneral("beginHit"),this.m_focus_state==FOCUS_STATE.UNFOCUS){if(this.m_cur_state==BattleGeneral_GeneralState.Freeze)return;if(this.IsDurabilityEffect(database.BattleEffectTrans.Golden_Invincibility))return;if(this.IsDurabilityEffect(database.BattleEffectTrans.Motion_Singing))return;if(1==evasion)return;this.getScheduler();return 0==this.duration?this.m_cur_state!=BattleGeneral_GeneralState.Skill&&this.m_cur_state!=BattleGeneral_GeneralState.Skill_Ready&&(this.m_team_type==BattleGeneral_TeamType.Right&&this.m_game_type==db.BattleGameType.RaidDungeon||this.IsDurabilityEffect(database.BattleEffectTrans.Stun)||this.IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Stun)||(this.findTransType(database.BattleEffectTrans.FeverMode,this.IsFriend())&&504==this.m_battle_general.general.gnrl_group?this.playAction(ActionType.Damage_Once_Idle2):this.playAction(ActionType.Damage_Once))):this.m_cur_state!=BattleGeneral_GeneralState.Skill&&this.m_cur_state!=BattleGeneral_GeneralState.Skill_Ready&&(this.m_team_type==BattleGeneral_TeamType.Right&&this.m_game_type==db.BattleGameType.RaidDungeon?(this.m_hitted_duration=!0,this.m_hit_duration=this.duration/this.m_cur_time_scale):(this.m_hitted_duration=!0,this.m_hit_duration=duration/this.m_cur_time_scale,this.playAction(ActionType.Damage_Time))),this.m_cur_state!=BattleGeneral_GeneralState.Skill&&this.m_cur_state!=BattleGeneral_GeneralState.Skill_Ready&&(this.addDebugGeneral("beginHit not skill && skill ready"),this.findTransType(database.BattleEffectTrans.Stun)||this.findTransType(database.BattleEffectTrans.Sleep)||this.findTransType(database.BattleEffectTrans.Freeze)||this.findTransType(database.BattleEffectTrans.Not_Resist_Stun)||this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)||(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.cancelUsedEffect())),this.unfocsActionHItted(),this.runTransShader(TransShaderType.Hit_White,.1,this.cbUnfocusTransShaderCallback,1),void this.momentShowInfoBar(2)}if(this.m_cur_state==BattleGeneral_GeneralState.Attack||this.m_cur_state==BattleGeneral_GeneralState.Skill||this.m_cur_state==BattleGeneral_GeneralState.Stun||this.m_cur_state==BattleGeneral_GeneralState.Attack_Ready||this.m_cur_state==BattleGeneral_GeneralState.Skill_Ready||this.m_cur_state==BattleGeneral_GeneralState.Sleep)this.m_hitted_duration=!0,this.m_hit_duration=this.duration,this.actionHitted();else if(this.m_cur_state==BattleGeneral_GeneralState.Idle_Revision||this.m_cur_state==BattleGeneral_GeneralState.Dash){this.m_battle_general.general.gnrl_group}else if(this.m_cur_state==BattleGeneral_GeneralState.Freeze);else{if(this.IsDurabilityEffect(database.BattleEffectTrans.Golden_Invincibility))return void cc.log("Golden_Invincibility");if(this.IsDurabilityEffect(database.BattleEffectTrans.Motion_Singing))return void cc.log("Motion_Singing Not Hit Motion");0==this.duration?this.m_hitted_duration||this.m_team_type==BattleGeneral_TeamType.Right&&this.m_game_type==db.BattleGameType.RaidDungeon||this.IsDurabilityEffect(database.BattleEffectTrans.Stun)||this.IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Stun)||(this.findTransType(database.BattleEffectTrans.FeverMode,this.IsFriend())&&504==this.m_battle_general.general.gnrl_group?this.playAction(ActionType.Damage_Once_Idle2):this.playAction(ActionType.Damage_Once)):this.m_team_type==BattleGeneral_TeamType.Right&&this.m_game_type==db.BattleGameType.RaidDungeon?(this.m_hitted_duration=!0,this.m_hit_duration=this.duration/this.m_cur_time_scale):(this.m_hitted_duration=!0,this.m_hit_duration=this.duration/this.m_cur_time_scale,this.playAction(ActionType.Damage_Time))}this.m_focus_state==FOCUS_STATE.NONE&&this.runTransShader(TransShaderType.Hit_White,.1,this.cbTransShaderCallback,2),null!=this._shakeSkillSlot&&this._shakeSkillSlot.shakeSkillSlot(.1,10),this.momentShowInfoBar(2)},endHit:function(base){},addOnetimeEffect:function(effect,_trans,_dmg_type){if(this.addDebugGeneral("addOnetimeEffect"),Math.round(1e4*Math.random())>effect.rate)return!1;if(this.findTransType(database.BattleEffectTrans.Freeze)||this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze))return!1;var not_apply_cooltime=!1;if(effect.our_enemy==database.BattleSelfOther.Self){for(var idx_dur=0;idx_dur<this.m_durability_effects.length;idx_dur++)if(this.m_durability_effects[idx_dur].trans_type==database.BattleEffectTrans.Good_Trans_Invincibility_Mode&&effect.output_ability_type!=database.BattleOutputAbility.Release&&(effect.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Dec||effect.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Rate_Dec||effect.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Rate_Inc||effect.input_ability_type==database.BattleInputAbility.Skill_Durability_Effect_Duration_Type||effect.input_ability_type==database.BattleInputAbility.ActiveSkill_Duration_Time||effect.output_ability_type==database.BattleOutputAbility.Life||effect.output_ability_type==database.BattleOutputAbility.Defence||effect.output_ability_type==database.BattleOutputAbility.Trans_Duration))return!1;var input_point=0;switch(effect.input_ability_type){case database.BattleInputAbility.Attack:case database.BattleInputAbility.Damage:input_point=effect.damage;break;case database.BattleInputAbility.Max_Life:input_point=this.getMaxHealthPoint();break;case database.BattleInputAbility.Life:input_point=this.getCurrentLifePoint();break;case database.BattleInputAbility.Fixed_Value:input_point=effect.value;break;case database.BattleInputAbility.Caster_Life:case database.BattleInputAbility.Caster_Max_Life:input_point=effect.damage;break;case database.BattleInputAbility.Bad_Trans:if(parseInt(100*Math.random())+1<=effect.value){for(var i=0;i<this.m_durability_effects.length;i++)if(this.m_durability_effects[i].up_down==database.BattleUpDown.Down){if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Freeze)continue;effect.stat_trans==database.BattleEffectTrans.None?(this.m_durability_effects[i].delta_duration=this.m_durability_effects[i].duration,this.m_durability_effects[i].is_clear=!0,this.m_durability_effects[i].is_end=!0):this.m_durability_effects[i].trans_type==effect.stat_trans&&(this.m_durability_effects[i].delta_duration=this.m_durability_effects[i].duration,this.m_durability_effects[i].is_clear=!0,this.m_durability_effects[i].is_end=!0)}this.calcDurabilityEffect(0)}break;case database.BattleInputAbility.Skill_CoolTime_Rate_Dec:case database.BattleInputAbility.Skill_CoolTime_Rate_Inc:for(i=0;i<this.m_battle_general.active_skill.length;i++)if(this.m_battle_general.active_skill[i].is_cooltime){var dec_cooltime=this.getSkillCoolTimeDecBuf(this.m_battle_general.active_skill[i]);input_point=this.m_battle_general.active_skill[i].skill.cool_time-dec_cooltime;break}break;case database.BattleInputAbility.Skill_CoolTime_Dec:case database.BattleInputAbility.Skill_CoolTime_Inc:for(i=0;i<this.m_battle_general.active_skill.length;i++)if(this.m_battle_general.active_skill[i].is_cooltime){input_point=this.m_battle_general.active_skill[i].cooltime;break}break;case database.BattleInputAbility.Weapon_Attk:case database.BattleInputAbility.Armor_Def:break;case database.BattleInputAbility.Defence:input_point=this.getDefencePoint();break;case database.BattleInputAbility.Trans_State_Release:if(parseInt(1e4*Math.random()+1)<=effect.rate){for(i=0;i<this.m_durability_effects.length;i++)this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Stun&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Silence&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Poison&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.After_Recv_Damage_Inc_Rate&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Damage_Reduce&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.New_Poison_Dmg_Rate&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Wound_Obstruct_Heal&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Blind_Darkness&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Stun&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Silence&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Poison&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Damage_Reduce&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Wound&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Blind||(this.m_durability_effects[i].delta_duration=this.m_durability_effects[i].duration,this.m_durability_effects[i].is_clear=!0,this.m_durability_effects[i].is_end=!0);this.calcDurabilityEffect(0)}break;case database.BattleInputAbility.All_Trans_Release:if(parseInt(1e4*Math.random()+1)<=effect.rate){for(i=0;i<this.m_durability_effects.length;i++)this.m_durability_effects[i].delta_duration=this.m_durability_effects[i].duration,this.m_durability_effects[i].is_clear=!0,this.m_durability_effects[i].is_end=!0;this.calcDurabilityEffect(0)}}if(0<input_point){var point=0,min_value=effect.value,max_value=Math.max(effect.value,effect.max_value),effect_value=Math.random()*(max_value-min_value)+min_value;switch(effect.output_ability_type){case database.BattleOutputAbility.Damage:if(_trans==database.BattleEffectTrans.New_Poison_Dmg_Rate)(max=MasterManager.getInstance().get_CountFunction(15).value)<(point=input_point*effect_value/100)&&(point=max),this.m_team_type==BattleGeneral_TeamType.Right&&(this.m_game_type==db.BattleGameType.RaidDungeon?this.m_my_team.getTargetTeam().addEventDungeonCutinAccumDamage(point):this.m_my_team.IsCutinStage()?this.m_my_team.getTargetTeam().addEventDungeonCutinAccumDamage(point):this.m_game_type==db.BattleGameType.EventMussangBossDungeon?this.m_my_team.getTargetTeam().addEventDungeonMusssangBossAccumDamage(point):this.m_game_type==db.BattleGameType.EventRaidDungeon&&this.m_my_team.getTargetTeam().addEventRaidAccumDamage(point));else point=effect.input_ability_type==database.BattleInputAbility.Fixed_Value?effect_value:input_point*effect_value/100,this.m_team_type==BattleGeneral_TeamType.Right&&(this.m_game_type==db.BattleGameType.RaidDungeon?this.m_my_team.getTargetTeam().addEventDungeonCutinAccumDamage(point):this.m_my_team.IsCutinStage()?this.m_my_team.getTargetTeam().addEventDungeonCutinAccumDamage(point):this.m_game_type==db.BattleGameType.EventMussangBossDungeon?this.m_my_team.addEventDungeonMusssangBossAccumDamage(point):this.m_game_type==db.BattleGameType.EventRaidDungeon&&this.m_my_team.getTargetTeam().addEventRaidAccumDamage(point));if(this.selfLifeDown(point,2),null!=this._cbEventListenerFieldMng)(evt=new battle.Event).floatValue=point,evt.dataValue1=this,null==_dmg_type?_trans==database.BattleEffectTrans.Poison?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.New_Poison_Dmg_Rate?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.Electric_Shork?evt.intValue=database.DamageType.Dot_Electric:_trans==database.BattleEffectTrans.Bleeding_Woounds?evt.intValue=database.DamageType.Dot_Bleeding:_trans==database.BattleEffectTrans.Freeze||_trans==database.BattleEffectTrans.Freeze_End?evt.intValue=database.DamageType.Dot_Freeze:evt.intValue=database.DamageType.Dot_Poison:_dmg_type!=database.DamageType.Normal?evt.intValue=_dmg_type:_trans==database.BattleEffectTrans.Poison?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.New_Poison_Dmg_Rate?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.Electric_Shork?evt.intValue=database.DamageType.Dot_Electric:_trans==database.BattleEffectTrans.Bleeding_Woounds?evt.intValue=database.DamageType.Dot_Bleeding:_trans==database.BattleEffectTrans.Freeze||_trans==database.BattleEffectTrans.Freeze_End?evt.intValue=database.DamageType.Dot_Freeze:evt.intValue=database.DamageType.Dot_Poison,this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_DAMAGE_SHOW,evt),evt=null;break;case database.BattleOutputAbility.Life:var is_reborn=!1;if(effect.input_ability_type==database.BattleInputAbility.Fixed_Value)point=effect_value;else{if(effect.stat_trans==database.BattleEffectTrans.Accumulate_Stack_Wanko_Dot_Heal)point=input_point*(effect.stack_count_wanko*effect_value)/100;else if(effect.stat_trans==database.BattleEffectTrans.Timer_Passed_Stack_Up_Our_Team_Heal)point=input_point*(effect.stack_count*effect_value)/100;else{point=input_point*(effect_value+0)/100}if(0<point&&(point=this.getSpecialAbilityRecovertyInc(point)),effect.stat_trans==database.BattleEffectTrans.New_Reborn||effect.stat_trans==database.BattleEffectTrans.Self_New_Reborn){this.IsAlive()||(is_reborn=!0,this.m_life_point=.1,this.setGeneralState(BattleGeneral_GeneralState.Idle),this.rebornGeneral(),0==this.getOpacity()&&this.setOpacity(255),this.setVisible(!0),267==this.m_battle_general.general.gnrl_group&&(this.m_battle_general.m_Is_Reborn_Active_Max_Charge=!0));var per=this.m_life_point/this.getMaxHealthPoint(),invoke_type=database.BattleInvokeType.BattleInvokeType_None;if(per<=.1?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_10_Per_Rate:per<=.15?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_15_Per_Rate:per<=.2?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate:per<=.25?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_25_Per_Rate:per<=.3?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate:per<=.4?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate:per<=.5?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate:per<=.75&&(invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate),invoke_type!=database.BattleInvokeType.BattleInvokeType_None)for(var passive_idx=0;passive_idx<this.m_battle_general.trans_passive_skill.length;passive_idx++){if(this.m_battle_general.trans_passive_skill[passive_idx].trans_passive.invoke_type2>=invoke_type&&0==this.m_battle_general.trans_passive_skill[passive_idx].mild_rabbit_count&&0<this.m_life_point&&(invoke_type<=database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate&&invoke_type>=database.BattleInvokeType.BattleInvokeType_Below_Life_10_Per_Rate||invoke_type==database.BattleInvokeType.BattleInvokeType_Below_Life_15_Per_Rate||invoke_type==database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate))for(var dur_passive_idx=0;dur_passive_idx<this.m_battle_general.trans_passive_skill[passive_idx].durability_effects.length;dur_passive_idx++)if(this.m_battle_general.trans_passive_skill[passive_idx].durability_effects[dur_passive_idx].trans_type==database.BattleEffectTrans.HP_Shield_Caster_Max_HP){var max_hp=this.getMaxHealthPoint();this.m_battle_general.trans_passive_skill[passive_idx].durability_effects[dur_passive_idx].life_shield=max_hp*this.m_battle_general.trans_passive_skill[passive_idx].durability_effects[dur_passive_idx].value/1e4,this.addDurabilityEffect(this.m_battle_general.trans_passive_skill[passive_idx].durability_effects[dur_passive_idx],this),++this.m_battle_general.trans_passive_skill[passive_idx].mild_rabbit_count}else if(this.m_battle_general.trans_passive_skill[passive_idx].durability_effects[dur_passive_idx].trans_type==database.BattleEffectTrans.Darkness_Shield){max_hp=this.getMaxHealthPoint();this.m_battle_general.trans_passive_skill[passive_idx].durability_effects[dur_passive_idx].life_shield=max_hp*this.m_battle_general.trans_passive_skill[passive_idx].durability_effects[dur_passive_idx].value/1e4,this.m_battle_general.trans_passive_skill[passive_idx].durability_effects[dur_passive_idx].max_life_shield=this.m_battle_general.trans_passive_skill[passive_idx].durability_effects[dur_passive_idx].life_shield,this.addDurabilityEffect(this.m_battle_general.trans_passive_skill[passive_idx].durability_effects[dur_passive_idx],this),++this.m_battle_general.trans_passive_skill[passive_idx].mild_rabbit_count}else this.m_battle_general.trans_passive_skill[passive_idx].durability_effects[dur_passive_idx].trans_type==database.BattleEffectTrans.Defence_Point_Rate_Inc?this.addDurabilityEffect(this.m_battle_general.trans_passive_skill[passive_idx].durability_effects[dur_passive_idx],this):this.m_battle_general.trans_passive_skill[passive_idx].durability_effects[dur_passive_idx].trans_type==database.BattleEffectTrans.HP_Shield_Caster_Heal_Value&&(this.m_battle_general.trans_passive_skill[passive_idx].durability_effects[dur_passive_idx].life_shield=point*this.m_battle_general.trans_passive_skill[passive_idx].durability_effects[dur_passive_idx].value,this.addDurabilityEffect(this.m_battle_general.trans_passive_skill[passive_idx].durability_effects[dur_passive_idx],this));if(this.m_battle_general.trans_passive_skill[passive_idx].trans_passive.invoke_type2>=invoke_type&&0==this.m_battle_general.m_Is_Life_Down_Active_Skill_Charge&&0<this.m_life_point&&(invoke_type==database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate||invoke_type>=database.BattleInvokeType.BattleInvokeType_Below_Life_15_Per_Rate))for(var one_jdx=0;one_jdx<this.m_battle_general.trans_passive_skill[passive_idx].onetime_effects.length;one_jdx++)this.m_battle_general.trans_passive_skill[passive_idx].onetime_effects[one_jdx].stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_1&&(this.addOnetimeEffect(this.m_battle_general.trans_passive_skill[passive_idx].onetime_effects[one_jdx]),this.m_battle_general.m_Is_Life_Down_Active_Skill_Charge=!0)}}}!this.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)&&!this.findTransType(database.BattleEffectTrans.Not_Resist_Wound)||is_reborn||(point=0);for(var dur_Heal_inc_idx=0;dur_Heal_inc_idx<this.m_durability_effects.length;dur_Heal_inc_idx++){var dur_Heal_inc=$.extend({},this.m_durability_effects[dur_Heal_inc_idx]);dur_Heal_inc.trans_type==database.BattleEffectTrans.Heal_Value_Inc&&(point+=point*dur_Heal_inc.value/1e4)}if(this.getBloodSucking(point,!1),null!=this._cbEventListenerFieldMng&&!this.findTransType(database.BattleEffectTrans.Freeze)&&!this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze))(evt=new battle.Event).floatValue=point,evt.dataValue1=this,point<0?null==_dmg_type?_trans==database.BattleEffectTrans.Poison||_trans==database.BattleEffectTrans.Not_Resist_Poison?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.New_Poison_Dmg_Rate?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.Electric_Shork?evt.intValue=database.DamageType.Dot_Electric:_trans==database.BattleEffectTrans.Bleeding_Woounds||_trans==database.BattleEffectTrans.Not_Resist_Wound?evt.intValue=database.DamageType.Dot_Bleeding:_trans==database.BattleEffectTrans.Freeze||_trans==database.BattleEffectTrans.Freeze_End||_trans==database.BattleEffectTrans.Petrification||_trans==database.BattleEffectTrans.Petrification_End||_trans==database.BattleEffectTrans.Not_Resist_Freeze?evt.intValue=database.DamageType.Dot_Freeze:_trans==database.BattleEffectTrans.Burning||_trans==database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate?evt.intValue=database.DamageType.Dot_Burning:evt.intValue=database.DamageType.Dot_Poison:_dmg_type!=database.DamageType.Normal?evt.intValue=_dmg_type:_trans==database.BattleEffectTrans.Poison||_trans==database.BattleEffectTrans.Not_Resist_Poison?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.New_Poison_Dmg_Rate?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.Electric_Shork?evt.intValue=database.DamageType.Dot_Electric:_trans==database.BattleEffectTrans.Bleeding_Woounds||_trans==database.BattleEffectTrans.Not_Resist_Wound?evt.intValue=database.DamageType.Dot_Bleeding:_trans==database.BattleEffectTrans.Freeze||_trans==database.BattleEffectTrans.Freeze_End||_trans==database.BattleEffectTrans.Petrification||_trans==database.BattleEffectTrans.Petrification_End||_trans==database.BattleEffectTrans.Not_Resist_Freeze?evt.intValue=database.DamageType.Dot_Freeze:_trans==database.BattleEffectTrans.Burning||_trans==database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate?evt.intValue=database.DamageType.Dot_Burning:evt.intValue=database.DamageType.Dot_Poison:evt.intValue=is_reborn?database.DamageType.Reborn_Heal:database.DamageType.Heal,this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_DAMAGE_SHOW,evt),evt=null;break;case database.BattleOutputAbility.Release:break;case database.BattleOutputAbility.Cooltime:for(var dur_idx=0;dur_idx<this.m_durability_effects.length;dur_idx++){(dur=$.extend({},this.m_durability_effects[dur_idx])).trans_type!=database.BattleEffectTrans.Stop_Skill_Cooldown_chain_rabbit&&dur.trans_type!=database.BattleEffectTrans.Motion_Singing&&dur.trans_type!=database.BattleEffectTrans.Stop_Skill_Charge&&dur.trans_type!=database.BattleEffectTrans.Stop_Skill_Charge_koi||(not_apply_cooltime=!0),dur=null}if(not_apply_cooltime)break;effect.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Rate_Dec?point=input_point*effect_value/100:effect.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Dec&&(point=effect_value);for(i=0;i<this.m_battle_general.active_skill.length;i++)if(this.m_battle_general.active_skill[i].is_cooltime){var remain_c_time=0;if((c_time=this.m_battle_general.active_skill[i].cooltime-point)<0)if(remain_c_time=point-this.m_battle_general.active_skill[i].cooltime,++this.m_battle_general.active_skill[i].skill_charge_count,this.m_battle_general.active_skill[i].skill_charge_count>=MAX_SKILL_CHARGE_BUFF)this.m_battle_general.active_skill[i].is_cooltime=!1,this.m_battle_general.active_skill[i].is_prepared=!1,this.m_battle_general.active_skill[i].skill_charge_count=MAX_SKILL_CHARGE_BUFF,this.m_battle_general.active_skill[i].cooltime=0;else{this.m_battle_general.active_skill[i].is_cooltime=!0,this.m_battle_general.active_skill[i].is_prepared=!1;dec_cooltime=this.getSkillCoolTimeDecBuf(this.m_battle_general.active_skill[i]);this.m_battle_general.active_skill[i].cooltime=this.m_battle_general.active_skill[i].skill.cool_time-dec_cooltime,this.m_battle_general.active_skill[i].cooltime-=remain_c_time}else this.m_battle_general.active_skill[i].cooltime=c_time;null!=this._skillCooltimeProc_V2&&this._skillCooltimeProc_V2.skillCooltimeProc_V2(this.m_battle_general.active_skill[i].cooltime,this.m_battle_general.active_skill[i].skill_charge_count);break}0<point&&this.addCommonEffectNode("fx_skill_gauge");break;case database.BattleOutputAbility.Defence:break;case database.BattleOutputAbility.Trans_Duration:this.TransDurationAddPoint(effect.stat_trans,effect_value,effect);break;case database.BattleOutputAbility.Damage_Not_Dead:if((point=effect.input_ability_type==database.BattleInputAbility.Fixed_Value?effect_value:input_point*effect_value/100)>=this.m_life_point?this.selfLifeDown(this.m_life_point-1):this.selfLifeDown(point),null!=this._cbEventListenerFieldMng){(evt=new battle.Event).floatValue=point,evt.dataValue1=this,null==_dmg_type?_trans==database.BattleEffectTrans.Poison?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.New_Poison_Dmg_Rate?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.Electric_Shork?evt.intValue=database.DamageType.Dot_Electric:_trans==database.BattleEffectTrans.Bleeding_Woounds?evt.intValue=database.DamageType.Dot_Bleeding:_trans==database.BattleEffectTrans.Freeze||_trans==database.BattleEffectTrans.Freeze_End?evt.intValue=database.DamageType.Dot_Freeze:evt.intValue=database.DamageType.Dot_Poison:_dmg_type!=database.DamageType.Normal?evt.intValue=_dmg_type:_trans==database.BattleEffectTrans.Poison?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.New_Poison_Dmg_Rate?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.Electric_Shork?evt.intValue=database.DamageType.Dot_Electric:_trans==database.BattleEffectTrans.Bleeding_Woounds?evt.intValue=database.DamageType.Dot_Bleeding:_trans==database.BattleEffectTrans.Freeze||_trans==database.BattleEffectTrans.Freeze_End?evt.intValue=database.DamageType.Dot_Freeze:evt.intValue=database.DamageType.Dot_Poison;var accum_damage=0;accum_damage=point>=this.m_life_point?this.m_life_point-1:point,this.m_team_type==BattleGeneral_TeamType.Right&&(this.m_game_type==db.BattleGameType.RaidDungeon?this.m_my_team.getTargetTeam().addEventDungeonCutinAccumDamage(accum_damage):this.m_my_team.IsCutinStage()?this.m_my_team.getTargetTeam().addEventDungeonCutinAccumDamage(accum_damage):this.m_game_type==db.BattleGameType.EventMussangBossDungeon?this.m_my_team.addEventDungeonMusssangBossAccumDamage(accum_damage):this.m_game_type==db.BattleGameType.EventRaidDungeon&&this.m_my_team.getTargetTeam().addEventRaidAccumDamage(accum_damage)),this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_DAMAGE_SHOW,evt)}}}}else{if(this.IsDurabilityEffect(database.BattleEffectTrans.Golden_Invincibility)&&(effect.input_ability_type!=database.BattleInputAbility.Good_Trans||effect.output_ability_type!=database.BattleOutputAbility.Release))return!0;input_point=0;switch(effect.input_ability_type){case database.BattleInputAbility.Attack:case database.BattleInputAbility.Damage:input_point=effect.damage;break;case database.BattleInputAbility.Max_Life:input_point=this.getMaxHealthPoint();break;case database.BattleInputAbility.Life:input_point=this.getCurrentLifePoint();break;case database.BattleInputAbility.Bad_Trans:break;case database.BattleInputAbility.Fixed_Value:effect.stat_trans==database.BattleEffectTrans.Attack_Point_Fix_Value_Damage?input_point=effect.value:null!=effect.onetime_effect&&null!=effect.onetime_effect&&(input_point=effect.onetime_effect.value);break;case database.BattleInputAbility.Good_Trans:var is_singing=!1;if(this.findTransType(database.BattleEffectTrans.Motion_Singing,this.IsFriend())&&(is_singing=!0),parseInt(100*Math.random()+1)<=effect.value){for(var idx=0;idx<this.m_durability_effects.length;idx++){(dur=this.m_durability_effects[idx]).up_down==database.BattleUpDown.Up&&(is_singing&&dur.gnrl_id==this.m_battle_general.gnrl_id&&dur.is_friend_effect==this.IsFriend()||(effect.stat_trans==database.BattleEffectTrans.None?(dur.delta_duration=dur.duration,dur.is_clear=!0,dur.is_end=!0):dur.trans_type==effect.stat_trans&&(dur.delta_duration=dur.duration,dur.is_clear=!0,dur.is_end=!0))),this.m_Skill_DeltaTime=0,this.m_Skill_DeltaTime_Not_Init=0}this.calcDurabilityEffect(0)}break;case database.BattleInputAbility.Skill_CoolTime_Rate_Dec:case database.BattleInputAbility.Skill_CoolTime_Rate_Inc:for(i=0;i<this.m_battle_general.active_skill.length;i++)if(this.m_battle_general.active_skill[i].is_cooltime){input_point=this.m_battle_general.active_skill[i].skill.cool_time;break}break;case database.BattleInputAbility.Skill_CoolTime_Dec:case database.BattleInputAbility.Skill_CoolTime_Inc:for(i=0;i<this.m_battle_general.active_skill.length;i++)if(this.m_battle_general.active_skill[i].is_cooltime){input_point=this.m_battle_general.active_skill[i].cooltime;break}break;case database.BattleInputAbility.Weapon_Attk:case database.BattleInputAbility.Armor_Def:break;case database.BattleInputAbility.Defence:input_point=this.getDefencePoint();break;case database.BattleInputAbility.Caster_Life:input_point=effect.damage}if("number"!=typeof input_point&&cc.log("dddddddddddddddd"),0<input_point||effect.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Dec||effect.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Inc||effect.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Rate_Dec||effect.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Rate_Inc){point=0,min_value=effect.value,max_value=Math.max(effect.value,effect.max_value),effect_value=Math.random()*(max_value-min_value)+min_value;switch(effect.output_ability_type){case database.BattleOutputAbility.Damage:var max;if(point=effect.input_ability_type==database.BattleInputAbility.Fixed_Value?input_point:input_point*effect_value/100,_trans==database.BattleEffectTrans.New_Poison_Dmg_Rate||_trans==database.BattleEffectTrans.Not_Resist_Poison)(max=MasterManager.getInstance().get_CountFunction(15).value)<point&&(point=max),this.m_team_type==BattleGeneral_TeamType.Right&&(this.m_game_type==db.BattleGameType.RaidDungeon?this.m_my_team.getTargetTeam().addEventDungeonCutinAccumDamage(point):this.m_my_team.IsCutinStage()?this.m_my_team.getTargetTeam().addEventDungeonCutinAccumDamage(point):this.m_game_type==db.BattleGameType.EventMussangBossDungeon?this.m_my_team.getTargetTeam().addEventDungeonMusssangBossAccumDamage(point):this.m_game_type==db.BattleGameType.EventRaidDungeon&&this.m_my_team.getTargetTeam().addEventRaidAccumDamage(point));else if(_trans==database.BattleEffectTrans.Timer_Bomb_Calc_Def||_trans==database.BattleEffectTrans.Timer_Tamatebako_Calc_Def_End){(dmg=new Damage).damage=point,dmg.damage_type=_dmg_type,dmg.attack_type=Hit_Attack_Type.ATTACK_1,dmg.shared_point=100;var log_a=new DamageLog;if(point=this.getCalcDamage(this,dmg,log_a,!1),_trans==database.BattleEffectTrans.Timer_Tamatebako_Calc_Def_End)_dmg_type=database.DamageType.Bomb_Tamatebako_Damage;else if(0==effect.gnrl_id)_dmg_type=database.DamageType.Bomb_Explosion;else _dmg_type=253==MasterManager.getInstance().get_General(effect.gnrl_id).gnrl_group?database.DamageType.Bomb_Explosion_Xmas:database.DamageType.Bomb_Explosion;this.m_team_type==BattleGeneral_TeamType.Right&&(this.m_game_type==db.BattleGameType.RaidDungeon?this.m_my_team.getTargetTeam().addEventDungeonCutinAccumDamage(point):this.m_my_team.IsCutinStage()?this.m_my_team.getTargetTeam().addEventDungeonCutinAccumDamage(point):this.m_game_type==db.BattleGameType.EventMussangBossDungeon?this.m_my_team.getTargetTeam().addEventDungeonMusssangBossAccumDamage(point):this.m_game_type==db.BattleGameType.EventRaidDungeon&&this.m_my_team.getTargetTeam().addEventRaidAccumDamage(point)),log_a=dmg=null}else if(_trans==database.BattleEffectTrans.Timer_Bomb_No_Calc_Def||_trans==database.BattleEffectTrans.Timer_Tamatebako_Calc_Not_Def_End){var guard_random=parseInt(1e4*Math.random()),guard_rate=0,guard_power=0;if(guard_power=this.checkGuardRateAndValue2(guard_power),guard_rate=this.checkGuardRateAndValue(guard_rate),_trans==database.BattleEffectTrans.Timer_Tamatebako_Calc_Not_Def_End)_dmg_type=database.DamageType.Bomb_Tamatebako_Damage;else if(0==effect.gnrl_id)_dmg_type=database.DamageType.Bomb_Explosion;else _dmg_type=253==MasterManager.getInstance().get_General(effect.gnrl_id).gnrl_group?database.DamageType.Bomb_Explosion_Xmas:database.DamageType.Bomb_Explosion;guard_random<=guard_rate&&(point-=point*guard_power/1e4,_dmg_type=database.DamageType.Defence),this.m_team_type==BattleGeneral_TeamType.Right&&(this.m_game_type==db.BattleGameType.RaidDungeon?this.m_my_team.getTargetTeam().addEventDungeonCutinAccumDamage(point):this.m_my_team.IsCutinStage()?this.m_my_team.getTargetTeam().addEventDungeonCutinAccumDamage(point):this.m_game_type==db.BattleGameType.EventMussangBossDungeon?this.m_my_team.getTargetTeam().addEventDungeonMusssangBossAccumDamage(point):this.m_game_type==db.BattleGameType.EventRaidDungeon&&this.m_my_team.getTargetTeam().addEventRaidAccumDamage(point))}else if(_trans==database.BattleEffectTrans.Timer_Tamatebako_Calc_Def_End){var dmg;(dmg=new Damage).damage=point,dmg.damage_type=_dmg_type,dmg.attack_type=Hit_Attack_Type.ATTACK_1,dmg.shared_point=100;log_a=new DamageLog;point=this.getCalcDamage(this,dmg,log_a,!1),_dmg_type=database.DamageType.Bomb_Tamatebako_Damage,this.m_team_type==BattleGeneral_TeamType.Right&&(this.m_game_type==db.BattleGameType.RaidDungeon?this.m_my_team.getTargetTeam().addEventDungeonCutinAccumDamage(point):this.m_my_team.IsCutinStage()?this.m_my_team.getTargetTeam().addEventDungeonCutinAccumDamage(point):this.m_game_type==db.BattleGameType.EventRaidDungeon&&this.m_my_team.getTargetTeam().addEventRaidAccumDamage(point)),log_a=dmg=null}else{if(effect.onetime_effect.limit_value<point&&0!=effect.onetime_effect.limit_value&&(point=effect.onetime_effect.limit_value),!effect.target_boss_types.empty()){for(var found_is=!1,found_push=[],f_idx=0;f_idx<effect.target_boss_types.length;f_idx++)effect.target_boss_types[f_idx]==this.m_battle_general.npc_boss_type&&(found_is=!0,found_push.push(f_idx));if(1==found_is)for(var f_idx2=0;f_idx2<found_push.length;f_idx2++)effect.input_ability_type==database.BattleInputAbility.Fixed_Value?point+=input_point*effect.onetime_effect.target_boss_value/1e4:point+=point*effect.onetime_effect.target_boss_value/1e4}this.findTransType(database.BattleEffectTrans.Golden_Invincibility)&&(point=0);try{var log=new DamageLog;log._attk_name=this.m_my_team.getTargetTeam().getGnrlName(effect.gnrl_id),log._def_name=this.m_battle_general.general.name,log._max_life=this.getMaxHealthPoint(),null!=this.m_my_team.getTargetTeam().getDBBattleGeneral(effect.gnrl_id)&&null!=this.m_my_team.getTargetTeam().getDBBattleGeneral(effect.gnrl_id)&&(log._attaker_limit_step=this.m_my_team.getTargetTeam().getDBBattleGeneral(effect.gnrl_id).limit_step_id),log._damage=point,log._attack_type=Hit_Attack_Type.ONE_TIME_EFFECT,log._trans=effect.stat_trans,this.addDamageLogDebug(log)}catch(e){}this.m_team_type==BattleGeneral_TeamType.Right&&(this.m_game_type==db.BattleGameType.RaidDungeon?this.m_my_team.getTargetTeam().addEventDungeonCutinAccumDamage(point):this.m_my_team.IsCutinStage()?this.m_my_team.getTargetTeam().addEventDungeonCutinAccumDamage(point):this.m_game_type==db.BattleGameType.EventMussangBossDungeon?this.m_my_team.getTargetTeam().addEventDungeonMusssangBossAccumDamage(point):this.m_game_type==db.BattleGameType.EventRaidDungeon&&this.m_my_team.getTargetTeam().addEventRaidAccumDamage(point))}if(this.selfLifeDown(point,2),!this.IsAlive())for(var passive_kdx=0;passive_kdx<this.m_battle_general.trans_passive_skill.length;passive_kdx++)this.m_battle_general.trans_passive_skill[passive_kdx].trans_passive.invoke_type1!=database.BattleInvokeType.BattleInvokeType_Dead_At&&this.m_battle_general.trans_passive_skill[passive_kdx].trans_passive.invoke_type2!=database.BattleInvokeType.BattleInvokeType_Dead_At||this.deathTransPassiveSkill(this.m_battle_general.trans_passive_skill[passive_kdx],this);if(this.killedGeneralByBase(this,Hit_Attack_Type.ONE_TIME_EFFECT),null!=this._cbEventListenerFieldMng)(evt=new battle.Event).floatValue=point,evt.dataValue1=this,null==_dmg_type?_trans==database.BattleEffectTrans.Poison||_trans==database.BattleEffectTrans.Not_Resist_Poison?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.New_Poison_Dmg_Rate?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.Electric_Shork||_trans==database.BattleEffectTrans.Not_Resist_Damage_Reduce?evt.intValue=database.DamageType.Dot_Electric:_trans==database.BattleEffectTrans.Bleeding_Woounds||_trans==database.BattleEffectTrans.Not_Resist_Wound?evt.intValue=database.DamageType.Dot_Bleeding:_trans==database.BattleEffectTrans.Freeze||_trans==database.BattleEffectTrans.Freeze_End||_trans==database.BattleEffectTrans.Petrification||_trans==database.BattleEffectTrans.Petrification_End||_trans==database.BattleEffectTrans.Not_Resist_Freeze?evt.intValue=database.DamageType.Dot_Freeze:_trans==database.BattleEffectTrans.Burning||_trans==database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate?evt.intValue=database.DamageType.Dot_Burning:_trans==database.BattleEffectTrans.Timer_Bomb_Calc_Def||_trans==database.BattleEffectTrans.Timer_Bomb_Calc_Def_End||_trans==database.BattleEffectTrans.Timer_Bomb_No_Calc_Def||_trans==database.BattleEffectTrans.Timer_Bomb_No_Calc_Def_End?evt.intValue=database.DamageType.Bomb_Explosion:_trans==database.BattleEffectTrans.Guard_Ignor_Attack?evt.intValue=database.DamageType.Enermy_Max_Life_Damage:_trans==database.BattleEffectTrans.Timer_Tamatebako_Calc_Def_End||_trans==database.BattleEffectTrans.Timer_Tamatebako_Calc_Not_Def_End?evt.intValue=database.DamageType.Bomb_Explosion:evt.intValue=database.DamageType.Dot_Poison:_dmg_type!=database.DamageType.Normal?evt.intValue=_dmg_type:_trans==database.BattleEffectTrans.Poison||_trans==database.BattleEffectTrans.Not_Resist_Poison?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.New_Poison_Dmg_Rate?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.Electric_Shork||_trans==database.BattleEffectTrans.Not_Resist_Damage_Reduce?evt.intValue=database.DamageType.Dot_Electric:_trans==database.BattleEffectTrans.Bleeding_Woounds||_trans==database.BattleEffectTrans.Not_Resist_Wound?evt.intValue=database.DamageType.Dot_Bleeding:_trans==database.BattleEffectTrans.Freeze||_trans==database.BattleEffectTrans.Freeze_End||_trans==database.BattleEffectTrans.Petrification||_trans==database.BattleEffectTrans.Petrification_End||_trans==database.BattleEffectTrans.Not_Resist_Freeze?evt.intValue=database.DamageType.Dot_Freeze:_trans==database.BattleEffectTrans.Burning||_trans==database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate?evt.intValue=database.DamageType.Dot_Burning:_trans==database.BattleEffectTrans.Timer_Bomb_Calc_Def||_trans==database.BattleEffectTrans.Timer_Bomb_Calc_Def_End||_trans==database.BattleEffectTrans.Timer_Bomb_No_Calc_Def||_trans==database.BattleEffectTrans.Timer_Bomb_No_Calc_Def_End?evt.intValue=database.DamageType.Bomb_Explosion:_trans==database.BattleEffectTrans.Guard_Ignor_Attack?evt.intValue=database.DamageType.Enermy_Max_Life_Damage:_trans==database.BattleEffectTrans.Timer_Tamatebako_Calc_Def_End||_trans==database.BattleEffectTrans.Timer_Tamatebako_Calc_Not_Def_End?evt.intValue=database.DamageType.Bomb_Explosion:evt.intValue=database.DamageType.Dot_Poison,this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_DAMAGE_SHOW,evt),evt=null;if(null!=this._cbEventListenerUIMng)(evt=new battle.Event).intValue=this.getTeamType(),(evt.dataValue1=this)._cbEventListenerUIMng.EventListenerFromGeneral(EventCode.EVT_UI_MNG_HITTED,evt),evt=null;break;case database.BattleOutputAbility.Life:var evt;if(0<(point=input_point*effect_value/100)&&(point=this.getSpecialAbilityRecovertyInc(point)),(this.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||this.findTransType(database.BattleEffectTrans.Not_Resist_Wound))&&(point=0),this.getBloodSucking(point,!1),null!=this._cbEventListenerFieldMng&&!this.findTransType(database.BattleEffectTrans.Freeze)&&!this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze))(evt=new battle.Event).floatValue=point,evt.dataValue1=this,point<0?null==_dmg_type?_trans==database.BattleEffectTrans.Poison||_trans==database.BattleEffectTrans.Not_Resist_Poison?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.New_Poison_Dmg_Rate?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.Electric_Shork||_trans==database.BattleEffectTrans.Not_Resist_Damage_Reduce?evt.intValue=database.DamageType.Dot_Electric:_trans==database.BattleEffectTrans.Bleeding_Woounds||_trans==database.BattleEffectTrans.Not_Resist_Wound?evt.intValue=database.DamageType.Dot_Bleeding:_trans==database.BattleEffectTrans.Freeze||_trans==database.BattleEffectTrans.Freeze_End||_trans==database.BattleEffectTrans.Petrification||_trans==database.BattleEffectTrans.Petrification_End||_trans==database.BattleEffectTrans.Not_Resist_Freeze?evt.intValue=database.DamageType.Dot_Freeze:_trans==database.BattleEffectTrans.Burning||_trans==database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate?evt.intValue=database.DamageType.Dot_Burning:evt.intValue=database.DamageType.Dot_Poison:_dmg_type!=database.DamageType.Normal?evt.intValue=_dmg_type:_trans==database.BattleEffectTrans.Poison||_trans==database.BattleEffectTrans.Not_Resist_Poison?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.New_Poison_Dmg_Rate?evt.intValue=database.DamageType.Dot_Poison:_trans==database.BattleEffectTrans.Electric_Shork||_trans==database.BattleEffectTrans.Not_Resist_Damage_Reduce?evt.intValue=database.DamageType.Dot_Electric:_trans==database.BattleEffectTrans.Bleeding_Woounds||_trans==database.BattleEffectTrans.Not_Resist_Wound?evt.intValue=database.DamageType.Dot_Bleeding:_trans==database.BattleEffectTrans.Freeze||_trans==database.BattleEffectTrans.Freeze_End||_trans==database.BattleEffectTrans.Petrification||_trans==database.BattleEffectTrans.Petrification_End||_trans==database.BattleEffectTrans.Not_Resist_Freeze?evt.intValue=database.DamageType.Dot_Freeze:_trans==database.BattleEffectTrans.Burning||_trans==database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate?evt.intValue=database.DamageType.Dot_Burning:evt.intValue=database.DamageType.Dot_Poison:evt.intValue=database.DamageType.Heal,this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_DAMAGE_SHOW,evt),evt=null;break;case database.BattleOutputAbility.Release:break;case database.BattleOutputAbility.Cooltime:for(dur_idx=0;dur_idx<this.m_durability_effects.length;dur_idx++){var dur;(dur=$.extend({},this.m_durability_effects[dur_idx])).trans_type!=database.BattleEffectTrans.Stop_Skill_Cooldown_chain_rabbit&&dur.trans_type!=database.BattleEffectTrans.Motion_Singing&&dur.trans_type!=database.BattleEffectTrans.Stop_Skill_Charge&&dur.trans_type!=database.BattleEffectTrans.Stop_Skill_Charge_koi||(not_apply_cooltime=!0)}if(not_apply_cooltime)break;effect.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Rate_Inc?point=input_point*effect_value/100:effect.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Inc&&(point=effect_value);for(i=0;i<this.m_battle_general.active_skill.length;i++)if(this.m_battle_general.active_skill[i].is_cooltime){var c_time;if((c_time=this.m_battle_general.active_skill[i].cooltime+point)>this.m_battle_general.active_skill[i].skill.cool_time)if(this.m_battle_general.active_skill[i].skill_charge_count<=INIT_SKILL_CHARGE_BUFF)c_time>this.m_battle_general.active_skill[i].skill.cool_time&&(c_time=this.m_battle_general.active_skill[i].skill.cool_time);else{dec_cooltime=0;var remain_cool=0;dec_cooltime=this.getSkillCoolTimeDecBuf(this.m_battle_general.active_skill[i]),remain_cool=this.m_battle_general.active_skill[i].skill.cool_time-dec_cooltime-this.m_battle_general.active_skill[i].cooltime-point,--this.m_battle_general.active_skill[i].skill_charge_count,remain_cool<=0&&(remain_cool*=-1),c_time=remain_cool}this.m_battle_general.active_skill[i].cooltime=c_time,null!=this._skillCooltimeProc_V2&&this._skillCooltimeProc_V2.skillCooltimeProc_V2(this.m_battle_general.active_skill[i].cooltime,this.m_battle_general.active_skill[i].skill_charge_count);break}break;case database.BattleOutputAbility.Defence:break;case database.BattleOutputAbility.Trans_Duration:this.TransDurationAddPoint(effect.stat_trans,effect_value)}}}return!0},addDurabilityEffect:function(dura_effect,base){var base_test=base,effect=$.extend({},dura_effect);effect.delta_duration=0,effect.is_end=!1,effect.is_clear=!1,effect.is_friend_effect=base_test.IsFriend(),effect.delta_tick=0;var now=moment(TimeEventEngine.getInstance().getTime(TIME_EVENT_SERVER_TIME));if(effect.exec_time=now.valueOf(),!this.findTransType(database.BattleEffectTrans.Freeze)&&!this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)){if(dura_effect.trans_type==database.BattleEffectTrans.All_Our_Team_Dead_Count_Def_Inc||dura_effect.trans_type==database.BattleEffectTrans.Passive_Duration_Active_Skill_Damage_Inc||dura_effect.trans_type==database.BattleEffectTrans.Passive_Attk_Dec_Songyeon_Hero||dura_effect.trans_type==database.BattleEffectTrans.Caster_Lv_Skill_Attack_Inc_Dup_Limit){for(var count=0,idx=0;idx<this.m_durability_effects.length;idx++)this.m_durability_effects[idx].trans_type==dura_effect.trans_type&&++count;if(count>=dura_effect.durability.dura_end_effect)return}if(dura_effect.trans_type==database.BattleEffectTrans.Damage_Dispersion){var is_insert_dur=!1,dura_myteam=this.m_my_team.getTeamMembers();for(idx=0;idx<dura_myteam.length;idx++)if(dura_myteam[idx].IsAlive())for(var jdx=0;jdx<dura_myteam[idx].m_durability_effects.length;jdx++)if(dura_myteam[idx].m_durability_effects[jdx].trans_type==database.BattleEffectTrans.Our_Team_Damage_Dec&&dura_effect.gnrl_id==dura_myteam[idx].m_durability_effects[jdx].gnrl_id&&dura_effect.is_friend_effect==dura_myteam[idx].m_durability_effects[jdx].is_friend_effect){if(dura_myteam[idx]==this)return void(dura_myteam[idx].m_durability_effects[jdx].delta_duration=dura_myteam[idx].m_durability_effects[jdx].duration);is_insert_dur=!0}if(!is_insert_dur)return}var gnrl=MasterManager.getInstance().get_General(effect.gnrl_id);effect.trans_type;if(effect.our_enemy==database.BattleSelfOther.Other){if(-1==this.m_durability_effects.findIndex(function(eff){return effect.trans_type==database.BattleEffectTrans.Timer_Bomb_Calc_Def||effect.trans_type==database.BattleEffectTrans.Timer_Bomb_No_Calc_Def||effect.trans_type==database.BattleEffectTrans.Attack_Speed_Dec||effect.trans_type==database.BattleEffectTrans.Passive_Duration_Cri_Defence_Point_Rate_Dec||effect.trans_type==database.BattleEffectTrans.Timer_Tamatebako_Calc_Def_End||effect.trans_type==database.BattleEffectTrans.Timer_Tamatebako_Calc_Not_Def_End||effect.trans_type==database.BattleEffectTrans.Defence_Point_Rate_Dec||effect.trans_type==database.BattleEffectTrans.New_Damage_Reduce_Rate||effect.trans_type==database.BattleEffectTrans.Attack_Speed_Inc||effect.trans_type==database.BattleEffectTrans.Active_Skill_Charge_Speed_Dec||effect.trans_type==database.BattleEffectTrans.Active_Skill_Charge_Speed_Inc||effect.trans_type==database.BattleEffectTrans.Boss_Active_Skill_Charge_Speed_Dec&&this.m_battle_general.is_zoom||effect.trans_type==database.BattleEffectTrans.Boss_Attack_Speed_Dec&&this.m_battle_general.is_zoom||effect.trans_type==database.BattleEffectTrans.Stun||effect.trans_type==database.BattleEffectTrans.Not_Resist_Stun||effect.trans_type==database.BattleEffectTrans.Freeze||effect.trans_type==database.BattleEffectTrans.Not_Resist_Freeze||effect.trans_type==database.BattleEffectTrans.Poison||effect.trans_type==database.BattleEffectTrans.Not_Resist_Poison||effect.trans_type==database.BattleEffectTrans.Silence||effect.trans_type==database.BattleEffectTrans.Not_Resist_Silence||effect.trans_type==database.BattleEffectTrans.Bleeding_Woounds||effect.trans_type==database.BattleEffectTrans.Not_Resist_Wound||effect.trans_type==database.BattleEffectTrans.After_Recv_Damage_Inc_Rate||effect.trans_type==database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate||effect.trans_type==database.BattleEffectTrans.Damage_Reduce||effect.trans_type==database.BattleEffectTrans.Not_Resist_Damage_Reduce||effect.trans_type==database.BattleEffectTrans.Blind_Darkness||effect.trans_type==database.BattleEffectTrans.Not_Resist_Blind||effect.trans_type==database.BattleEffectTrans.Element_Type_Fire_Trans||effect.trans_type==database.BattleEffectTrans.Element_Type_Water_Trans||effect.trans_type==database.BattleEffectTrans.Element_Type_Wind_Trans||effect.trans_type==database.BattleEffectTrans.Element_Type_Light_Trans||effect.trans_type==database.BattleEffectTrans.Element_Type_Dark_Trans?effect.gnrl_id==eff.gnrl_id&&effect.effect_id==eff.effect_id&&effect.is_friend_effect==eff.is_friend_effect&&effect.exec_time==eff.exec_time:effect.gnrl_id==eff.gnrl_id&&effect.effect_id==eff.effect_id}.bind(this))){switch(effect.trans_type){case database.BattleEffectTrans.Stun:case database.BattleEffectTrans.Not_Resist_Stun:this.cancelActiveSkill(),this.cancelUsedEffect(),this.setGeneralState(BattleGeneral_GeneralState.Stun),this.playAction(ActionType.Stun),this.addStatTrans(effect,effect.duration,0);break;case database.BattleEffectTrans.Freeze:case database.BattleEffectTrans.Not_Resist_Freeze:this.cancelActiveSkill(),this.cancelUsedEffect(),this.setGeneralState(BattleGeneral_GeneralState.Freeze),this.playAction(ActionType.Attack_Idle),this.runTransShader(TransShaderType.None,0,null,0),this.addStatTrans(effect,effect.duration,gnrl.gnrl_group);break;case database.BattleEffectTrans.Petrification:this.cancelActiveSkill(),this.cancelUsedEffect(),this.setGeneralState(BattleGeneral_GeneralState.Freeze),this.playAction(ActionType.Attack_Idle),this.runTransShader(TransShaderType.None,0,null,0),this.addStatTrans(effect,effect.duration,0);break;case database.BattleEffectTrans.Sleep:case database.BattleEffectTrans.Not_Resist_Silence:this.cancelActiveSkill(),this.cancelUsedEffect(),this.setGeneralState(BattleGeneral_GeneralState.Sleep),this.playAction(ActionType.Sleep),this.addStatTrans(effect,effect.duration,0);break;case database.BattleEffectTrans.Silence:this.cancelActiveSkill(),this.cancelUsedEffect(),this.m_cur_state!=BattleGeneral_GeneralState.Skill&&this.m_cur_state!=BattleGeneral_GeneralState.Skill_Ready||(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Attack_Idle)),this.addStatTrans(effect,effect.duration,0);break;case database.BattleEffectTrans.Not_Resist_Poison:case database.BattleEffectTrans.New_Poison_Dmg_Rate:case database.BattleEffectTrans.Electric_Shork:case database.BattleEffectTrans.Bleeding_Woounds:case database.BattleEffectTrans.Not_Resist_Wound:case database.BattleEffectTrans.Burning:this.runTransShader(TransShaderType.None,0,null,0),this.addStatTrans(effect,effect.duration,0);break;case database.BattleEffectTrans.Damage_Increased_By_Hina:for(var accum_point=0,max_value=0,dur_idx=0;dur_idx<this.m_durability_effects.length;dur_idx++)this.m_durability_effects[dur_idx].trans_type==database.BattleEffectTrans.Damage_Increased_By_Hina&&(accum_point+=this.m_durability_effects[dur_idx].value,max_value!=this.m_durability_effects[dur_idx].end_effects[0].effect_id&&(max_value=this.m_durability_effects[dur_idx].end_effects[0].effect_id));accum_point<max_value&&this.addStatTrans(effect,effect.duration,0);break;case database.BattleEffectTrans.Accumulate_Stack_Wanko_Damage_Dec:effect.value=effect.durability.value*base.getGeneral().stack_wanko;break;case database.BattleEffectTrans.Damage_Dispersion:case database.BattleEffectTrans.Damage_Increased:case database.BattleEffectTrans.Damage_Reduce:case database.BattleEffectTrans.Not_Resist_Damage_Reduce:case database.BattleEffectTrans.New_Damage_Reduce_Rate:case database.BattleEffectTrans.Defence_Increased:case database.BattleEffectTrans.Defense_Reduce:case database.BattleEffectTrans.Defence_Increased_Rate:case database.BattleEffectTrans.Defence_Reduce_Rate:case database.BattleEffectTrans.ActiveSkill_Damage_Dec:case database.BattleEffectTrans.Poison:case database.BattleEffectTrans.After_Send_Damage_Inc_Rate:case database.BattleEffectTrans.After_Recv_Damage_Inc_Rate:case database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate:case database.BattleEffectTrans.New_Recv_Damage_Inc_Rate:case database.BattleEffectTrans.Attack_Point_Abs_Inc:case database.BattleEffectTrans.Attack_Point_Abs_Dec:case database.BattleEffectTrans.Defence_Point_Rate_Inc:case database.BattleEffectTrans.Defence_Point_Rate_Dec:case database.BattleEffectTrans.Guard_Invoke_Rate_inc:case database.BattleEffectTrans.Guard_Invoke_Rate_Dec:case database.BattleEffectTrans.Guard_Defence_Rate_Inc:case database.BattleEffectTrans.Guard_Defence_Rate_Dec:case database.BattleEffectTrans.Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Critical_Percent_Rate_Dec:case database.BattleEffectTrans.Critical_Power_Rate_inc:case database.BattleEffectTrans.Critical_Power_Rate_Dec:case database.BattleEffectTrans.Element_Type_Fire_Trans:case database.BattleEffectTrans.Element_Type_Water_Trans:case database.BattleEffectTrans.Element_Type_Wind_Trans:case database.BattleEffectTrans.Element_Type_Light_Trans:case database.BattleEffectTrans.Element_Type_Dark_Trans:case database.BattleEffectTrans.Provocation:case database.BattleEffectTrans.Trans_Invincibility_Mode:case database.BattleEffectTrans.Wound_Obstruct_Heal:case database.BattleEffectTrans.Timer_Bomb_Calc_Def:case database.BattleEffectTrans.Timer_Bomb_No_Calc_Def:case database.BattleEffectTrans.Pumpkin_Curse:case database.BattleEffectTrans.Blind_Darkness:case database.BattleEffectTrans.After_Recv_Skill_Dmg_Dec_Rate:case database.BattleEffectTrans.Good_Stat_Buff_Obstruction_Effect:case database.BattleEffectTrans.Resistance_Increment:case database.BattleEffectTrans.Stop_Skill_Cooldown_chain_rabbit:case database.BattleEffectTrans.Attack_Favorable_Element:case database.BattleEffectTrans.Resistance_All_Trans:case database.BattleEffectTrans.Heal_Value_Inc:case database.BattleEffectTrans.Perfect_Critical_Power:case database.BattleEffectTrans.Enermy_General_Trans_Type_Freeze_Critical_Power_Rate_inc:case database.BattleEffectTrans.Passive_Duration_Critical_Power_Rate_inc:case database.BattleEffectTrans.Passive_Duration_Active_Skill_Damage_Inc:case database.BattleEffectTrans.Defence_Point_Rate_Dec_For_Boss:case database.BattleEffectTrans.General_Life_Not_Zero:case database.BattleEffectTrans.Attack_Point_Rate_Dec_For_Boss:case database.BattleEffectTrans.All_Attack_Change_Target_For_Boss:case database.BattleEffectTrans.Normal_Attack_Defence_Ignore_Attack:case database.BattleEffectTrans.Enermy_General_Trans_Type_Stun_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Freeze_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Poison_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Silence_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Burning_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Elec_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Wounds_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Blind_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Attack_Speed_Dec:case database.BattleEffectTrans.Boss_Attack_Speed_Dec:case database.BattleEffectTrans.Active_Skill_Charge_Speed_Dec:case database.BattleEffectTrans.Active_Skill_Charge_Speed_Inc:case database.BattleEffectTrans.Boss_Active_Skill_Charge_Speed_Dec:case database.BattleEffectTrans.Passive_Duration_Cri_Defence_Point_Rate_Dec:case database.BattleEffectTrans.Timer_Tamatebako_Calc_Def_End:case database.BattleEffectTrans.Timer_Tamatebako_Calc_Not_Def_End:case database.BattleEffectTrans.Enermy_General_Trans_Type_Stun_Critical_Power_Rate_inc:case database.BattleEffectTrans.All_Trans_Att_Dec_Rate:case database.BattleEffectTrans.All_Trans_Def_Dec_Rate:case database.BattleEffectTrans.All_Trans_Critical_Percent_Rate_Dec_Rate:case database.BattleEffectTrans.All_Trans_Critical_Power_Rate_Dec_Rate:case database.BattleEffectTrans.All_Trans_Resistance_Dec_Rate:case database.BattleEffectTrans.All_Trans_Skill_Charge_Speed_Rate_Dec_Rate:case database.BattleEffectTrans.All_Trans_Attack_Speed_Rate_Dec_Rate:case database.BattleEffectTrans.Passive_Change_Normal_Attack_Count:case database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_0:case database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_1:case database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_2:case database.BattleEffectTrans.Good_Trans_Invincibility_Mode:case database.BattleEffectTrans.Target_Count_Change_One:case database.BattleEffectTrans.Attack_Speed_Inc:case database.BattleEffectTrans.After_Send_Damage_Dec_Rate:case database.BattleEffectTrans.Life_Then_Def_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Wound_Attack_Inc_To_Our_team:case database.BattleEffectTrans.Our_Team_Damage_Dec:case database.BattleEffectTrans.All_Our_Team_Dead_Count_Def_Inc:case database.BattleEffectTrans.Random_Trans_Stat_Up:case database.BattleEffectTrans.Stop_Skill_Charge:case database.BattleEffectTrans.Passive_Attk_Dec_Songyeon_Hero:case database.BattleEffectTrans.Stop_Skill_Charge_koi:case database.BattleEffectTrans.Advenced_Element_Attack_Damage_Inc:case database.BattleEffectTrans.Weak_Element_Attack_Damage_Dec:case database.BattleEffectTrans.add_damage_to_koi_skill:case database.BattleEffectTrans.Attaker_Fire_Dmg_Inc:case database.BattleEffectTrans.Attaker_Water_Dmg_Inc:case database.BattleEffectTrans.Attaker_Wind_Dmg_Inc:case database.BattleEffectTrans.Attaker_Light_Dmg_Inc:case database.BattleEffectTrans.Attaker_Dark_Dmg_Inc:case database.BattleEffectTrans.Accumulate_Stack_Wanko_Dot_Heal:case database.BattleEffectTrans.Hitted_Add_Stack_WanKo:case database.BattleEffectTrans.Trans_Damage_inc_Critical_Rate_Inc:case database.BattleEffectTrans.Trans_Defence_Inc_Damage_Inc:case database.BattleEffectTrans.Trans_Defence_Inc_Critical_Rate_Inc:case database.BattleEffectTrans.Attacker_State_Type_Dong_Damage_Inc:case database.BattleEffectTrans.Attacker_State_Type_Wie_Damage_inc:case database.BattleEffectTrans.Attacker_State_Type_Chock_Damage_Inc:case database.BattleEffectTrans.Attacker_State_Type_O_Damage_Inc:case database.BattleEffectTrans.Attacker_State_Type_Won_Damage_Inc:case database.BattleEffectTrans.Attacker_State_Type_Jae_Damage_Inc:case database.BattleEffectTrans.Attacker_State_Type_Wae_Damage_Inc:case database.BattleEffectTrans.Enemy_General_Elec_Shork_Our_Gener_Damage_Inc:case database.BattleEffectTrans.Guard_Power_Inc_General_Def_Inc:case database.BattleEffectTrans.Charge_Speed_Inc_Hp_Rate:case database.BattleEffectTrans.Use_Active_Skill_Angel_Stack_Up:case database.BattleEffectTrans.Angel_Stack_After_Recv_Skill_Dmg_Dec_Rate:case database.BattleEffectTrans.Angel_Stack_Attack_Inc:case database.BattleEffectTrans.Angel_Stack_Defence_Inc:case database.BattleEffectTrans.Angel_Stack_Tick_Life_Heal:case database.BattleEffectTrans.Timer_Passed_Stack_Up:case database.BattleEffectTrans.Timer_Passed_Stack_Up_Skill_Attk_Inc:case database.BattleEffectTrans.Timer_Passed_Stack_Up_After_Recv_Skill_Dmg_Dec:case database.BattleEffectTrans.Timer_Passed_Stack_Up_Our_Team_Heal:case database.BattleEffectTrans.Random_Damage_Inc:case database.BattleEffectTrans.Normal_Attack_Elec:case database.BattleEffectTrans.Target_Radio_Show_Buff_Effect:case database.BattleEffectTrans.Use_Active_Skill_Glitter_Beach_Stack_Up:case database.BattleEffectTrans.Glitter_Beach_Stack_After_Recv_Skill_Dmg_Dec_Rate:case database.BattleEffectTrans.Glitter_Beach_Stack_Attaker_Light_Dmg_Inc:case database.BattleEffectTrans.Glitter_Beach_Stack_ActiveSkill_Damage_Inc:this.addStatTrans(effect,effect.duration,base.getBattleGeneral().general.gnrl_group);break;case database.BattleEffectTrans.None_Trans_Only_Effect_Use_Type:this.addStatTrans(effect,effect.duration,0);break;case database.BattleEffectTrans.FeverMode:this.addStatTrans(effect,effect.duration,base.getBattleGeneral().general.gnrl_group)}this.addCheckDurabilityEffectData(effect),null!=this._updateDurabilityEffectList&&this._updateDurabilityEffectList.updateDurabilityEffectIcon(this.m_durability_effects)}}else{for(var dur_idx2=0;dur_idx2<this.m_durability_effects.length;dur_idx2++)if(this.m_durability_effects[dur_idx2].trans_type==database.BattleEffectTrans.Good_Trans_Invincibility_Mode&&effect.up_down==database.BattleUpDown.Up)return;if(this.findTransType(database.BattleEffectTrans.Good_Stat_Buff_Obstruction_Effect)&&(effect.trans_type==database.BattleEffectTrans.Damage_Increased||effect.trans_type==database.BattleEffectTrans.Defence_Increased||effect.trans_type==database.BattleEffectTrans.Attack_Point_Abs_Inc||effect.trans_type==database.BattleEffectTrans.Defence_Point_Rate_Inc||effect.trans_type==database.BattleEffectTrans.Guard_Invoke_Rate_inc||effect.trans_type==database.BattleEffectTrans.Guard_Defence_Rate_Inc||effect.trans_type==database.BattleEffectTrans.Critical_Percent_Rate_Inc||effect.trans_type==database.BattleEffectTrans.Critical_Power_Rate_inc||effect.trans_type==database.BattleEffectTrans.Attack_Speed_Inc||effect.trans_type==database.BattleEffectTrans.Caster_Lv_Def_Inc||effect.trans_type==database.BattleEffectTrans.Caster_Lv_Attk_Inc||effect.trans_type==database.BattleEffectTrans.Caster_Lv_Critical_Rate_Inc||effect.trans_type==database.BattleEffectTrans.Caster_Lv_Critical_Power_Inc))return;if(-1==this.m_durability_effects.findIndex(function(eff){return effect.trans_type==database.BattleEffectTrans.Timer_Bomb_Calc_Def||effect.trans_type==database.BattleEffectTrans.Timer_Bomb_No_Calc_Def?effect.gnrl_id==eff.gnrl_id&&effect.effect_id==eff.effect_id&&effect.is_friend_effect==eff.is_friend_effect&&effect.exec_time==eff.exec_time:effect.gnrl_id==eff.gnrl_id&&effect.effect_id==eff.effect_id})){var is_set_dur=!0;switch(effect.trans_type){case database.BattleEffectTrans.None:break;case database.BattleEffectTrans.Stun:case database.BattleEffectTrans.Not_Resist_Stun:this.cancelActiveSkill(),this.cancelUsedEffect(),this.setGeneralState(BattleGeneral_GeneralState.Stun),this.playAction(ActionType.Stun),effect.our_enemy=database.BattleSelfOther.Other,this.addStatTrans(effect,effect.duration,0);break;case database.BattleEffectTrans.None_Trans_Only_Effect_Use_Type:if(null!=(du=MasterManager.getInstance().get_DurabilityEffect(effect.effect_id)).effect_call&&""!=du.effect_call){var e_list=du.effect_call.split(",");for(idx=0;idx<e_list.length;idx++)if("Oboro_fx_flag"==e_list[idx])if(this.getTeamType()==BattleGeneral_TeamType.Right){var eff_name=cmString("%s_enemy",e_list[idx]);this.addCommonEffectNode(eff_name)}else this.addCommonEffectNode(e_list[idx]);else this.startFxPartNoneTransEffect(e_list[idx],effect)}break;case database.BattleEffectTrans.Damage_Increased_By_Hina:for(accum_point=0,max_value=0,dur_idx=0;dur_idx<this.m_durability_effects.length;dur_idx++)this.m_durability_effects[dur_idx].trans_type==database.BattleEffectTrans.Damage_Increased_By_Hina&&(accum_point+=this.m_durability_effects[dur_idx].value,max_value!=this.m_durability_effects[dur_idx].end_effects[0].effect_id&&(max_value=this.m_durability_effects[dur_idx].end_effects[0].effect_id));accum_point<max_value&&this.addStatTrans(effect,effect.duration,0);break;case database.BattleEffectTrans.Accumulate_Stack_Wanko_Damage_Dec:effect.value=effect.durability.value*base.getGeneral().stack_wanko;break;case database.BattleEffectTrans.Motion_Singing:this.addStatTrans(effect,effect.duration,base.getBattleGeneral().general.gnrl_group),this.playAction(ActionType.Idle2);break;case database.BattleEffectTrans.Damage_Dispersion:for(dur_idx=0;dur_idx<this.m_durability_effects.length;dur_idx++)this.m_durability_effects[dur_idx].trans_type==database.BattleEffectTrans.Damage_Dispersion&&(this.m_durability_effects[dur_idx].delta_duration=0,is_set_dur=!1);break;case database.BattleEffectTrans.Invisibility:this.runTransShader(TransShaderType.InvisibleElement,0,null,0),this.addStatTrans(effect,effect.duration,0);break;case database.BattleEffectTrans.Blind_Darkness:case database.BattleEffectTrans.Not_Resist_Blind:case database.BattleEffectTrans.Damage_Increased:case database.BattleEffectTrans.New_Damage_Reduce_Rate:case database.BattleEffectTrans.Defence_Increased:case database.BattleEffectTrans.Defense_Reduce:case database.BattleEffectTrans.Defence_Increased_Rate:case database.BattleEffectTrans.Defence_Reduce_Rate:case database.BattleEffectTrans.After_Send_Damage_Inc_Rate:case database.BattleEffectTrans.After_Recv_Damage_Inc_Rate:case database.BattleEffectTrans.New_Recv_Damage_Inc_Rate:case database.BattleEffectTrans.Attack_Point_Abs_Inc:case database.BattleEffectTrans.Attack_Point_Abs_Dec:case database.BattleEffectTrans.Defence_Point_Rate_Inc:case database.BattleEffectTrans.Defence_Point_Rate_Dec:case database.BattleEffectTrans.Guard_Invoke_Rate_inc:case database.BattleEffectTrans.Guard_Invoke_Rate_Dec:case database.BattleEffectTrans.Guard_Defence_Rate_Inc:case database.BattleEffectTrans.Guard_Defence_Rate_Dec:case database.BattleEffectTrans.Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Critical_Percent_Rate_Dec:case database.BattleEffectTrans.Critical_Power_Rate_inc:case database.BattleEffectTrans.Critical_Power_Rate_Dec:case database.BattleEffectTrans.Resistance_Increment:case database.BattleEffectTrans.Provocation:case database.BattleEffectTrans.ActiveSkill_Damage_Inc:case database.BattleEffectTrans.Trans_Invincibility_Mode:case database.BattleEffectTrans.Defence_Ignore_Attack:case database.BattleEffectTrans.Heal_By_Tick_Time:case database.BattleEffectTrans.Reflect_Damage:case database.BattleEffectTrans.Blood_Sucking_Rate:case database.BattleEffectTrans.After_Recv_Skill_Dmg_Dec_Rate:case database.BattleEffectTrans.HP_Shield_Caster_Max_HP:case database.BattleEffectTrans.In_Duration_Dead_At_Reborn:case database.BattleEffectTrans.All_Effect_Trans_Types:case database.BattleEffectTrans.Send_Damage_Inc_Rate_Angry_Rabbit:case database.BattleEffectTrans.Attack_Favorable_Element:case database.BattleEffectTrans.Heal_Value_Inc:case database.BattleEffectTrans.Perfect_Critical_Power:case database.BattleEffectTrans.Enermy_General_Trans_Type_Freeze_Critical_Power_Rate_inc:case database.BattleEffectTrans.Passive_Duration_Critical_Power_Rate_inc:case database.BattleEffectTrans.Passive_Duration_Active_Skill_Damage_Inc:case database.BattleEffectTrans.General_Life_Not_Zero:case database.BattleEffectTrans.Defence_Point_Rate_Dec_For_Boss:case database.BattleEffectTrans.Attack_Point_Rate_Dec_For_Boss:case database.BattleEffectTrans.All_Attack_Change_Target_For_Boss:case database.BattleEffectTrans.Normal_Attack_Defence_Ignore_Attack:case database.BattleEffectTrans.Enermy_General_Trans_Type_Stun_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Freeze_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Poison_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Silence_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Burning_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Elec_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Wounds_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Blind_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Attack_Speed_Dec:case database.BattleEffectTrans.Boss_Attack_Speed_Dec:case database.BattleEffectTrans.Active_Skill_Charge_Speed_Dec:case database.BattleEffectTrans.Active_Skill_Charge_Speed_Inc:case database.BattleEffectTrans.Boss_Active_Skill_Charge_Speed_Dec:case database.BattleEffectTrans.Passive_Duration_Cri_Defence_Point_Rate_Dec:case database.BattleEffectTrans.Timer_Tamatebako_Calc_Def_End:case database.BattleEffectTrans.Timer_Tamatebako_Calc_Not_Def_End:case database.BattleEffectTrans.Enermy_General_Trans_Type_Stun_Critical_Power_Rate_inc:case database.BattleEffectTrans.All_Trans_Att_Dec_Rate:case database.BattleEffectTrans.All_Trans_Def_Dec_Rate:case database.BattleEffectTrans.All_Trans_Critical_Percent_Rate_Dec_Rate:case database.BattleEffectTrans.All_Trans_Critical_Power_Rate_Dec_Rate:case database.BattleEffectTrans.All_Trans_Resistance_Dec_Rate:case database.BattleEffectTrans.All_Trans_Skill_Charge_Speed_Rate_Dec_Rate:case database.BattleEffectTrans.All_Trans_Attack_Speed_Rate_Dec_Rate:case database.BattleEffectTrans.Passive_Change_Normal_Attack_Count:case database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_0:case database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_1:case database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_2:case database.BattleEffectTrans.Boss_Damage_Game_Start:case database.BattleEffectTrans.Enermy_Find_Target_To_Low_Hp:case database.BattleEffectTrans.Enermy_Find_Target_To_High_Hp:case database.BattleEffectTrans.Golden_Invincibility:case database.BattleEffectTrans.Damage_Increaded_By_Konami:case database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate:case database.BattleEffectTrans.Not_Resist_Freeze:case database.BattleEffectTrans.Not_Resist_Poison:case database.BattleEffectTrans.Not_Resist_Silence:case database.BattleEffectTrans.Not_Resist_Wound:case database.BattleEffectTrans.Target_Count_Change_One:case database.BattleEffectTrans.Attack_Speed_Inc:case database.BattleEffectTrans.After_Send_Damage_Dec_Rate:case database.BattleEffectTrans.Life_Then_Def_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Wound_Attack_Inc_To_Our_team:case database.BattleEffectTrans.Our_Team_Damage_Dec:case database.BattleEffectTrans.All_Our_Team_Dead_Count_Def_Inc:case database.BattleEffectTrans.Random_Trans_Stat_Up:case database.BattleEffectTrans.Darkness_Shield:case database.BattleEffectTrans.Invincibility_Non_Alpha:case database.BattleEffectTrans.Random_Stat_Attack_50_To_100:case database.BattleEffectTrans.Random_Stat_Defence_50_To_100:case database.BattleEffectTrans.Random_Stat_Critical_Percent_50_To_100:case database.BattleEffectTrans.Stop_Skill_Charge:case database.BattleEffectTrans.HP_Shield_Caster_Heal_Value:case database.BattleEffectTrans.Passive_Attk_Dec_Songyeon_Hero:case database.BattleEffectTrans.Stop_Skill_Charge_koi:case database.BattleEffectTrans.Advenced_Element_Attack_Damage_Inc:case database.BattleEffectTrans.Weak_Element_Attack_Damage_Dec:case database.BattleEffectTrans.add_damage_to_koi_skill:case database.BattleEffectTrans.Attaker_Fire_Dmg_Inc:case database.BattleEffectTrans.Attaker_Water_Dmg_Inc:case database.BattleEffectTrans.Attaker_Wind_Dmg_Inc:case database.BattleEffectTrans.Attaker_Light_Dmg_Inc:case database.BattleEffectTrans.Attaker_Dark_Dmg_Inc:case database.BattleEffectTrans.Accumulate_Stack_Wanko_Dot_Heal:case database.BattleEffectTrans.Hitted_Add_Stack_WanKo:case database.BattleEffectTrans.Trans_Damage_inc_Critical_Rate_Inc:case database.BattleEffectTrans.Trans_Defence_Inc_Damage_Inc:case database.BattleEffectTrans.Trans_Defence_Inc_Critical_Rate_Inc:case database.BattleEffectTrans.Attacker_State_Type_Dong_Damage_Inc:case database.BattleEffectTrans.Attacker_State_Type_Wie_Damage_inc:case database.BattleEffectTrans.Attacker_State_Type_Chock_Damage_Inc:case database.BattleEffectTrans.Attacker_State_Type_O_Damage_Inc:case database.BattleEffectTrans.Attacker_State_Type_Won_Damage_Inc:case database.BattleEffectTrans.Attacker_State_Type_Jae_Damage_Inc:case database.BattleEffectTrans.Attacker_State_Type_Wae_Damage_Inc:case database.BattleEffectTrans.Enemy_General_Elec_Shork_Our_Gener_Damage_Inc:case database.BattleEffectTrans.Guard_Power_Inc_General_Def_Inc:case database.BattleEffectTrans.Charge_Speed_Inc_Hp_Rate:case database.BattleEffectTrans.Use_Active_Skill_Angel_Stack_Up:case database.BattleEffectTrans.Angel_Stack_After_Recv_Skill_Dmg_Dec_Rate:case database.BattleEffectTrans.Angel_Stack_Attack_Inc:case database.BattleEffectTrans.Angel_Stack_Defence_Inc:case database.BattleEffectTrans.Angel_Stack_Tick_Life_Heal:case database.BattleEffectTrans.Timer_Passed_Stack_Up:case database.BattleEffectTrans.Timer_Passed_Stack_Up_Skill_Attk_Inc:case database.BattleEffectTrans.Timer_Passed_Stack_Up_After_Recv_Skill_Dmg_Dec:case database.BattleEffectTrans.Timer_Passed_Stack_Up_Our_Team_Heal:case database.BattleEffectTrans.Random_Damage_Inc:case database.BattleEffectTrans.Normal_Attack_Elec:case database.BattleEffectTrans.Target_Radio_Show_Buff_Effect:case database.BattleEffectTrans.Caster_Lv_Def_Inc:case database.BattleEffectTrans.Caster_Lv_Attk_Inc:case database.BattleEffectTrans.Caster_Lv_Critical_Rate_Inc:case database.BattleEffectTrans.Caster_Lv_Critical_Power_Inc:case database.BattleEffectTrans.Caster_Lv_Skill_Attack_Inc:case database.BattleEffectTrans.Caster_Lv_Skill_Attack_Inc_Dup_Limit:case database.BattleEffectTrans.Use_Active_Skill_Glitter_Beach_Stack_Up:case database.BattleEffectTrans.Glitter_Beach_Stack_After_Recv_Skill_Dmg_Dec_Rate:case database.BattleEffectTrans.Glitter_Beach_Stack_Attaker_Light_Dmg_Inc:case database.BattleEffectTrans.Glitter_Beach_Stack_ActiveSkill_Damage_Inc:this.addStatTrans(effect,effect.duration,0);break;case database.BattleEffectTrans.Reflect_Damage_Skill:var gg=MasterManager.getInstance().get_General(effect.gnrl_id);this.addStatTrans(effect,effect.duration,gg.gnrl_group);break;case database.BattleEffectTrans.FeverMode:this.addStatTrans(effect,effect.duration,0)}1==is_set_dur&&(this.addCheckDurabilityEffectData(effect),null!=this._updateDurabilityEffectList&&this._updateDurabilityEffectList.updateDurabilityEffectIcon(this.m_durability_effects))}else{is_set_dur=!0;switch(effect.trans_type){case database.BattleEffectTrans.Stun:case database.BattleEffectTrans.Not_Resist_Stun:this.cancelActiveSkill(),this.cancelUsedEffect(),this.setGeneralState(BattleGeneral_GeneralState.Stun),this.playAction(ActionType.Stun),this.addStatTrans(effect,effect.duration,0);break;case database.BattleEffectTrans.Invisibility:this.runTransShader(TransShaderType.InvisibleElement,0,null,0),this.addStatTrans(effect,effect.duration,0);break;case database.BattleEffectTrans.None_Trans_Only_Effect_Use_Type:var du;if(null!=(du=MasterManager.getInstance().get_DurabilityEffect(effect.effect_id)).effect_call&&""!=du.effect_call)for(e_list=du.effect_call.split(","),idx=0;idx<e_list.length;idx++)this.startFxPartNoneTransEffect(e_list[idx],effect);du=null;break;case database.BattleEffectTrans.Damage_Increased_By_Hina:for(accum_point=0,max_value=0,dur_idx=0;dur_idx<this.m_durability_effects.length;dur_idx++)this.m_durability_effects[dur_idx].trans_type==database.BattleEffectTrans.Damage_Increased_By_Hina&&(accum_point+=this.m_durability_effects[dur_idx].value,max_value!=this.m_durability_effects[dur_idx].durability.dura_end_effect&&(max_value=this.m_durability_effects[dur_idx].durability.dura_end_effect));accum_point<max_value?this.addStatTrans(effect,effect.duration,0):is_set_dur=!1;break;case database.BattleEffectTrans.Golden_Invincibility:for(var dur_eff_idx=0;dur_eff_idx<this.m_durability_effects.length;dur_eff_idx++)this.m_durability_effects[dur_eff_idx].our_enemy==database.BattleSelfOther.Other&&(this.m_durability_effects[dur_eff_idx].delta_duration=this.m_durability_effects[dur_eff_idx].duration,this.m_durability_effects[dur_eff_idx].is_clear=!0,this.m_durability_effects[dur_eff_idx].is_end=!0);this.runTransShader(TransShaderType.Golden,0),this.addStatTrans(effect,effect.duration,0);break;case database.BattleEffectTrans.Damage_Increaded_By_Konami:var stack=0;for(dur_eff_idx=0;dur_eff_idx<this.m_durability_effects.length;dur_eff_idx++)this.m_durability_effects[dur_eff_idx].trans_type==database.BattleEffectTrans.Damage_Increaded_By_Konami&&++stack;stack<parseInt(effect.durability.dura_end_effect)?this.addStatTrans(effect,effect.duration,0):is_set_dur=!1;break;case database.BattleEffectTrans.Motion_Singing:this.addStatTrans(effect,effect.duration,0),this.playAction(ActionType.Idle2);break;case database.BattleEffectTrans.Damage_Dispersion:for(dur_idx=0;dur_idx<this.m_durability_effects.length;dur_idx++)this.m_durability_effects[dur_idx].trans_type==database.BattleEffectTrans.Damage_Dispersion&&(this.m_durability_effects[dur_idx].delta_duration=0,is_set_dur=!1);break;case database.BattleEffectTrans.Blind_Darkness:case database.BattleEffectTrans.Not_Resist_Blind:case database.BattleEffectTrans.Damage_Increased:case database.BattleEffectTrans.New_Damage_Reduce_Rate:case database.BattleEffectTrans.Defence_Increased:case database.BattleEffectTrans.Defense_Reduce:case database.BattleEffectTrans.Defence_Increased_Rate:case database.BattleEffectTrans.Defence_Reduce_Rate:case database.BattleEffectTrans.After_Send_Damage_Inc_Rate:case database.BattleEffectTrans.After_Recv_Damage_Inc_Rate:case database.BattleEffectTrans.New_Recv_Damage_Inc_Rate:case database.BattleEffectTrans.Attack_Point_Abs_Inc:case database.BattleEffectTrans.Attack_Point_Abs_Dec:case database.BattleEffectTrans.Defence_Point_Rate_Inc:case database.BattleEffectTrans.Defence_Point_Rate_Dec:case database.BattleEffectTrans.Guard_Invoke_Rate_inc:case database.BattleEffectTrans.Guard_Invoke_Rate_Dec:case database.BattleEffectTrans.Guard_Defence_Rate_Inc:case database.BattleEffectTrans.Guard_Defence_Rate_Dec:case database.BattleEffectTrans.Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Critical_Percent_Rate_Dec:case database.BattleEffectTrans.Critical_Power_Rate_inc:case database.BattleEffectTrans.Critical_Power_Rate_Dec:case database.BattleEffectTrans.Resistance_Increment:case database.BattleEffectTrans.Provocation:case database.BattleEffectTrans.ActiveSkill_Damage_Inc:case database.BattleEffectTrans.Trans_Invincibility_Mode:case database.BattleEffectTrans.Heal_By_Tick_Time:case database.BattleEffectTrans.Reflect_Damage:case database.BattleEffectTrans.After_Recv_Skill_Dmg_Dec_Rate:case database.BattleEffectTrans.HP_Shield_Caster_Max_HP:case database.BattleEffectTrans.In_Duration_Dead_At_Reborn:case database.BattleEffectTrans.Attack_Favorable_Element:case database.BattleEffectTrans.Heal_Value_Inc:case database.BattleEffectTrans.Perfect_Critical_Power:case database.BattleEffectTrans.Enermy_General_Trans_Type_Freeze_Critical_Power_Rate_inc:case database.BattleEffectTrans.Passive_Duration_Critical_Power_Rate_inc:case database.BattleEffectTrans.Passive_Duration_Active_Skill_Damage_Inc:case database.BattleEffectTrans.General_Life_Not_Zero:case database.BattleEffectTrans.Defence_Point_Rate_Dec_For_Boss:case database.BattleEffectTrans.Attack_Point_Rate_Dec_For_Boss:case database.BattleEffectTrans.All_Attack_Change_Target_For_Boss:case database.BattleEffectTrans.Normal_Attack_Defence_Ignore_Attack:case database.BattleEffectTrans.Enermy_General_Trans_Type_Stun_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Freeze_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Poison_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Silence_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Burning_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Elec_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Wounds_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Blind_Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Attack_Speed_Dec:case database.BattleEffectTrans.Boss_Attack_Speed_Dec:case database.BattleEffectTrans.Active_Skill_Charge_Speed_Dec:case database.BattleEffectTrans.Active_Skill_Charge_Speed_Inc:case database.BattleEffectTrans.Boss_Active_Skill_Charge_Speed_Dec:case database.BattleEffectTrans.Blood_Sucking_Rate:case database.BattleEffectTrans.Passive_Duration_Cri_Defence_Point_Rate_Dec:case database.BattleEffectTrans.Timer_Tamatebako_Calc_Def_End:case database.BattleEffectTrans.Timer_Tamatebako_Calc_Not_Def_End:case database.BattleEffectTrans.Enermy_General_Trans_Type_Stun_Critical_Power_Rate_inc:case database.BattleEffectTrans.All_Trans_Att_Dec_Rate:case database.BattleEffectTrans.All_Trans_Def_Dec_Rate:case database.BattleEffectTrans.All_Trans_Critical_Percent_Rate_Dec_Rate:case database.BattleEffectTrans.All_Trans_Critical_Power_Rate_Dec_Rate:case database.BattleEffectTrans.All_Trans_Resistance_Dec_Rate:case database.BattleEffectTrans.All_Trans_Skill_Charge_Speed_Rate_Dec_Rate:case database.BattleEffectTrans.All_Trans_Attack_Speed_Rate_Dec_Rate:case database.BattleEffectTrans.Passive_Change_Normal_Attack_Count:case database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_0:case database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_1:case database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_2:case database.BattleEffectTrans.Enermy_Find_Target_To_Low_Hp:case database.BattleEffectTrans.Enermy_Find_Target_To_High_Hp:case database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate:case database.BattleEffectTrans.Not_Resist_Freeze:case database.BattleEffectTrans.Not_Resist_Poison:case database.BattleEffectTrans.Not_Resist_Silence:case database.BattleEffectTrans.Not_Resist_Wound:case database.BattleEffectTrans.Reflect_Damage_Skill:case database.BattleEffectTrans.Target_Count_Change_One:case database.BattleEffectTrans.Attack_Speed_Inc:case database.BattleEffectTrans.After_Send_Damage_Dec_Rate:case database.BattleEffectTrans.Life_Then_Def_Rate_Inc:case database.BattleEffectTrans.Enermy_General_Trans_Type_Wound_Attack_Inc_To_Our_team:case database.BattleEffectTrans.Our_Team_Damage_Dec:case database.BattleEffectTrans.All_Our_Team_Dead_Count_Def_Inc:case database.BattleEffectTrans.Random_Trans_Stat_Up:case database.BattleEffectTrans.Darkness_Shield:case database.BattleEffectTrans.Invincibility_Non_Alpha:case database.BattleEffectTrans.Random_Stat_Attack_50_To_100:case database.BattleEffectTrans.Random_Stat_Defence_50_To_100:case database.BattleEffectTrans.Random_Stat_Critical_Percent_50_To_100:case database.BattleEffectTrans.Stop_Skill_Charge:case database.BattleEffectTrans.HP_Shield_Caster_Heal_Value:case database.BattleEffectTrans.Stop_Skill_Charge_koi:case database.BattleEffectTrans.Advenced_Element_Attack_Damage_Inc:case database.BattleEffectTrans.Weak_Element_Attack_Damage_Dec:case database.BattleEffectTrans.add_damage_to_koi_skill:case database.BattleEffectTrans.Attaker_Fire_Dmg_Inc:case database.BattleEffectTrans.Attaker_Water_Dmg_Inc:case database.BattleEffectTrans.Attaker_Wind_Dmg_Inc:case database.BattleEffectTrans.Attaker_Light_Dmg_Inc:case database.BattleEffectTrans.Attaker_Dark_Dmg_Inc:case database.BattleEffectTrans.Accumulate_Stack_Wanko_Damage_Dec:case database.BattleEffectTrans.Accumulate_Stack_Wanko_Dot_Heal:case database.BattleEffectTrans.Hitted_Add_Stack_WanKo:case database.BattleEffectTrans.Trans_Damage_inc_Critical_Rate_Inc:case database.BattleEffectTrans.Trans_Defence_Inc_Damage_Inc:case database.BattleEffectTrans.Trans_Defence_Inc_Critical_Rate_Inc:case database.BattleEffectTrans.Attacker_State_Type_Dong_Damage_Inc:case database.BattleEffectTrans.Attacker_State_Type_Wie_Damage_inc:case database.BattleEffectTrans.Attacker_State_Type_Chock_Damage_Inc:case database.BattleEffectTrans.Attacker_State_Type_O_Damage_Inc:case database.BattleEffectTrans.Attacker_State_Type_Won_Damage_Inc:case database.BattleEffectTrans.Attacker_State_Type_Jae_Damage_Inc:case database.BattleEffectTrans.Attacker_State_Type_Wae_Damage_Inc:case database.BattleEffectTrans.Enemy_General_Elec_Shork_Our_Gener_Damage_Inc:case database.BattleEffectTrans.Guard_Power_Inc_General_Def_Inc:case database.BattleEffectTrans.Charge_Speed_Inc_Hp_Rate:case database.BattleEffectTrans.Use_Active_Skill_Angel_Stack_Up:case database.BattleEffectTrans.Angel_Stack_After_Recv_Skill_Dmg_Dec_Rate:case database.BattleEffectTrans.Angel_Stack_Attack_Inc:case database.BattleEffectTrans.Angel_Stack_Defence_Inc:case database.BattleEffectTrans.Angel_Stack_Tick_Life_Heal:case database.BattleEffectTrans.Timer_Passed_Stack_Up:case database.BattleEffectTrans.Timer_Passed_Stack_Up_Skill_Attk_Inc:case database.BattleEffectTrans.Timer_Passed_Stack_Up_After_Recv_Skill_Dmg_Dec:case database.BattleEffectTrans.Timer_Passed_Stack_Up_Our_Team_Heal:case database.BattleEffectTrans.Random_Damage_Inc:case database.BattleEffectTrans.Normal_Attack_Elec:case database.BattleEffectTrans.After_Recv_Damage_Dec:case database.BattleEffectTrans.Use_Active_Skill_Glitter_Beach_Stack_Up:case database.BattleEffectTrans.Glitter_Beach_Stack_After_Recv_Skill_Dmg_Dec_Rate:case database.BattleEffectTrans.Glitter_Beach_Stack_Attaker_Light_Dmg_Inc:case database.BattleEffectTrans.Glitter_Beach_Stack_ActiveSkill_Damage_Inc:case database.BattleEffectTrans.FeverMode:this.addStatTrans(effect,effect.duration,0)}1==is_set_dur&&(this.addCheckDurabilityEffectData(effect),null!=this._updateDurabilityEffectList&&this._updateDurabilityEffectList.updateDurabilityEffectIcon(this.m_durability_effects))}}this.addDebugGeneral("addDurabilityEffect"),this.checkTransShader(),gnrl=effect=base_test=null}},addCheckDurabilityEffectData:function(effect){if(cc.log(this.m_battle_general.general.name+"'s before durability_effects "+this.trackingArray(this.m_durability_effects)),effect.trans_type==database.BattleEffectTrans.Element_Type_Fire_Trans||effect.trans_type==database.BattleEffectTrans.Element_Type_Water_Trans||effect.trans_type==database.BattleEffectTrans.Element_Type_Wind_Trans||effect.trans_type==database.BattleEffectTrans.Element_Type_Light_Trans||effect.trans_type==database.BattleEffectTrans.Element_Type_Dark_Trans){for(var i=0;i<this.m_durability_effects.length;i++)this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Element_Type_Fire_Trans&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Element_Type_Water_Trans&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Element_Type_Wind_Trans&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Element_Type_Light_Trans&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Element_Type_Dark_Trans||(this.m_durability_effects[i].delta_duration=this.m_durability_effects[i].duration,this.m_info_bar.removeDurabilityEffect(this.m_durability_effects[i]));this.m_durability_effects.push(effect),this.m_info_bar.addDurabilityEffect(effect)}else if(effect.our_enemy==database.BattleSelfOther.Self){if(effect.trans_type==database.BattleEffectTrans.Reflect_Damage||effect.trans_type==database.BattleEffectTrans.HP_Shield_Caster_Max_HP||effect.trans_type==database.BattleEffectTrans.Darkness_Shield||effect.trans_type==database.BattleEffectTrans.HP_Shield_Caster_Heal_Value)for(var idx=0;idx<this.m_durability_effects.length;idx++)this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Reflect_Damage&&this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.HP_Shield_Caster_Max_HP&&this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Darkness_Shield&&this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.HP_Shield_Caster_Heal_Value||(this.m_durability_effects[idx].delta_duration=this.m_durability_effects[idx].duration);if(effect.trans_type==database.BattleEffectTrans.Send_Damage_Inc_Rate_Angry_Rabbit)for(idx=0;idx<this.m_durability_effects.length;idx++)this.m_durability_effects[idx].trans_type==database.BattleEffectTrans.Send_Damage_Inc_Rate_Angry_Rabbit&&(this.m_durability_effects[idx].delta_duration=this.m_durability_effects[idx].duration);if(effect.trans_type==database.BattleEffectTrans.Golden_Invincibility)for(idx=0;idx<this.m_durability_effects.length;idx++)this.m_durability_effects[idx].trans_type==database.BattleEffectTrans.Golden_Invincibility&&(this.m_durability_effects[idx].delta_duration=this.m_durability_effects[idx].duration);this.m_durability_effects.push(effect),this.m_info_bar.addDurabilityEffect(effect)}else if(effect.trans_type==database.BattleEffectTrans.Stun||effect.trans_type==database.BattleEffectTrans.Silence||effect.trans_type==database.BattleEffectTrans.Poison||effect.trans_type==database.BattleEffectTrans.Freeze||effect.trans_type==database.BattleEffectTrans.After_Recv_Damage_Inc_Rate||effect.trans_type==database.BattleEffectTrans.Damage_Reduce||effect.trans_type==database.BattleEffectTrans.New_Poison_Dmg_Rate||effect.trans_type==database.BattleEffectTrans.Wound_Obstruct_Heal||effect.trans_type==database.BattleEffectTrans.Blind_Darkness||effect.trans_type==database.BattleEffectTrans.Not_Resist_Stun||effect.trans_type==database.BattleEffectTrans.Not_Resist_Silence||effect.trans_type==database.BattleEffectTrans.Not_Resist_Poison||effect.trans_type==database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate||effect.trans_type==database.BattleEffectTrans.Not_Resist_Damage_Reduce||effect.trans_type==database.BattleEffectTrans.Not_Resist_Wound||effect.trans_type==database.BattleEffectTrans.Not_Resist_Blind){var is_general_freeze=!1;for(i=0;i<this.m_durability_effects.length;i++)this.m_durability_effects[i].our_enemy==database.BattleSelfOther.Other&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Element_Type_Fire_Trans&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Element_Type_Water_Trans&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Element_Type_Wind_Trans&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Element_Type_Light_Trans&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Element_Type_Dark_Trans&&(this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Stun&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Silence&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Poison&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.After_Recv_Damage_Inc_Rate&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Damage_Reduce&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.New_Poison_Dmg_Rate&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Wound_Obstruct_Heal&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Blind_Darkness&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Stun&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Silence&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Poison&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Damage_Reduce&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Wound&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Blind||(this.m_durability_effects[i].delta_duration=this.m_durability_effects[i].duration,this.m_info_bar.removeDurabilityEffect(this.m_durability_effects[i])),effect.trans_type!=database.BattleEffectTrans.Freeze||this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Freeze&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Freeze?effect.trans_type==database.BattleEffectTrans.Freeze||this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Freeze&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Freeze||(is_general_freeze=!0):(this.m_durability_effects[i].delta_duration=this.m_durability_effects[i].duration,this.m_info_bar.removeDurabilityEffect(this.m_durability_effects[i])));is_general_freeze||(null==effect.icon_name&&cc.log("ERROR CHECK"),this.m_durability_effects.push(effect),this.m_info_bar.addDurabilityEffect(effect))}else this.m_durability_effects.push(effect),this.m_info_bar.addDurabilityEffect(effect);cc.log(this.m_battle_general.general.name+"'s after durability_effects "+this.trackingArray(this.m_durability_effects))},trackingArray:function(array,key){for(var result_str="",idx=0;idx<array.length;idx++)result_str=result_str+array[idx].trans_type+"  ";return result_str},releaseTransGeneral:function(_trans){if(this.findTransType(_trans))for(var i=0;i<this.m_durability_effects.length;i++)this.m_durability_effects[i].trans_type==_trans&&(this.m_durability_effects[i].delta_duration=this.m_durability_effects[i].duration,this.m_durability_effects[i].is_end=!0)},calcTimerStackCheck:function(dt){if(this.findTransType(database.BattleEffectTrans.Timer_Passed_Stack_Up,this.IsFriend())){var is_timer_stack_enable=!1;if(1<this.m_battle_general.general.gnrl_class){this.m_battle_general.timer_passed_stack_delta_time+=dt;var one_list=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Always,one_list);for(var found_is=!1,found_idx=0;found_idx<one_list.length;found_idx++)if(one_list[found_idx].stat_trans==database.BattleEffectTrans.Timer_Passed_Stack_Up){found_is=!0;break}1==found_is&&(this.m_battle_general.timer_passed_stack_delta_time>=one_list[found_idx].sub_value&&(this.m_battle_general.timer_passed_stack_delta_time-=one_list[found_idx].sub_value,this.m_battle_general.one_start_stack+=one_list[found_idx].value,this.m_battle_general.one_start_stack>one_list[found_idx].onetime_effect.limit_value&&(this.m_battle_general.one_start_stack=one_list[found_idx].onetime_effect.limit_value)),is_timer_stack_enable=!0)}is_timer_stack_enable||(this.m_battle_general.one_start_stack=0)}},calcDurabilityEffect:function(dt){if(!(this.m_cur_state>=BattleGeneral_GeneralState.Death_Ready)){for(var delete_list=[],is_bomb_release=!1,i=0;i<this.m_durability_effects.length;i++){if(1==this.m_Is_Move_Skill_DeltaTime&&(this.m_durability_effects[i].delta_duration+=dt),0<this.m_durability_effects[i].tick&&(1==this.m_Is_Move_Skill_DeltaTime&&(this.m_durability_effects[i].delta_tick+=dt),this.m_durability_effects[i].delta_tick>this.m_durability_effects[i].tick))for(var i2=this.m_durability_effects[i].delta_tick=0;i2<this.m_durability_effects[i].tick_effects.length;i2++){var one=this.m_durability_effects[i].tick_effects[i2];if(this.IsAlive()&&(one.damage=this.m_durability_effects[i].damage,this.addOnetimeEffect(one,this.m_durability_effects[i].trans_type),!this.IsAlive()))for(var idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++)this.m_battle_general.trans_passive_skill[idx].trans_passive.invoke_type1!=database.BattleInvokeType.BattleInvokeType_Dead_At&&this.m_battle_general.trans_passive_skill[idx].trans_passive.invoke_type2!=database.BattleInvokeType.BattleInvokeType_Dead_At||this.deathTransPassiveSkill(this.m_battle_general.trans_passive_skill[idx],this)}if(this.IsAlive()&&(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Freeze||this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Petrification)){var alive_count=this.m_my_team.getAliveMemberCount();this.m_my_team.getAliveFreezeCount()==alive_count&&(this.m_durability_effects[i].delta_duration=this.m_durability_effects[i].duration)}if(this.m_durability_effects[i].delta_duration>=this.m_durability_effects[i].duration){this.m_durability_effects[i].is_end=!0;for(i2=0;i2<this.m_durability_effects[i].end_effects.length;i2++){one=this.m_durability_effects[i].end_effects[i2];if((this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Freeze||this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Petrification||this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Timer_Bomb_No_Calc_Def||this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Timer_Bomb_Calc_Def||this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Not_Resist_Freeze)&&(this.IsAlive()&&!this.m_durability_effects[i].is_clear&&(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Timer_Bomb_Calc_Def||this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Timer_Bomb_No_Calc_Def?(this.addOnetimeEffect(one,this.m_durability_effects[i].trans_type),is_bomb_release=!0):this.addOnetimeEffect(one,this.m_durability_effects[i].trans_type),!this.IsAlive())))for(idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++)this.m_battle_general.trans_passive_skill[idx].trans_passive.invoke_type1!=database.BattleInvokeType.BattleInvokeType_Dead_At&&this.m_battle_general.trans_passive_skill[idx].trans_passive.invoke_type2!=database.BattleInvokeType.BattleInvokeType_Dead_At||this.deathTransPassiveSkill(this.m_battle_general.trans_passive_skill[idx],this)}delete_list.push($.extend({},this.m_durability_effects[i]))}}if(is_bomb_release){var found_is=!1,found_push=[];for(idx=0;idx<this.m_durability_effects.length;idx++){var d=this.m_durability_effects[idx];idx,d.trans_type!=database.BattleEffectTrans.Freeze&&d.trans_type!=database.BattleEffectTrans.Not_Resist_Freeze||(found_is=!0,found_push.push(idx)),d=null}if(1==found_is)for(var f_idx2=0;f_idx2<found_push.length;f_idx2++)this.m_durability_effects[found_push[f_idx2]].delta_duration=this.m_durability_effects[found_push[f_idx2]].duration;found_push=[]}0!=delete_list.length&&this.removeDurabilityEffect(delete_list),delete_list.length=0,delete_list=null}},removeDurabilityEffect:function(delete_effects){this.addDebugGeneral("removeDurabilityEffect");for(var del,m=MasterManager.getInstance(),insert_dur=[],i=0;i<delete_effects.length;i++){del=delete_effects[i];for(var gnrl=m.get_General(del.gnrl_id),remove=null,remove_is=!1,i2=0;i2<this.m_durability_effects.length;i2++)if(del.gnrl_id==this.m_durability_effects[i2].gnrl_id&&del.effect_id==this.m_durability_effects[i2].effect_id&&del.delta_duration>=del.duration&&del.is_end&&del.exec_time==this.m_durability_effects[i2].exec_time){remove_is=!0,remove=this.m_durability_effects[i2],i2;break}if(1==remove_is){if(del.trans_type==database.BattleEffectTrans.Our_Team_Damage_Dec){for(var g_myteam=this.m_my_team.getTeamMembers(),g_idx=0;g_idx<g_myteam.length;g_idx++)if(g_myteam[g_idx].IsAlive())for(var g_jdx=0;g_jdx<g_myteam[g_idx].m_durability_effects.length;g_jdx++)g_myteam[g_idx].m_durability_effects[g_jdx].trans_type==database.BattleEffectTrans.Damage_Dispersion&&del.gnrl_id==g_myteam[g_idx].m_durability_effects[g_jdx].gnrl_id&&del.is_friend_effect==g_myteam[g_idx].m_durability_effects[g_jdx].is_friend_effect&&(g_myteam[g_idx].m_durability_effects[g_jdx].delta_duration=g_myteam[g_idx].m_durability_effects[g_jdx].duration)}else if(del.trans_type==database.BattleEffectTrans.Damage_Dispersion){var gv_myteam=this.m_my_team.getTeamMembers();for(gv_myteam=this.m_my_team.getTeamMembers(),g_idx=0;g_idx<gv_myteam.length;g_idx++)if(gv_myteam[g_idx].IsAlive())for(g_jdx=0;g_jdx<gv_myteam[g_idx].m_durability_effects.length;g_jdx++)gv_myteam[g_idx].m_durability_effects[g_jdx].trans_type==database.BattleEffectTrans.Our_Team_Damage_Dec&&del.gnrl_id==gv_myteam[g_idx].m_durability_effects[g_jdx].gnrl_id&&del.is_friend_effect==gv_myteam[g_idx].m_durability_effects[g_jdx].is_friend_effect&&(gv_myteam[g_idx].m_durability_effects[g_jdx].delta_duration=gv_myteam[g_idx].m_durability_effects[g_jdx].duration)}if(this.IsAlive()){if(!del.is_invalid){if(remove.trans_type==database.BattleEffectTrans.Invisibility)this.setOpacity(255),this.runTransShader(TransShaderType.None,0,null,0);else if(remove.trans_type==database.BattleEffectTrans.None_Trans_Only_Effect_Use_Type){var fx=this.m_fx_used.find(function(node){return node.getEffectId()==remove.effect_id&&node.getEffectTransType()==database.BattleEffectTrans.None_Trans_Only_Effect_Use_Type});null!=fx&&fx.setReserveRemove(!0)}for(i2=0;i2<del.end_effects.length;i2++){if(del.trans_type==database.BattleEffectTrans.Freeze||del.trans_type==database.BattleEffectTrans.Not_Resist_Freeze)(end=$.extend({},del)).trans_type=database.BattleEffectTrans.Freeze_End,end.durability.effect_call="",this.addStatTrans(end,0,gnrl.gnrl_group),this.unfreeze(),this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Damage_Once);else if(del.trans_type==database.BattleEffectTrans.Petrification){(end=$.extend({},del)).trans_type=database.BattleEffectTrans.Petrification_End,end.durability.effect_call="",this.addStatTrans(end,0,0),this.unfreeze(),this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Damage_Once)}else if(del.trans_type==database.BattleEffectTrans.Timer_Bomb_Calc_Def||del.trans_type==database.BattleEffectTrans.Timer_Bomb_No_Calc_Def){if(!this.findTransType(database.BattleEffectTrans.Freeze)&&!this.findTransType(database.BattleEffectTrans.Petrification)&&!this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze))(end=$.extend({},del)).effect_id=0,del.trans_type==database.BattleEffectTrans.Timer_Bomb_Calc_Def?end.trans_type=database.BattleEffectTrans.Timer_Bomb_Calc_Def_End:end.trans_type=database.BattleEffectTrans.Timer_Bomb_No_Calc_Def_End,this.addStatTrans(end,0,0),this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Damage_Once),del.gnrl_id%1e3==435&&this.addCommonEffectNode("Jegalryang_VD20_fx_Chocolat_bomb")}else if(del.trans_type==database.BattleEffectTrans.General_Life_Not_Zero){if(!(this.findTransType(database.BattleEffectTrans.Freeze)||this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)||this.findTransType(database.BattleEffectTrans.Petrification)||this.findTransType(database.BattleEffectTrans.Stun)||this.findTransType(database.BattleEffectTrans.Not_Resist_Stun)||this.findTransType(database.BattleEffectTrans.Silence)||this.findTransType(database.BattleEffectTrans.Not_Resist_Silence)))if(!del.is_clear)(end=$.extend({},del)).effect_id=0,this.addOnetimeEffect(del.end_effects[i2],del.end_effects[i2].stat_trans,database.DamageType.Heal)}else if(del.trans_type==database.BattleEffectTrans.Timer_Tamatebako_Calc_Def_End||del.trans_type==database.BattleEffectTrans.Timer_Tamatebako_Calc_Not_Def_End){for(var rand=parseInt(1e4*Math.random()),plus_percent=0,membercnt=0,myteam=this.m_my_team.getTeamMembers(),member_idx=0;member_idx<myteam.length;member_idx++)if(myteam[member_idx].IsAlive()){if(this==myteam[member_idx])continue;++membercnt}if(0==del.end_effects[i2].onetime_effect.unit_target_dec)plus_percent=del.end_effects[i2].rate;else{var dec_value=membercnt/del.end_effects[i2].onetime_effect.unit_target_dec*del.end_effects[i2].onetime_effect.unit_target_dmg_dec_value;plus_percent=del.end_effects[i2].rate+dec_value}if(rand<plus_percent)(stun=new database.BattleDurabilityEffect).trans_type=database.BattleEffectTrans.Stun,stun.duration=7,stun.our_enemy=database.BattleSelfOther.Other,this.m_game_type==db.BattleGameType.DailyDungeon||this.m_battle_general.is_cutin_npc||insert_dur.push_back(stun),del.trans_type==database.BattleEffectTrans.Timer_Tamatebako_Calc_Def_End?del.end_effects[i2].stat_trans=database.BattleEffectTrans.Timer_Tamatebako_Calc_Def_End:del.trans_type==database.BattleEffectTrans.Timer_Tamatebako_Calc_Not_Def_End&&(del.end_effects[i2].stat_trans=database.BattleEffectTrans.Timer_Tamatebako_Calc_Not_Def_End),del.end_effects[i2].rate=1e4,this.addOnetimeEffect(del.end_effects[i2],del.end_effects[i2].stat_trans,database.DamageType.Bomb_Explosion),del.gnrl_id%1e3==292?this.addCommonEffectNode("Hwanggae_Swim18_fx_hako_bomb"):del.gnrl_id%1e3==426?this.addCommonEffectNode("Heonje_NY20_fx_otoshidama_bomb"):del.gnrl_id%1e3==435&&this.addCommonEffectNode("Jegalryang_VD20_fx_Chocolat_bomb");else del.trans_type==database.BattleEffectTrans.Golden_Invincibility&&this.runTransShader(TransShaderType.None)}else if(del.trans_type==database.BattleEffectTrans.Darkness_Shield){var target_list=[],action=MasterManager.getInstance().get_ActionImplementation(del.durability.action_id);if(null!=this._findEnemyTarget&&(target_list=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position)),0<target_list.length){var damage=del.max_life_shield-del.life_shield;damage<=0&&(damage=0),del.end_effects[i2].damage=damage;for(var t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addOnetimeEffect(del.end_effects[i2]);this.addCommonEffectNode("Sonkwon_Blackened_fx_breaking_shield");var action_sound=action.action_sound;"0"!=action_sound&&""!=action_sound&&null!=action_sound&&AudioEngine.getInstance().playEffect(RES_CDN_SOUND+SND_TYPE+"sound/"+action_sound)}}else if(del.trans_type==database.BattleEffectTrans.Motion_Singing){del.end_effects[i2].input_ability_type==database.BattleInputAbility.Caster_Max_Life&&(del.end_effects[i2].damage=this.getMaxHealthPoint());action=MasterManager.getInstance().get_ActionImplementation(del.durability.action_id),target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position);for(var effect_target_idx=0;effect_target_idx<target_list.length;effect_target_idx++)target_list[effect_target_idx].addOnetimeEffect(del.end_effects[i2])}}}}else if(!del.is_invalid)for(i2=0;i2<del.end_effects.length;i2++){if(del.trans_type==database.BattleEffectTrans.Freeze||del.trans_type==database.BattleEffectTrans.Not_Resist_Freeze)(end=$.extend({},del)).trans_type=database.BattleEffectTrans.Freeze_End,this.addStatTrans(end,0,gnrl.gnrl_group),this.unfreeze(),this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Damage_Once);else if(del.trans_type==database.BattleEffectTrans.Petrification){var end;(end=$.extend({},del)).trans_type=database.BattleEffectTrans.Petrification_End,this.addStatTrans(end,0,0),this.unfreeze(),this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Damage_Once)}}var remove_fx=this.m_fx_used.findIndex(function(fx){return null==fx.getDurabilityEffect()?del.trans_type==fx.getEffectTransType()&&fx.getEffectId()==del.effect_id:del.trans_type==fx.getEffectTransType()&&fx.getEffectId()==del.effect_id&&fx.getDurabilityEffect().exec_time==del.exec_time});-1!=remove_fx&&this.m_fx_used[remove_fx].setReserveRemove(!0),this.removeTransCommonFxNode(del),this.m_info_bar.removeDurabilityEffect(remove),this.m_durability_effects=this.m_durability_effects.filter(function(obj){return JSON.stringify(obj)!=JSON.stringify(del)}),null!=this._updateDurabilityEffectList&&this._updateDurabilityEffectList.updateDurabilityEffectIcon(this.m_durability_effects)}}for(var insert_dur_idx=0;insert_dur_idx<insert_dur.length;insert_dur_idx++)this.addDurabilityEffect(insert_dur[insert_dur_idx],this);if(this.checkTransShader(),this.m_cur_state!=BattleGeneral_GeneralState.Attack&&this.m_cur_state!=BattleGeneral_GeneralState.Skill&&this.m_cur_state!=BattleGeneral_GeneralState.Attack_Ready&&this.m_cur_state!=BattleGeneral_GeneralState.Skill_Ready&&this.m_cur_state!=BattleGeneral_GeneralState.Run)if(0==this.m_durability_effects.length){for(var is_using_idle2=!1,found_is=!1,del_effect_idx=0;del_effect_idx<delete_effects.length;del_effect_idx++)delete_effects[del_effect_idx].trans_type==database.BattleEffectTrans.Motion_Singing&&(del_effect_idx,found_is=!0);1==found_is&&(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Idle2_end),is_using_idle2=!0);for(var found_is2=!1,del_effect_idx2=0;del_effect_idx2<delete_effects.length;del_effect_idx2++)delete_effects[del_effect_idx2].trans_type==database.BattleEffectTrans.FeverMode&&(del_effect_idx2,found_is2=!0);1==found_is2&&(479!=this.m_battle_general.general.gnrl_group&&504!=this.m_battle_general.general.gnrl_group||(cc.log("Attack_Idle Check 1"),this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Attack_Idle),is_using_idle2=!0)),is_using_idle2||(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Attack_Idle),cc.log("Attack_Idle Check 14"))}else{var freeze_is=!1;for(i2=0;i2<this.m_durability_effects.length;i2++)if(this.m_durability_effects[i2].trans_type==database.BattleEffectTrans.Freeze||this.m_durability_effects[i2].trans_type==database.BattleEffectTrans.Petrification||this.m_durability_effects[i2].trans_type==database.BattleEffectTrans.Not_Resist_Freeze){i2,freeze_is=!0;break}if(1==freeze_is)return;var stun_is=!1,stun=0;for(i2=0;i2<this.m_durability_effects.length;i2++)if(this.m_durability_effects[i2].trans_type==database.BattleEffectTrans.Stun||this.m_durability_effects[i2].trans_type==database.BattleEffectTrans.Not_Resist_Stun){stun=i2,stun_is=!0;break}if(1==stun_is)return this.setGeneralState(BattleGeneral_GeneralState.Stun),void this.playAction(ActionType.Stun);var sleep_is=!1;for(i2=0;i2<this.m_durability_effects.length;i2++)if(this.m_durability_effects[i2].trans_type==database.BattleEffectTrans.Sleep){i2,sleep_is=!0;break}if(1==sleep_is)return this.setGeneralState(BattleGeneral_GeneralState.Sleep),void this.playAction(ActionType.Sleep);this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Attack_Idle),cc.log("Attack_Idle Check 13"),this.findTransType(database.BattleEffectTrans.Motion_Singing,this.IsFriend())?(this.setGeneralState(BattleGeneral_GeneralState.Idle2),this.playAction(ActionType.Idle2)):this.findTransType(database.BattleEffectTrans.FeverMode,this.IsFriend())&&(479==this.m_battle_general.general.gnrl_group||504==this.m_battle_general.general.gnrl_group)?(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Idle2)):(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Attack_Idle))}},checkTransShader:function(){if(this.addDebugGeneral("checkTransShader"),this.IsAlive())for(var i=0;i<this.m_durability_effects.length;i++){var eff=this.m_durability_effects[i];if(eff.our_enemy==database.BattleSelfOther.Other)switch(eff.trans_type){case database.BattleEffectTrans.Invisibility:this.setOpacity(128),this.SetAlpha(128);break;case database.BattleEffectTrans.Freeze:case database.BattleEffectTrans.Not_Resist_Freeze:0<eff.duration-eff.delta_duration&&(this.runTransShader(TransShaderType.Frozen,eff.duration-eff.delta_duration,null,0),this.freeze());break;case database.BattleEffectTrans.Poison:case database.BattleEffectTrans.Not_Resist_Poison:case database.BattleEffectTrans.New_Poison_Dmg_Rate:0<eff.duration-eff.delta_duration&&this.runTransShader(TransShaderType.Poison,eff.duration-eff.delta_duration,null,0);break;case database.BattleEffectTrans.Burning:0<eff.duration-eff.delta_duration&&this.runTransShader(TransShaderType.Buring,eff.duration-eff.delta_duration,null,0);break;case database.BattleEffectTrans.Electric_Shork:0<eff.duration-eff.delta_duration&&this.runTransShader(TransShaderType.Electronic,eff.duration-eff.delta_duration,null,0);break;case database.BattleEffectTrans.Bleeding_Woounds:case database.BattleEffectTrans.Not_Resist_Wound:0<eff.duration-eff.delta_duration&&this.runTransShader(TransShaderType.Bleeding,eff.duration-eff.delta_duration,null,0);break;case database.BattleEffectTrans.Petrification:0<eff.duration-eff.delta_duration&&(this.runTransShader(TransShaderType.Stone,eff.duration-eff.delta_duration,null,0),this.freeze())}else if(eff.our_enemy==database.BattleSelfOther.Self)switch(eff.trans_type){case database.BattleEffectTrans.Invisibility:this.setOpacity(128),this.SetAlpha(128);break;case database.BattleEffectTrans.Golden_Invincibility:0<eff.duration-eff.delta_duration?this.runTransShader(TransShaderType.Golden,eff.duration-eff.delta_duration):this.runTransShader(TransShaderType.None)}eff=null}},removeAllDurabilityEffects:function(){this.addDebugGeneral("removeAllDurabilityEffects");for(var i=0;i<this.m_durability_effects.length;i++)this.m_info_bar.removeDurabilityEffect(this.m_durability_effects[i]);this.m_durability_effects.length=0,null!=this._updateDurabilityEffectList&&this._updateDurabilityEffectList.updateDurabilityEffectIcon(this.m_durability_effects)},transEndCallback:function(trans,fx_id){if(this.addDebugGeneral("transEndCallback"),this.IsAlive()){this.checkTransShader();for(var i=0;i<this.m_fx_used.length;i++){var fx=this.m_fx_used[i];if(fx.getFxID()==fx_id){fx.setReserveRemove(!0);break}}}},spAnimationState_getCurrent:function(self,trackIndex){return trackIndex.trackIndex>=self.tracks.length?0:self.tracks[trackIndex.trackIndex]},spineEventListener:function(trackIndex,evt){var entry=this.spAnimationState_getCurrent(this.m_sk.getState(),trackIndex),animationName=entry&&entry.animation?entry.animation.name:0;this.last_use_effect="";var event_name=evt.data.name.toLowerCase();if("attack1"==animationName||"attack2"==animationName||"attack3"==animationName)this.spineEventListenerAttack(trackIndex,evt);else if("skill"==animationName||"skill_enemy"==animationName||"skill1"==animationName||"skill2"==animationName||"skill3"==animationName)this.spineEventListenerSkill(trackIndex,evt);else if("back"==animationName){if("move_start"==event_name){var duration=evt.floatValue;if(this.m_cur_state==BattleGeneral_GeneralState.Return)this.backCourt(duration);else if(this.m_cur_state==BattleGeneral_GeneralState.Idle_Revision)0==this.m_revision_pos.x&&0==this.m_revision_pos.y?(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Attack_Idle),cc.log("Attack_Idle Check 12")):this.positionRevision(duration,this.m_revision_pos);else if(this.m_cur_state==BattleGeneral_GeneralState.Dash){var target=this.m_target_enemys[0];this.jumpDash(target,duration),target=null}else if(this.m_cur_state==BattleGeneral_GeneralState.Away){var winSize=cc.director.getWinSize(),pos=this.getPosition();pos.x=winSize.width+300,this.awayJump(pos,duration)}}this.addDebugGeneral(cmString("spineEventListener [%s]",event_name))}"loop_show"==event_name?this.get_Is_Action_Loop()&&this.actionLoop():"loop_hide"==event_name&&this.get_Is_Action_Loop_off()&&this.actionLoopOff(),entry=animationName=null},spineEventListenerAttack:function(trackIndex,evt){var entry=this.spAnimationState_getCurrent(this.m_sk.getState(),trackIndex),animationName=entry&&entry.animation?entry.animation.name:0;this.last_use_effect="";var event_name=evt.data.name.toLowerCase();if(this.m_cur_state==BattleGeneral_GeneralState.Attack&&this.IsAlive()){BattleGeneral_TeamType.Right;if("impact"==event_name)this.impactAll(evt.intValue,evt.floatValue,Hit_Attack_Type.ATTACK_1);else if("impact_end"==event_name);else if("attack_end"==event_name){if(0!=this.m_target_enemys.length)for(var i=0;i<this.m_target_enemys.length;i++)this.m_target_enemys[i].endHit(this);this.setGeneralState(BattleGeneral_GeneralState.Idle)}else if("fx_attack_shoot"==event_name||"fx_attack2_shoot"==event_name||"fx_attack3_shoot"==event_name){var action=new database.BattleActionImpl;"attack1"==animationName?action=this.m_battle_general.attack_action:"attack2"==animationName?action=this.m_battle_general.attack2_action:"attack3"==animationName&&(action=this.m_battle_general.attack3_action),this.IsAlive()&&(1!=action.target_count&&1==action.damages.length?this.startFxPartEnemyAttackAll(event_name):1!=action.target_count?323!=this.m_battle_general.general.gnrl_group&&389!=this.m_battle_general.general.gnrl_group&&341!=this.m_battle_general.general.gnrl_group&&518!=this.m_battle_general.general.gnrl_group||this.startFxPartEnemyAttackAll(event_name):this.startFxPart_v2(event_name,evt.intValue)),action=null}else this.IsAlive()&&this.startFxPart_v2(event_name,evt.intValue);this.IsAlive()&&(this.m_focus_state==FOCUS_STATE.UNFOCUS?this.unfocusBegin(!0):(this.m_focus_state,FOCUS_STATE.FOCUS)),this.addDebugGeneral(cmString("spineEventListenerAttack [%s]",event_name)),entry=animationName=null}},spineEventListenerSkill:function(trackIndex,evt){var entry=this.spAnimationState_getCurrent(this.m_sk.getState(),trackIndex);entry&&entry.animation&&entry.animation.name;this.last_use_effect="";var event_name=evt.data.name.toLowerCase();if("fx_skill_cast"==event_name&&1==this.m_battle_general.general.gnrl_type&&(event_name=""+event_name+this.m_current_skill_charge_count),this.m_cur_state==BattleGeneral_GeneralState.Skill){if(this.IsAlive()){if("impact"==event_name)this.impactAll(evt.intValue,evt.floatValue,Hit_Attack_Type.SKILL);else if("bloodsucking"==event_name)this.impactAll(3,0,Hit_Attack_Type.BLOOD_SUCKING);else if("voice"==event_name);else if("sound"==event_name){if(null!=evt.stringValue)try{if("0"!=evt.stringValue&&""!=evt.stringValue){cc.log("sound[10]"+evt.stringValue);var snd=RES_CDN_SOUND+SND_TYPE+"sound/"+evt.stringValue;AudioEngine.getInstance().playEffect(snd),this.m_skill_sounds.push(snd)}}catch(e){cc.log("ERROR! "+e+evt.stringValue)}}else if("bg_change_begin"==event_name){if(this.m_team_type==BattleGeneral_TeamType.Left)if(null!=this._cbEventListenerFieldMng)(e=new battle.Event).stringValue=evt.stringValue,476==this.m_battle_general.general.gnrl_group&&this.m_team_type==BattleGeneral_TeamType.Left&&(e.intValue=1),this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_CHANGE_BG_BEGIN,e),e=null}else if("bg_change_end"==event_name){if(this.m_team_type==BattleGeneral_TeamType.Left&&null!=this._cbEventListenerFieldMng){var e=new battle.Event;this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_CHANGE_BG_END,e),e=null}}else if("enemy_hide_begin"==event_name){if(this.m_team_type==BattleGeneral_TeamType.Left)if(null!=this._cbEventListenerFieldMng)(e=new battle.Event).intValue=this.m_team_type,this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_ENEMY_HIDE_BEGIN,e),e=null}else if("enemy_hide_end"==event_name){if(this.m_team_type==BattleGeneral_TeamType.Left)if(null!=this._cbEventListenerFieldMng)(e=new battle.Event).intValue=this.m_team_type,this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_ENEMY_HIDE_END,e),e=null}else if("skill_start"==event_name){if(this.m_team_type==BattleGeneral_TeamType.Left&&1==this.m_battle_general.general.gnrl_type){if(null!=this._cbEventListenerUIMng)(e=new battle.Event).dataValue1=this,e.intValue=this.m_current_skill_charge_count,this._cbEventListenerUIMng.EventListenerFromGeneral(EventCode.EVT_UI_MNG_SKILL_START,e),e=null;this.m_is_ex_reordering=!0}}else if("skill_end"==event_name){this.m_team_type==BattleGeneral_TeamType.Right?this.m_prev_state==BattleGeneral_GeneralState.RaidTimeover&&this.m_game_type==db.BattleGameType.Mission?this.setGeneralState(BattleGeneral_GeneralState.RaidTimeover):this.setGeneralState(BattleGeneral_GeneralState.Idle):AudioEngine.getInstance().stopAllEffectMusic(),this.m_battle_general.hit_count_wanko=0;for(var dur_idx=this.m_battle_general.stack_wanko=0;dur_idx<this.m_durability_effects.length;dur_idx++)this.m_durability_effects[dur_idx].trans_type==database.BattleEffectTrans.Hitted_Add_Stack_WanKo&&(this.m_durability_effects[dur_idx].delta_duration=this.m_durability_effects[dur_idx].duration);if(null!=this.m_battle_general.stack_angel&&this.m_battle_general.stack_angel<3){var is_angel=!1,dur_list=[];this.findTransPassiveSkillDurationEffectFind(database.BattleInvokeType.BattleInvokeType_Dummy30,dur_list);for(dur_idx=0;dur_idx<dur_list.length;dur_idx++)dur_list[dur_idx].trans_type==database.BattleEffectTrans.Use_Active_Skill_Angel_Stack_Up&&(1==this.m_battle_general.general.gnrl_class?this.m_battle_general.stack_angel=0:++this.m_battle_general.stack_angel,is_angel=!0);is_angel||(this.m_battle_general.stack_angel=0)}}else if("impact_end"==event_name)this.m_target_enemys.length=0,this.m_skill_target_enemys.length=0;else if("shake"==event_name){if(null!=this._cbEventListenerFieldMng)(e=new battle.Event).floatValue=evt.floatValue,e.intValue=evt.intValue,this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_SHAKE,e),e=null}else if("spark"==event_name){if(null!=this._cbEventListenerFieldMng)(e=new battle.Event).floatValue=evt.floatValue,this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_EMERGENCY,e),e=null}else if("bgcolor_change"==event_name){if(null!=this._cbEventListenerFieldMng){var dur;e=new battle.Event;if(3==GameDefault.getInstance().getUserBattleGameSpeed())(dur=evt.floatValue-1.8)<0&&(dur=0),e.floatValue=dur;else if(this.m_team_type==BattleGeneral_TeamType.Left)e.floatValue=evt.floatValue;else(dur=evt.floatValue-1.8)<0&&(dur=0),e.floatValue=dur;e.intValue=evt.intValue,e.stringValue=evt.stringValue,this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_CHANGE_BG_COLOR,e),e=null}}else if("fx_skill_cure"==event_name||"fx_skill_heal"==event_name)this.bufAll(event_name,!1);else if("fx_skill_defence"==event_name||"fx_skill_offence"==event_name||"fx_skill_buff"==event_name)this.bufAll(event_name,!1);else if("fx_skill_superarmor"==event_name)this.bufAll(event_name,!0);else if("fx_skill_missile"==event_name)0==evt.intValue?this.startFxMissilePart(event_name,!0):this.startFxMissilePart(event_name,!1);else if("fx_skill_run"==event_name)this.startFxMissilePart(event_name,!1);else if("fx_skill_shoot"==event_name){for(var found=0,found_is=!1,i=0;i<this.m_battle_general.active_skill.length;i++)if(1==this.m_battle_general.active_skill[i].is_prepared){found=i,found_is=!0;break}if(1==found_is){var skill=this.m_battle_general.active_skill[found],our_enemy=skill.skill_action.our_enemy;1!=skill.skill_action.target_count&&1==skill.skill_action.damages.length&&our_enemy==database.BattleSelfOther.Other?this.startFxPartEnemyAll(event_name):1<skill.skill_action.target_count||0==skill.skill_action.target_count?this.startFxPartEnemyAll(event_name):this.startFxPart_v2(event_name,evt.intValue),skill=null}}else this.startFxPart_v2(event_name,evt.intValue);this.IsAlive()&&(this.m_focus_state==FOCUS_STATE.UNFOCUS?this.unfocusBegin(!0):(this.m_focus_state,FOCUS_STATE.FOCUS)),this.addDebugGeneral(cmString("spineEventListenerSkill [%s]\n[t:%f] [ts:%.2f]",event_name,entry.trackTime,entry.timeScale)),entry=null}}else"impact_end"==event_name&&(this.m_target_enemys.length=0,this.m_skill_target_enemys.length=0)},spineCompleteListener:function(trackIndex,loopCount){var entry=this.spAnimationState_getCurrent(this.m_sk.getState(),trackIndex),animationName=entry&&entry.animation?entry.animation.name:0;if("attack1"==animationName||"attack2"==animationName||"attack3"==animationName){304==this.m_battle_general.general.gnrl_group&&cc.log(cmString("[spineStartListener : %s]  => [%.3f] ",this.m_battle_general.general.name,this.m_attack_delta_time)),this.m_cur_state!=BattleGeneral_GeneralState.Freeze&&this.m_cur_state!=BattleGeneral_GeneralState.Stun&&this.m_cur_state!=BattleGeneral_GeneralState.Sleep&&(this.checkPositionRevision(this.m_revision_pos)?(this.setGeneralState(BattleGeneral_GeneralState.Idle_Revision),this.playAction(ActionType.Back)):"attack3"==animationName&&this.findTransType(database.BattleEffectTrans.FeverMode,this.IsFriend())&&(479==this.m_battle_general.general.gnrl_group||504==this.m_battle_general.general.gnrl_group)?(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Idle2)):(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Attack_Idle)))}else if("skill"==animationName||"skill_enemy"==animationName||"skill1"==animationName||"skill2"==animationName||"skill3"==animationName){for(var i=0;i<this.m_battle_general.active_skill.length;i++)this.m_battle_general.active_skill[i].is_prepared&&(this.m_battle_general.active_skill[i].is_prepared=!1);this.findTransType(database.BattleEffectTrans.FeverMode,this.IsFriend())?479==this.m_battle_general.general.gnrl_group||504==this.m_battle_general.general.gnrl_group?this.checkPositionRevision(this.m_revision_pos)?(this.setGeneralState(BattleGeneral_GeneralState.Idle_Revision),this.playAction(ActionType.Back)):(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Idle2)):this.checkPositionRevision(this.m_revision_pos)?(this.setGeneralState(BattleGeneral_GeneralState.Idle_Revision),this.playAction(ActionType.Back)):(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Attack_Idle)):this.checkPositionRevision(this.m_revision_pos)?(this.setGeneralState(BattleGeneral_GeneralState.Idle_Revision),this.playAction(ActionType.Back)):(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Attack_Idle),cc.log("Attack_Idle Check 10"));var one_list=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Skill_Attck,one_list);for(var found=0,found_is=!1,i_one_list=0;i_one_list<one_list.length;i_one_list++)if(one_list[found=i_one_list].stat_trans==database.BattleEffectTrans.Use_Active_Skill_Glitter_Beach_Stack_Up){found_is=!0;break}if(1==found_is){var is_stack_enable=!1;1<this.m_battle_general.general.gnrl_class&&(this.m_battle_general.one_start_stack+=one_list[found].value,this.m_battle_general.one_start_stack>one_list[found].onetime_effect.limit_value&&(this.m_battle_general.one_start_stack=one_list[found].onetime_effect.limit_value),is_stack_enable=!0,482==this.m_battle_general.general.gnrl_group&&(this.findCommonEffectNodePlayAnim("fx_lens_flare",this.m_battle_general.one_start_stack),this.m_battle_general.one_start_stack>=one_list[found].onetime_effect.limit_value&&this.actionSunglass())),is_stack_enable||(this.m_battle_general.one_start_stack=0)}}else"back"==animationName&&(this.m_cur_state==BattleGeneral_GeneralState.Return?this.is_reserved_backcourt||(this.findTransType(database.BattleEffectTrans.FeverMode,this.IsFriend())&&504==this.m_battle_general.general.gnrl_group?(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Idle2)):(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Attack_Idle))):this.m_cur_state==BattleGeneral_GeneralState.Dash?(this.findTransType(database.BattleEffectTrans.FeverMode,this.IsFriend())&&504==this.m_battle_general.general.gnrl_group?(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Idle2)):(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Attack_Idle)),this.m_cur_pos=cc.p(0,0),this.dash_offset=cc.p(0,0),this.dash_target=null):this.m_cur_state==BattleGeneral_GeneralState.Idle_Revision?(this.findTransType(database.BattleEffectTrans.FeverMode,this.IsFriend())&&504==this.m_battle_general.general.gnrl_group?(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Idle2)):(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Attack_Idle)),this.m_cur_pos=cc.p(0,0)):(this.m_cur_state,BattleGeneral_GeneralState.Away));if("idle"!=animationName&&"idle2"!=animationName||(this.m_cur_state==BattleGeneral_GeneralState.Stun?this.playAction(ActionType.Stun):this.m_cur_state==BattleGeneral_GeneralState.Sleep?this.playAction(ActionType.Sleep):this.m_cur_state==BattleGeneral_GeneralState.Freeze||this.m_cur_state==BattleGeneral_GeneralState.Idle||this.m_cur_state==BattleGeneral_GeneralState.Find||this.m_cur_state==BattleGeneral_GeneralState.End||this.m_cur_state==BattleGeneral_GeneralState.Wait||this.m_cur_state==BattleGeneral_GeneralState.Attack_Ready||this.m_cur_state==BattleGeneral_GeneralState.Skill_Ready||this.m_cur_state==BattleGeneral_GeneralState.Idle2||(this.findTransType(database.BattleEffectTrans.FeverMode,this.IsFriend())&&(479==this.m_battle_general.general.gnrl_group||504==this.m_battle_general.general.gnrl_group)?(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Idle2)):(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Attack_Idle)))),this.m_focus_state==FOCUS_STATE.UNFOCUS&&this.IsAlive()&&this.unfocusBegin(),this.is_reserved_backcourt&&"loop_off"!=animationName&&"loop"!=animationName){var schedule_name=cmString("reservedBackCourt_%d_%d_%d",this.m_team_type,this.m_battle_general.general.gnrl_id,this.m_battle_general.position);this.scheduleOnce(function(){this.reservedBackCourt()}.bind(this),.1,schedule_name)}this.addDebugGeneral(cmString("spineCompleteListener [%s]",animationName)),entry=animationName=null},getOrderingOffsetY:function(){return this.m_ordering_offset},setOrderingOffsetY:function(offset_y){this.m_ordering_offset=offset_y},spineStartListener:function(trackIndex){var entry=this.spAnimationState_getCurrent(this.m_sk.getState(),trackIndex);entry.timeScale=this.m_cur_time_scale;var animationName=entry&&entry.animation?entry.animation.name:0;if(this.last_use_effect="","attack1"==animationName||"attack2"==animationName||"attack3"==animationName){304==this.m_battle_general.general.gnrl_group&&cc.log(cmString("[spineStartListener : %s]  => [%.3f] ",this.m_battle_general.general.name,this.m_attack_delta_time))}if("attack1"==animationName)this.cbSoundPlayAttack_1();else if("attack2"==animationName)this.cbSoundPlayAttack_2();else if("attack3"==animationName)this.cbSoundPlayAttack_3();else if("skill"==animationName||"skill1"==animationName||"skill2"==animationName||"skill3"==animationName){this.m_team_type==BattleGeneral_TeamType.Left&&(BattleMissionTaskManager._getInstance().addActiveSkillUseCount(),this.m_game_type==db.BattleGameType.Mission?BattleMissionTaskManager._getInstance().addActiveSkillUseCount():this.m_game_type==db.BattleGameType.WeeklyDungeon?BattleWeeklyDungeonTaskManager.getInstance().addActiveSkillUseCount():this.m_game_type==db.BattleGameType.EventDungeon||this.m_game_type==db.BattleGameType.TowerDungeon&&BattleTowerTaskManager._getInstance().addActiveSkillUseCount());for(var enemy_team=this.getMyTeam().getTargetTeam(),enemy_team_arr=enemy_team.getTeamMembers(),enemy_general_idx=0;enemy_general_idx<enemy_team_arr.length;enemy_general_idx++){var enemy_general=enemy_team_arr[enemy_general_idx];if(enemy_general.IsAlive())for(var passive_idx=0;passive_idx<enemy_general.getGeneral().trans_passive_skill.length;passive_idx++){var passive=enemy_general.getGeneral().trans_passive_skill[passive_idx];if(passive.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Enemy_Use_Skill&&111002!=this.m_battle_general.gnrl_id)for(var dur_idx=0;dur_idx<passive.durability_effects.length;dur_idx++){var dur=passive.durability_effects[dur_idx];if(dur.trans_type==database.BattleEffectTrans.Stun||dur.trans_type==database.BattleEffectTrans.Silence||dur.trans_type==database.BattleEffectTrans.Poison||dur.trans_type==database.BattleEffectTrans.After_Recv_Damage_Inc_Rate||dur.trans_type==database.BattleEffectTrans.Damage_Reduce||dur.trans_type==database.BattleEffectTrans.New_Poison_Dmg_Rate||dur.trans_type==database.BattleEffectTrans.Wound_Obstruct_Heal||dur.trans_type==database.BattleEffectTrans.Blind_Darkness||dur.trans_type==database.BattleEffectTrans.Freeze||dur.trans_type==database.BattleEffectTrans.Not_Resist_Stun||dur.trans_type==database.BattleEffectTrans.Not_Resist_Silence||dur.trans_type==database.BattleEffectTrans.Not_Resist_Poison||dur.trans_type==database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate||dur.trans_type==database.BattleEffectTrans.Not_Resist_Damage_Reduce||dur.trans_type==database.BattleEffectTrans.Not_Resist_Wound||dur.trans_type==database.BattleEffectTrans.Not_Resist_Blind||dur.trans_type==database.BattleEffectTrans.Not_Resist_Freeze){if(this.checkTransInvinsiblity(dur.trans_type))continue;if(this.findTransType(database.BattleEffectTrans.Golden_Invincibility))continue}var rand=parseInt(100*Math.random());if(TEST_SKILL_TRANS_PERCENT&&(rand=0),rand<dur.percent){var targets=[];dur.our_enemy==database.BattleSelfOther.Other?targets=enemy_general._findEnemyTarget.findEnemyTarget(enemy_general,passive.action.target_count,passive.action.priority_position):dur.our_enemy==database.BattleSelfOther.Self&&(targets=enemy_team.findOurTarget(enemy_general,passive.action.target_count,passive.action.priority_position));for(var target_idx=0;target_idx<targets.length;target_idx++)targets[target_idx].addDurabilityEffect(dur,enemy_general);343==enemy_general.getGeneral().general.gnrl_group?enemy_general.addCommonEffectNode("Yubi_China_fx_buff_ron"):496==enemy_general.getGeneral().general.gnrl_group&&enemy_general.addCommonEffectNode("Shirayuri_fx_paralyzed")}}else if(passive.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Enemy_Use_Skill&&111002!=this.m_battle_general.gnrl_id)for(var one_idx=0;one_idx<passive.onetime_effects.length;one_idx++){var one=passive.onetime_effects[one_idx];targets=[];one.our_enemy==database.BattleSelfOther.Other?targets=enemy_general._findEnemyTarget.findEnemyTarget(enemy_general,passive.action.target_count,passive.action.priority_position):one.our_enemy==database.BattleSelfOther.Self&&(targets=enemy_team.findOurTarget(enemy_general,passive.action.target_count,passive.action.priority_position));for(target_idx=0;target_idx<targets.length;target_idx++)targets[target_idx].addOnetimeEffect(one,one.stat_trans)&&344==enemy_general.getGeneral().general.gnrl_group&&enemy_general.addCommonEffectNode("Jojo_China_fx_pong")}}}}else if("stun"==animationName);else if("sleep"==animationName);else if("defence"==animationName);else if("idle"==animationName);else if("dash"==animationName){if(this.m_cur_state==BattleGeneral_GeneralState.Dash&&0!=this.m_target_enemys.length){var target=this.m_target_enemys[0];this.getArmServiceType()!=db.GeneralArmServiceType.ArmServiceType_Ranger&&(target.getArmServiceType(),db.GeneralArmServiceType.ArmServiceType_Ranger,this.dash(target,1500)),target=null}}else"back"==animationName&&(this.m_cur_state,BattleGeneral_GeneralState.Return);this.addDebugGeneral(cmString("spineStartListener [%s]\n[t:%f] [ts:%.2f] ",animationName,entry.trackTime,entry.timeScale)),entry=animationName=null},spineEndListener:function(trackIndex){var entry=trackIndex,animationName=entry&&entry.animation?entry.animation.name:0;if("skill"==animationName||"skill_enemy"==animationName||"skill1"==animationName||"skill2"==animationName||"skill3"==animationName){if(this.m_team_type==BattleGeneral_TeamType.Left){if(this.m_cur_state==BattleGeneral_GeneralState.Skill&&this.setGeneralState(BattleGeneral_GeneralState.Idle),1==this.m_battle_general.general.gnrl_type){if(null!=this._cbEventListenerUIMng){var evt=new battle.Event;(evt.dataValue1=this)._cbEventListenerUIMng.EventListenerFromGeneral(EventCode.EVT_UI_MNG_SKILL_END,evt),this.addDebugGeneral(cmString("spineEndListener Skill Complete : [%s], General : [%s]",animationName,this.m_battle_general.general.name)),evt=null}this.m_is_ex_reordering=!1,this.m_focus_state=FOCUS_STATE.NONE}for(var t_x=0;t_x<this.m_battle_general.trans_passive_skill.length;t_x++)if(this.m_battle_general.trans_passive_skill[t_x].trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Skill_Attck)for(var d_x=0;d_x<this.m_battle_general.trans_passive_skill[t_x].durability_effects.length;d_x++){this.m_battle_general.trans_passive_skill[t_x].durability_effects[d_x].gnrl_id=this.m_battle_general.general.gnrl_id;var stack_cnt=0,limit_cnt=this.m_battle_general.trans_passive_skill[t_x].durability_effects[d_x].durability.dura_end_effect,action=MasterManager.getInstance().get_ActionImplementation(this.m_battle_general.trans_passive_skill[t_x].trans_passive.action_id);if(0!=this.m_battle_general.trans_passive_skill[t_x].durability_effects[d_x].durability.dura_end_effect)for(var stack_effect=this.m_battle_general.trans_passive_skill[t_x].durability_effects[d_x].trans_type,dur_x=0;dur_x<this.m_durability_effects.length;dur_x++)this.m_durability_effects[dur_x].trans_type==stack_effect&&++stack_cnt;if(0==action.action_id)0!=this.m_battle_general.trans_passive_skill[t_x].durability_effects[d_x].durability.dura_end_effect&&stack_cnt<limit_cnt?this.addDurabilityEffect(this.m_battle_general.trans_passive_skill[t_x].durability_effects[d_x],this):0==this.m_battle_general.trans_passive_skill[t_x].durability_effects[d_x].durability.dura_end_effect&&this.addDurabilityEffect(this.m_battle_general.trans_passive_skill[t_x].durability_effects[d_x],this);else{var target_list=[];this.m_battle_general.trans_passive_skill[t_x].durability_effects[d_x].our_enemy==database.BattleSelfOther.Other?null!=this._findEnemyTarget&&(target_list=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position)):this.m_battle_general.trans_passive_skill[t_x].durability_effects[d_x].our_enemy==database.BattleSelfOther.Self&&(target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position));for(var t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addDurabilityEffect(this.m_battle_general.trans_passive_skill[t_x].durability_effects[d_x],this)}}this.m_my_team.FindTeamUseActiveSkillAddDurabilityEffect(),this.m_my_team.Find_Team_Use_Active_Skill_Team_Onetime_Effect()}this.m_current_skill_charge_count=0}this.is_reserved_backcourt&&"loop_off"!=animationName&&"loop"!=animationName?this.scheduleOnce(function(){this.reservedBackCourt()},.1,"reservedBackCourt"):"damage"==animationName&&(this.IsAlive()?this.m_focus_state==FOCUS_STATE.UNFOCUS&&(this.unfocusBegin(!1),this.momentShowInfoBar(2)):(this.addDebugGeneral("spineEndListener - damage - death"),this.generalResume())),this.m_skill_sounds=[],this.addDebugGeneral(cmString("spineEndListener [%s]",animationName)),entry=animationName=null},throwingFxEndListener:function(node){for(var remove_is=-1,i=0;i<this.m_fx_used.length;i++){var n=this.m_fx_used[i];if(node==n){remove_is=i;break}n=null}if(0<=remove_is){this.m_fx_used[remove_is].setVisible(!1),this.m_fx_used.splice(remove_is,1);var fx_id=node.getFxID(),pos=fx_id.indexOf("_shoot"),pos2=fx_id.indexOf("_missile");if(0<=pos||0<=pos2){var prefix=fx_id.substr(0,pos),target=node.getTargetGeneral();if(null!=target)if(target.IsAlive()){var new_fx_id=prefix+"_hit";this.lastFxHitPart(new_fx_id,node);var is_skill=this.IsSkillFxId(new_fx_id);this.impact(target,0,is_skill)}else{new_fx_id=prefix+"_hit",is_skill=this.IsSkillFxId(new_fx_id);this.impact(target,0,is_skill)}prefix=target=null}try{node.m_skeleton.clearTracks(0)}catch(e){cc.log("fx.clearTracks error : ",e)}node.removeFromParent(!0),node.setVisible(!1),fx_id=node=null}},fxStartListener:function(trackIndex,node){this.spAnimationState_getCurrent(node.getState(),trackIndex).timeScale=this.m_cur_time_scale},fxCompleteListener:function(node){if(null!=node&&node.IsReservedRemove()){var found=this.m_fx_used.indexOf(node);if(-1!=found){this.m_fx_used.splice(found,1);try{node.m_skeleton.clearTracks(0)}catch(e){cc.log("fx.clearTracks error : ",e)}null!=node.getParent()&&(node.removeFromParent(),node.setVisible(!1),node=null)}}},fxEndListener:function(node){var remove=this.m_fx_used.indexOf(node);if(-1!=remove){var fx_id=node.getFxID(),pos=fx_id.search("_shoot"),pos2=fx_id.search("_missile");-1==pos&&-1==pos2?(this.m_fx_used.splice(remove,1),node.removeFromParent(),node.setVisible(!1),node=null):node.IsReservedRemove()&&(this.m_fx_used.splice(remove,1),node.removeFromParent(),node.setVisible(!1),node=null)}},fxEventListener:function(node,entry,evt){var event_name=evt.data.name.toLowerCase(),fx_id=node.getFxID();if("impact"==event_name){var target=node.getTargetGeneral();if(null!=target){for(var is_skill=!1,i=0;i<this.m_battle_general.active_skill.length;i++)if(this.m_battle_general.active_skill[i].is_prepared){this.m_battle_general.active_skill[i].skill_action.our_enemy==database.BattleSelfOther.Self?this.bufOne(target):(this.m_battle_general.active_skill[i].durability_effects.length,this.impact(target,evt.floatValue,this.IsSkillFxId(fx_id))),is_skill=!0;break}is_skill||this.impact(target,evt.floatValue,this.IsSkillFxId(fx_id))}else{var skill=node.getSkillInfo();try{if(0<skill.skill.active_skill_id)if(skill.skill_action.our_enemy==database.BattleSelfOther.Self)for(i=0;i<this.m_target_ours.length;i++){(t=this.m_target_ours[i]).IsAlive()&&this.bufOne(t),t=null}else for(i=0;i<this.m_skill_target_enemys.length;i++){var t;"object"==typeof(t=this.m_skill_target_enemys[i])&&(this.impact(t,evt.floatValue,this.IsSkillFxId(fx_id)),t=null)}}catch(e){}}target=null}else if("fx_skill_cure"==event_name||"fx_skill_heal"==event_name)this.IsAlive()&&this.bufAll(event_name,!1);else if("shake"==event_name){if(null!=this._cbEventListenerFieldMng)(e=new battle.Event).floatValue=evt.floatValue,e.intValue=evt.intValue,this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_SHAKE,e),e=null}else if("spark"==event_name){var e;if(null!=this._cbEventListenerFieldMng)(e=new battle.Event).floatValue=evt.floatValue,this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_EMERGENCY,e),e=null}else if("fx_skill_weaponbreak"==event_name)this.weaponBreak(event_name);else{var _tt=BattleGeneral_TeamType.Right;28==this.m_battle_general.general.gnrl_group&&this.m_team_type==_tt&&cc.log(cmString("[%s]",this.m_battle_general.general.name)),this.IsAlive()&&this.lastFxHitPart(event_name,node)}},setGeneralState:function(_state){this.m_cur_state!=_state&&(this.m_prev_state=this.m_cur_state,this.m_cur_state=_state,this.addDebugGeneral("setGeneralState"))},calcCriticalProbability:function(target){this.addDebugGeneral("calcCriticalProbability");var isCritical=!1,rand=parseInt(1e4*Math.random()+1),cri_value=this.m_my_team.getLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Critical_Value,this.m_battle_general);if(cri_value+=this.m_my_team.getSpecialLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Critical_Value,this.m_battle_general),cri_value+=this.durabilityBufDebufPoint(database.BattleChainStatType.ChainStatType_Critical_Value),cri_value+=this.m_my_team.getBattleFormationBufPoint(this.m_battle_general.position,database.BattleChainStatType.ChainStatType_Critical_Value,this.m_battle_general),cri_value+=this.m_my_team.getPassiveSkillBufPoint(database.BattleChainStatType.ChainStatType_Critical_Value,this.m_battle_general),cri_value+=this.m_my_team.getTargetTeamPassiveSkillDebufPoint(database.BattleChainStatType.ChainStatType_Critical_Value),cri_value+=this.m_my_team.getFriendLeaderSkillBuf(database.BattleChainStatType.ChainStatType_Critical_Value,this.m_battle_general),cri_value+=this.getEventDungeonGnrlBuf(database.BattleChainStatType.ChainStatType_Critical_Value),cri_value+=this.getEquipmentBuff(database.BattleChainStatType.ChainStatType_Critical_Value),cri_value+=this.getEquipmentSetGroupBuff(database.BattleChainStatType.ChainStatType_Critical_Value),cri_value+=this.TransPassiveOneTimeEffectBufPoint(database.BattleChainStatType.ChainStatType_Critical_Value,database.BattleInvokeType.BattleInvokeType_Always),cri_value+=this.TransPassiveOneTimeEffectBufPoint(database.BattleChainStatType.ChainStatType_Critical_Value,database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate),cri_value+=this.TransPassiveOneTimeEffectBufPoint(database.BattleChainStatType.ChainStatType_Critical_Value,database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate),4==this.m_battle_general.general.gnrl_class){var rebirth_stat=MasterManager.getInstance().get_GeneralRebirthStatInfo(this.m_battle_general.general.gnrl_group);cri_value+=rebirth_stat.cri_prcnt,rebirth_stat=null}var one_list=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Always,one_list);for(var one_list_idx2=0;one_list_idx2<one_list.length;one_list_idx2++){var one=$.extend({},one_list[one_list_idx2]);if(one.stat_trans==database.BattleEffectTrans.Life_Then_Cri_Rate_Inc){var dec_life=(100-this.m_life_point/this.getMaxHealthPoint()*100)/one.value,inc_cri_rate=dec_life*one.sub_value;inc_cri_rate>one.onetime_effect.limit_value&&(inc_cri_rate=one.onetime_effect.limit_value),cri_value+=inc_cri_rate}}var per=this.m_life_point/this.getMaxHealthPoint(),invoke_type=database.BattleInvokeType.BattleInvokeType_None;if(per<=.1?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_10_Per_Rate:per<=.15?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_15_Per_Rate:per<=.2?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate:per<=.25?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_25_Per_Rate:per<=.3?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate:per<=.4?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate:per<=.5?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate:per<=.75&&(invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate),invoke_type!=database.BattleInvokeType.BattleInvokeType_None)for(;invoke_type!=database.BattleInvokeType.BattleInvokeType_None;)switch(cri_value+=this.durabilityBufDebufPoint(database.BattleChainStatType.ChainStatType_Critical_Value,invoke_type),invoke_type){case database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_None;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_25_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_25_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_15_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_10_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_15_Per_Rate;break;default:invoke_type=database.BattleInvokeType.BattleInvokeType_None}var base=this.m_battle_general.general.cri_percent;return 0<this.m_battle_general.limit_step_id&&(base*=this.m_general_limit_ability.cri_prcnt),rand<=base+cri_value-target.getGeneral().cri_resist&&(isCritical=!0),isCritical},calcGeneralStat:function(){this.addDebugGeneral("calcGeneralStat");var gt=BattleContext._getInstance().getGameType(),sp=this.calcGeneralAttackSpeed(),speed=BATTLE_ATTACK_SPEED_CONST/sp;this.m_battle_general.general.gnrl_group;if(gt==db.BattleGameType.Mission||gt==db.BattleGameType.WeeklyDungeon||gt==db.BattleGameType.Mussang||gt==db.BattleGameType.Marathon||gt==db.BattleGameType.EventDungeon||gt==db.BattleGameType.DailyDungeon||gt==db.BattleGameType.TowerDungeon||gt==db.BattleGameType.OnceADayDungeon){var hp=this.calcGeneralLifePoint(),attk=this.calcGeneralAttkPoint(),def=this.calcGeneralDefPoint();this.m_team_type==BattleGeneral_TeamType.Left?(this.m_battle_general.hp=1*hp,this.m_battle_general.attk=1*attk,this.m_battle_general.def=1*def*1):(this.m_battle_general.hp=1*hp,this.m_battle_general.attk=1*attk,this.m_battle_general.def=1*def),this.m_life_point=this.getMaxHealthPoint(),this.m_battle_general.sp=speed}else if(gt==db.BattleGameType.GreatWallDungeon||gt==db.BattleGameType.WorldWarNpcDungeon){hp=this.calcGeneralLifePoint();this.m_battle_general.hp=(this.m_team_type,BattleGeneral_TeamType.Left,1*hp),this.m_life_point=this.getMaxHealthPoint()*this.m_battle_general.remain_hp_rate/1e4,this.m_battle_general.is_dead?(this.m_life_point=0,this.m_battle_general.is_dead=!0):0==this.m_battle_general.remain_hp_rate&&(this.m_life_point=1,this.m_battle_general.remain_hp_rate=1,this.m_battle_general.is_dead=!1);attk=this.calcGeneralAttkPoint();this.m_battle_general.attk=(this.m_team_type,BattleGeneral_TeamType.Left,1*attk);def=this.calcGeneralDefPoint();this.m_battle_general.def=this.m_team_type==BattleGeneral_TeamType.Left?1*def*1:1*def,this.m_battle_general.sp=speed}else if(gt==db.BattleGameType.RaidDungeon){hp=this.calcGeneralLifePoint();this.m_team_type==BattleGeneral_TeamType.Left?(this.m_battle_general.hp=1*hp,this.m_life_point=this.getMaxHealthPoint()):(this.m_battle_general.hp=1*hp,this.m_life_point=BattleContext._getInstance().getRaidDungeonData().data.remain_hp);attk=this.calcGeneralAttkPoint();this.m_battle_general.attk=(this.m_team_type,BattleGeneral_TeamType.Left,1*attk);def=this.calcGeneralDefPoint();this.m_battle_general.def=this.m_team_type==BattleGeneral_TeamType.Left?1*def*1:1*def,this.m_battle_general.sp=speed}else if(gt==db.BattleGameType.EventMussangBossDungeon){hp=this.calcGeneralLifePoint();if(this.m_team_type==BattleGeneral_TeamType.Left)this.m_battle_general.hp=1*hp,this.m_life_point=this.getMaxHealthPoint();else{this.m_battle_general.hp=1*hp;var boss_data=BattleContext._getInstance().getEventMussangBossData();this.m_life_point=boss_data.remain_hp}attk=this.calcGeneralAttkPoint();this.m_battle_general.attk=(this.m_team_type,BattleGeneral_TeamType.Left,1*attk);def=this.calcGeneralDefPoint();this.m_battle_general.def=this.m_team_type==BattleGeneral_TeamType.Left?1*def*1:1*def,this.m_battle_general.sp=speed}else if(gt==db.BattleGameType.EventRaidDungeon){var multiple_type=(new NetService).get_Event_Raid_Dungeon_Multiple_Type();multiple_type<1&&(multiple_type=1);hp=this.calcGeneralLifePoint();this.m_battle_general.hp=this.m_team_type==BattleGeneral_TeamType.Left?1*hp:1*hp*multiple_type,this.m_life_point=this.getMaxHealthPoint();attk=this.calcGeneralAttkPoint();this.m_battle_general.attk=this.m_team_type==BattleGeneral_TeamType.Left?1*attk*multiple_type:1*attk;def=this.calcGeneralDefPoint();this.m_battle_general.def=this.m_team_type==BattleGeneral_TeamType.Left?1*def*1:1*def,this.m_battle_general.sp=speed}else{hp=this.calcGeneralLifePoint(),attk=this.calcGeneralAttkPoint(),def=this.calcGeneralDefPoint();this.m_team_type==BattleGeneral_TeamType.Left?(this.m_battle_general.hp=1*hp,this.m_life_point=1*this.getMaxHealthPoint(),this.m_battle_general.attk=1*attk*1):(this.m_battle_general.hp=hp,this.m_life_point=1*this.getMaxHealthPoint(),this.m_battle_general.attk=1*attk),this.m_battle_general.def=1*def,this.m_battle_general.sp=speed}},calcGeneralAttackSpeed:function(){return this.m_team_type==BattleGeneral_TeamType.Left?BattleContext._getInstance().calcBattleGeneralAttackSpeedPoint(this.m_battle_general):this.m_battle_general.general.sp},calcGeneralLifePoint:function(){if(this.m_team_type!=BattleGeneral_TeamType.Left)return this.m_battle_general.general.hp;var origin_point=BattleContext._getInstance().calcBattleGeneralHPPoint(this.m_battle_general),point=origin_point;if(1<this.m_battle_general.love_level){var idx=BattleService.getInstance().getMasterLoveStat(this.m_battle_general.general.love_stat_group,this.m_battle_general.love_level);if(0<idx){var stat=MasterManager.getInstance().get_LoveStat(idx);0<stat.stat_type_1&&(stat.stat_type_1==LOVE_ITEM_STAT_TYPE_5?point+=origin_point*stat.value_1/100:stat.stat_type_1==LOVE_ITEM_STAT_TYPE_6&&(point+=stat.value_1)),0<stat.stat_type_2&&(stat.stat_type_2==LOVE_ITEM_STAT_TYPE_5?point+=origin_point*stat.value_2/100:stat.stat_type_2==LOVE_ITEM_STAT_TYPE_6&&(point+=stat.value_2)),0<stat.stat_type_3&&(stat.stat_type_3==LOVE_ITEM_STAT_TYPE_5?point+=origin_point*stat.value_3/100:stat.stat_type_3==LOVE_ITEM_STAT_TYPE_6&&(point+=stat.value_3))}}if(this.m_battle_general.general.arm_service_type<db.GeneralArmServiceType.ArmServiceType_Captain){var abil=CampService.getInstance().getUserCampBranchAbility(this.m_battle_general.general.arm_service_type);1==CAMP_LOVE_STAT_TYPE?point+=origin_point*(abil.health/1e4):point+=abil.health}if(point+=this.getEquipmentBuff(database.BattleChainStatType.ChainStatType_Hp_Value),point+=origin_point*this.getEquipmentOptionStatBuff(database.BattleChainStatType.ChainStatType_Hp_Rate)/1e4,point+=this.getEquipmentSetGroupBuff(database.BattleChainStatType.ChainStatType_Hp_Value),point+=origin_point*this.getEquipmentSetGroupBuff(database.BattleChainStatType.ChainStatType_Hp_Rate)/1e4,point+=point*this.getEventDungeonGnrlBuf(database.BattleChainStatType.ChainStatType_Hp_Rate)/1e4,!this.m_is_friend_general&&UserService.getInstance().isBeginnerBooster()&&BattleContext._getInstance().getGameType()==db.BattleGameType.EventDungeon){var mt_booster={};!(0<(mt_booster=UserService.getInstance().getMtBeginnerBooster(BEGINNER_BOOSTER_TYPE_BATTLE_BOOSTER,0,0,mt_booster)).value)||mt_booster.battle_type!=BATTLE_DUNGEON_TYPE_EVENT_DUNGEON&&mt_booster.battle_type!=BATTLE_DUNGEON_TYPE_ALL||mt_booster.battle_booster_type!=BATTLE_BOOSTER_HEALTH&&mt_booster.battle_booster_type!=BATTLE_BOOSTER_ALL||(point+=point*(mt_booster.value/1e4))}return this.m_game_type==db.BattleGameType.WorldWarNpcDungeon&&(point+=point*this.m_my_team.getWorldWarCastleSpecialFuncIncStat(this.m_battle_general.general,eCastleSpecialTalent.est_increase_stat,3)/1e4),point},calcGeneralDefPoint:function(){if(this.m_team_type!=BattleGeneral_TeamType.Left)return this.m_battle_general.general.def;var origin_point=BattleContext._getInstance().calcBattleGeneralDefencePoint(this.m_battle_general),point=origin_point;if(1<this.m_battle_general.love_level){var idx=BattleService.getInstance().getMasterLoveStat(this.m_battle_general.general.love_stat_group,this.m_battle_general.love_level);if(0<idx){var stat=MasterManager.getInstance().get_LoveStat(idx);0<stat.stat_type_1&&(stat.stat_type_1==LOVE_ITEM_STAT_TYPE_3?point+=origin_point*stat.value_1/100:stat.stat_type_1==LOVE_ITEM_STAT_TYPE_4&&(point+=stat.value_1)),0<stat.stat_type_2&&(stat.stat_type_2==LOVE_ITEM_STAT_TYPE_3?point+=origin_point*stat.value_2/100:stat.stat_type_2==LOVE_ITEM_STAT_TYPE_4&&(point+=stat.value_2)),0<stat.stat_type_3&&(stat.stat_type_3==LOVE_ITEM_STAT_TYPE_3?point+=origin_point*stat.value_3/100:stat.stat_type_3==LOVE_ITEM_STAT_TYPE_4&&(point+=stat.value_3))}}if(this.m_battle_general.general.arm_service_type<db.GeneralArmServiceType.ArmServiceType_Captain){var abil=CampService.getInstance().getUserCampBranchAbility(this.m_battle_general.general.arm_service_type);1==CAMP_LOVE_STAT_TYPE?point+=origin_point*(abil.defense/1e4):point+=abil.defense}if(point+=this.getEquipmentBuff(database.BattleChainStatType.ChainStatType_Def_Value),point+=origin_point*this.getEquipmentOptionStatBuff(database.BattleChainStatType.ChainStatType_Def_Rate)/1e4,point+=this.getEquipmentSetGroupBuff(database.BattleChainStatType.ChainStatType_Def_Value),point+=origin_point*this.getEquipmentSetGroupBuff(database.BattleChainStatType.ChainStatType_Def_Rate)/1e4,point+=point*this.getEventDungeonGnrlBuf(database.BattleChainStatType.ChainStatType_Def_Rate)/1e4,!this.m_is_friend_general&&UserService.getInstance().isBeginnerBooster()&&BattleContext._getInstance().getGameType()==db.BattleGameType.EventDungeon){var mt_booster={};!(0<(mt_booster=UserService.getInstance().getMtBeginnerBooster(BEGINNER_BOOSTER_TYPE_BATTLE_BOOSTER,0,0,mt_booster)).value)||mt_booster.battle_type!=BATTLE_DUNGEON_TYPE_EVENT_DUNGEON&&mt_booster.battle_type!=BATTLE_DUNGEON_TYPE_ALL||mt_booster.battle_booster_type!=BATTLE_BOOSTER_DEFENSE&&mt_booster.battle_booster_type!=BATTLE_BOOSTER_ALL||(point+=point*(mt_booster.value/1e4))}return this.m_game_type==db.BattleGameType.WorldWarNpcDungeon&&(point+=point*this.m_my_team.getWorldWarCastleSpecialFuncIncStat(this.m_battle_general.general,eCastleSpecialTalent.est_increase_stat,2)/1e4),point},calcGeneralAttkPoint:function(){if(this.m_team_type!=BattleGeneral_TeamType.Left)return this.m_battle_general.general.attk;var origin_point=BattleContext._getInstance().calcBattleGeneralAttackPoint(this.m_battle_general),point=origin_point;if(1<this.m_battle_general.love_level){var idx=BattleService.getInstance().getMasterLoveStat(this.m_battle_general.general.love_stat_group,this.m_battle_general.love_level);if(0<idx){var stat=MasterManager.getInstance().get_LoveStat(idx);0<stat.stat_type_1&&(stat.stat_type_1==LOVE_ITEM_STAT_TYPE_1?point+=origin_point*stat.value_1/100:stat.stat_type_1==LOVE_ITEM_STAT_TYPE_2&&(point+=stat.value_1)),0<stat.stat_type_2&&(stat.stat_type_2==LOVE_ITEM_STAT_TYPE_1?point+=origin_point*stat.value_2/100:stat.stat_type_2==LOVE_ITEM_STAT_TYPE_2&&(point+=stat.value_2)),0<stat.stat_type_3&&(stat.stat_type_3==LOVE_ITEM_STAT_TYPE_1?point+=origin_point*stat.value_3/100:stat.stat_type_3==LOVE_ITEM_STAT_TYPE_2&&(point+=stat.value_3))}}if(this.m_battle_general.general.arm_service_type<db.GeneralArmServiceType.ArmServiceType_Captain){var abil=CampService.getInstance().getUserCampBranchAbility(this.m_battle_general.general.arm_service_type);1==CAMP_LOVE_STAT_TYPE?point+=origin_point*(abil.attack/1e4):point+=abil.attack}if(point+=this.getEquipmentBuff(database.BattleChainStatType.ChainStatType_Attack_Value),point+=origin_point*this.getEquipmentOptionStatBuff(database.BattleChainStatType.ChainStatType_Attack_Rate)/1e4,point+=this.getEquipmentSetGroupBuff(database.BattleChainStatType.ChainStatType_Attack_Value),point+=origin_point*this.getEquipmentSetGroupBuff(database.BattleChainStatType.ChainStatType_Attack_Rate)/1e4,point+=point*this.getEventDungeonGnrlBuf(database.BattleChainStatType.ChainStatType_Attack_Rate)/1e4,!this.m_is_friend_general&&UserService.getInstance().isBeginnerBooster()&&BattleContext._getInstance().getGameType()==db.BattleGameType.EventDungeon){var mt_booster={};!(0<(mt_booster=UserService.getInstance().getMtBeginnerBooster(BEGINNER_BOOSTER_TYPE_BATTLE_BOOSTER,0,0,mt_booster)).value)||mt_booster.battle_type!=BATTLE_DUNGEON_TYPE_EVENT_DUNGEON&&mt_booster.battle_type!=BATTLE_DUNGEON_TYPE_ALL||mt_booster.battle_booster_type!=BATTLE_BOOSTER_ATTACK&&mt_booster.battle_booster_type!=BATTLE_BOOSTER_ALL||(point+=point*(mt_booster.value/1e4))}return this.m_game_type==db.BattleGameType.WorldWarNpcDungeon&&(point+=point*this.m_my_team.getWorldWarCastleSpecialFuncIncStat(this.m_battle_general.general,eCastleSpecialTalent.est_increase_stat,1)/1e4),point},rebornGeneral:function(){this.playAction(ActionType.Basic),this.appearEffect(),this.momentShowInfoBar(2)},appearGeneral:function(){this.m_game_type==db.BattleGameType.GreatWallDungeon||this.m_game_type==db.BattleGameType.WorldWarNpcDungeon?this.m_battle_general.is_dead?(this.setGeneralState(BattleGeneral_GeneralState.End),this.setOpacity(0)):(this.playAction(ActionType.Basic),this.appearEffect(),this.selfLifeDown(0)):(this.playAction(ActionType.Basic),this.appearEffect(),this.momentShowInfoBar(2))},backCourt:function(duration){this.addDebugGeneral("backCourt"),this.unfocusEnd(),this.m_attack_position_index=0,this.m_is_first_attack=!1;var move=cc.moveTo(duration/this.m_cur_time_scale,this.m_origin_pos),ease=move.clone().easing(cc.easeQuadraticActionOut());this.runAction(ease),ease=move=null},stepStayFinish:function(){return!!this.IsAlive()||(null!=this._skillEnable&&this._skillEnable.skillEnable(!1),this.setGeneralState(BattleGeneral_GeneralState.Death_Ready),this.playAction(ActionType.DeathAction),!1)},stepMussnagBossFinish:function(dt){return null!=this._skillEnable&&this._skillEnable.skillEnable(!1),this.setGeneralState(BattleGeneral_GeneralState.MussangBossTimeOver),!1},stepIdle:function(dt){if(!this.IsAlive())return null!=this._skillEnable&&this._skillEnable.skillEnable(!1),this.setGeneralState(BattleGeneral_GeneralState.Death_Ready),this.playAction(ActionType.DeathAction),!1;if(this.m_my_team.getBattleState()!=BattleState.GamePlaying)return this.addDebugGeneral("stepIdle Non GamePlaying"),!1;if(this.IsSandbag()||this.m_battle_general.is_cutin_npc)return!1;for(var found=[],found_is=!1,i=0;i<this.m_target_enemys.length;i++){var g=this.m_target_enemys[i];"object"==typeof g&&(g.IsAlive()||(found_is=!0,found.push(i)),g=null)}if(1==found_is)for(i=0;i<found.length;i++)this.m_target_enemys.splice(found[i],1);var is_prepared_skill=!1;if(this.m_is_auto_skill){if(this.m_normal_attack_count<=0&&!this.is_silence()&&!this.findTransType(database.BattleEffectTrans.Freeze)&&!this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)){var is_enable_skill=!0;if(this.m_team_type==BattleGeneral_TeamType.Left&&this.m_game_type==db.BattleGameType.GreatWallDungeon&&0==this.m_battle_general.remain_skill_count&&(is_enable_skill=!1),is_enable_skill){var skillIndex=0;for(i=0;i<this.m_battle_general.active_skill.length;i++){if(0==this.gen_ver||2==this.gen_ver){if(!this.m_battle_general.active_skill[i].is_teamcooltime&&this.m_battle_general.active_skill[i].skill_charge_count>INIT_SKILL_CHARGE_BUFF){is_prepared_skill=!0,this.m_battle_general.active_skill[i].is_prepared=!0;break}}else if(this.m_battle_general.active_skill[i].skill_charge_count>INIT_SKILL_CHARGE_BUFF&&this.isReadySkillbyAI(skillIndex)){is_prepared_skill=!0,this.m_battle_general.active_skill[i].is_prepared=!0;break}skillIndex++}}}}else if(!this.is_silence())for(i=0;i<this.m_battle_general.active_skill.length;i++)if(this.m_battle_general.active_skill[i].is_prepared){is_prepared_skill=!0;break}if(is_prepared_skill)return this.setGeneralState(BattleGeneral_GeneralState.Skill_Ready),this.delete_voice_use(voice_charge_skill_90_percent),!1;if(this.checkFreezeEnemy(!1),0==this.m_target_enemys.length){var state=BattleGeneral_GeneralState.None,action_type=ActionType.Basic;if(this.findEnemy(state,action_type,this.m_battle_general.attack_action.target_count,this.m_battle_general.attack_action.priority_position,!1)&&(state=this.m_retrun_state,action_type=this.m_return_type,this.setGeneralState(state),this.getArmServiceType()!=db.GeneralArmServiceType.ArmServiceType_Ranger)){var target_pos=this.m_target_enemys[0].getPosition(),pos=this.getPosition();return(action_type=this.m_team_type==BattleGeneral_TeamType.Left?target_pos.x<pos.x?ActionType.Back:ActionType.Dash:target_pos.x>pos.x?ActionType.Back:ActionType.Dash)!=ActionType.Back&&action_type!=ActionType.Dash&&(target_pos.y<pos.y-REVISION_POS_Y?action_type=ActionType.Dash:target_pos.y>pos.y+REVISION_POS_Y&&(action_type=ActionType.Dash)),this.playAction(action_type),!1}}return this.m_attack_delta_time-=dt,this.m_attack_delta_time<0&&(this.m_attack_delta_time=this.getAttackSpeed(),this.setGeneralState(BattleGeneral_GeneralState.Attack_Ready)),!0},getAttackType:function(){if(0==this.gen_ver||2==this.gen_ver){var attack_type=parseInt(2*Math.random());return 327==this.m_battle_general.general.gnrl_group&&1==this.m_battle_general.general.gnrl_class?attack_type=2:this.findTransType(database.BattleEffectTrans.FeverMode,this.IsFriend())&&(attack_type=2),attack_type}var info=this.getStateInfo(),i=3,s=parseInt(3*Math.random()),desc=!1;for(0==parseInt(3*Math.random())&&(desc=!0);0<i;){switch(s){case 0:if(0!=info.attack1)return 0;break;case 1:if(0!=info.attack2)return 1;break;case 2:if(0!=info.attack3)return 2}desc?3<=++s&&(s=0):--s<0&&(s=3),i--}return 1},stepAttackReady:function(dt){this.addDebugGeneral("stepAttackReady");var i=0,i2=0,i3=0,j=0,len=0,len2=0,len3=0,len4=0;if(!this.IsAlive())return this.setGeneralState(BattleGeneral_GeneralState.Idle),!1;if(this.findTransType(database.BattleEffectTrans.Motion_Singing,this.IsFriend()))return this.setGeneralState(BattleGeneral_GeneralState.Idle2),!1;var remove=[],remove_is=!1;for(i=0,len=this.m_target_enemys.length;i<len;i++){var obj=this.m_target_enemys[i];obj.IsAlive()||(remove_is=!0,remove.push(i)),obj=null}if(1==remove_is)for(i=0,len=remove.length;i<len;i++)this.m_target_enemys.splice(remove[i],1);var state=BattleGeneral_GeneralState.None,action_type=ActionType.Basic,damages=[],attack_type=this.getAttackType(),attack_target_count=0,to_state=BattleGeneral_GeneralState.None,to_action=ActionType.Basic,priority_position=0;if(0==attack_type){to_state=BattleGeneral_GeneralState.Attack,to_action=ActionType.Attack_1,damages=this.m_battle_general.attack_action.damages,attack_target_count=this.m_battle_general.attack_action.target_count,priority_position=this.m_battle_general.attack_action.priority_position;for(var idx=0;idx<this.m_durability_effects.length;idx++){(dur=$.extend({},this.m_durability_effects[idx])).trans_type==database.BattleEffectTrans.All_Attack_Change_Target_For_Boss?priority_position=7:dur.trans_type==database.BattleEffectTrans.Find_Target_To_Element_Fire?priority_position=26:dur.trans_type==database.BattleEffectTrans.Find_Target_To_Element_Water?priority_position=27:dur.trans_type==database.BattleEffectTrans.Find_Target_To_Element_Wind?priority_position=28:dur.trans_type==database.BattleEffectTrans.Find_Target_To_Element_Light?priority_position=29:dur.trans_type==database.BattleEffectTrans.Find_Target_To_Element_Dark&&(priority_position=30),dur=null}var one_list=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Normal_Attack,one_list);for(var change_attack_random_rate=parseInt(1e4*Math.random()),onetime_idx=0;onetime_idx<one_list.length;onetime_idx++){(onetime=$.extend({},one_list[onetime_idx])).stat_trans==database.BattleEffectTrans.Passive_Change_Normal_Attack_Count?onetime.rate>=change_attack_random_rate&&(attack_target_count=this.m_battle_general.attack3_action.target_count,to_action=ActionType.Attack_3):onetime.stat_trans==database.BattleEffectTrans.Enermy_Find_Target_To_Low_Hp?onetime.rate>=change_attack_random_rate&&(priority_position=9):onetime.stat_trans==database.BattleEffectTrans.Enermy_Find_Target_To_High_Hp?onetime.rate>=change_attack_random_rate&&(priority_position=8):onetime.stat_trans==database.BattleEffectTrans.Find_Target_To_Element_Fire?onetime.rate>=change_attack_random_rate&&(priority_position=26):onetime.stat_trans==database.BattleEffectTrans.Find_Target_To_Element_Water?onetime.rate>=change_attack_random_rate&&(priority_position=27):onetime.stat_trans==database.BattleEffectTrans.Find_Target_To_Element_Wind?onetime.rate>=change_attack_random_rate&&(priority_position=28):onetime.stat_trans==database.BattleEffectTrans.Find_Target_To_Element_Light?onetime.rate>=change_attack_random_rate&&(priority_position=29):onetime.stat_trans==database.BattleEffectTrans.Find_Target_To_Element_Dark?onetime.rate>=change_attack_random_rate&&(priority_position=30):onetime.stat_trans==database.BattleEffectTrans.Find_Target_Check_Melee?onetime.rate>=change_attack_random_rate&&(priority_position=23):onetime.stat_trans==database.BattleEffectTrans.Find_Target_Check_Lancer?onetime.rate>=change_attack_random_rate&&(priority_position=24):onetime.stat_trans==database.BattleEffectTrans.Find_Target_Check_Ranger&&onetime.rate>=change_attack_random_rate&&(priority_position=25)}if(!this.findEnemy(state,action_type,attack_target_count,priority_position,!1))return!1;this.m_target_enemys.length<this.m_battle_general.attack3_action.target_count&&(to_action=ActionType.Attack_1)}else if(1==attack_type){to_state=BattleGeneral_GeneralState.Attack,to_action=ActionType.Attack_2,damages=this.m_battle_general.attack2_action.damages,attack_target_count=this.m_battle_general.attack2_action.target_count,priority_position=this.m_battle_general.attack2_action.priority_position;for(idx=0;idx<this.m_durability_effects.length;idx++){(dur=$.extend({},this.m_durability_effects[idx])).trans_type==database.BattleEffectTrans.All_Attack_Change_Target_For_Boss?priority_position=7:dur.trans_type==database.BattleEffectTrans.Find_Target_To_Element_Fire?priority_position=26:dur.trans_type==database.BattleEffectTrans.Find_Target_To_Element_Water?priority_position=27:dur.trans_type==database.BattleEffectTrans.Find_Target_To_Element_Wind?priority_position=28:dur.trans_type==database.BattleEffectTrans.Find_Target_To_Element_Light?priority_position=29:dur.trans_type==database.BattleEffectTrans.Find_Target_To_Element_Dark&&(priority_position=30),dur=null}one_list=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Normal_Attack,one_list);for(change_attack_random_rate=parseInt(1e4*Math.random()),onetime_idx=0;onetime_idx<one_list.length;onetime_idx++){var onetime;(onetime=$.extend({},one_list[onetime_idx])).stat_trans==database.BattleEffectTrans.Passive_Change_Normal_Attack_Count?onetime.rate>=change_attack_random_rate&&(attack_target_count=this.m_battle_general.attack3_action.target_count,to_action=ActionType.Attack_3):onetime.stat_trans==database.BattleEffectTrans.Enermy_Find_Target_To_Low_Hp?onetime.rate>=change_attack_random_rate&&(priority_position=9):onetime.stat_trans==database.BattleEffectTrans.Enermy_Find_Target_To_High_Hp?onetime.rate>=change_attack_random_rate&&(priority_position=8):onetime.stat_trans==database.BattleEffectTrans.Find_Target_To_Element_Fire?onetime.rate>=change_attack_random_rate&&(priority_position=26):onetime.stat_trans==database.BattleEffectTrans.Find_Target_To_Element_Water?onetime.rate>=change_attack_random_rate&&(priority_position=27):onetime.stat_trans==database.BattleEffectTrans.Find_Target_To_Element_Wind?onetime.rate>=change_attack_random_rate&&(priority_position=28):onetime.stat_trans==database.BattleEffectTrans.Find_Target_To_Element_Light?onetime.rate>=change_attack_random_rate&&(priority_position=29):onetime.stat_trans==database.BattleEffectTrans.Find_Target_To_Element_Dark?onetime.rate>=change_attack_random_rate&&(priority_position=30):onetime.stat_trans==database.BattleEffectTrans.Find_Target_Check_Melee?onetime.rate>=change_attack_random_rate&&(priority_position=23):onetime.stat_trans==database.BattleEffectTrans.Find_Target_Check_Lancer?onetime.rate>=change_attack_random_rate&&(priority_position=24):onetime.stat_trans==database.BattleEffectTrans.Find_Target_Check_Ranger&&onetime.rate>=change_attack_random_rate&&(priority_position=25)}if(!this.findEnemy(state,action_type,attack_target_count,priority_position,!1))return!1;this.m_target_enemys.length<this.m_battle_general.attack3_action.target_count&&(to_action=ActionType.Attack_2)}else{to_state=BattleGeneral_GeneralState.Attack,to_action=ActionType.Attack_3,damages=this.m_battle_general.attack3_action.damages,attack_target_count=this.m_battle_general.attack3_action.target_count;priority_position=this.m_battle_general.attack3_action.priority_position;for(var dur_eff_idx=0;dur_eff_idx<this.m_durability_effects.length;dur_eff_idx++){(dur=$.extend({},this.m_durability_effects[dur_eff_idx])).trans_type==database.BattleEffectTrans.All_Attack_Change_Target_For_Boss?priority_position=7:dur.trans_type==database.BattleEffectTrans.Find_Target_To_Element_Fire?priority_position=26:dur.trans_type==database.BattleEffectTrans.Find_Target_To_Element_Water?priority_position=27:dur.trans_type==database.BattleEffectTrans.Find_Target_To_Element_Wind?priority_position=28:dur.trans_type==database.BattleEffectTrans.Find_Target_To_Element_Light?priority_position=29:dur.trans_type==database.BattleEffectTrans.Find_Target_To_Element_Dark&&(priority_position=30),dur=null}one_list=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Normal_Attack,one_list);for(change_attack_random_rate=parseInt(1e4*Math.random()),onetime_idx=0;onetime_idx<one_list.length;onetime_idx++)one_list[onetime_idx].stat_trans==database.BattleEffectTrans.Enermy_Find_Target_To_Low_Hp?one_list[onetime_idx].rate>=change_attack_random_rate&&(priority_position=9):one_list[onetime_idx].stat_trans==database.BattleEffectTrans.Enermy_Find_Target_To_High_Hp?one_list[onetime_idx].rate>=change_attack_random_rate&&(priority_position=8):one_list[onetime_idx].stat_trans==database.BattleEffectTrans.Find_Target_To_Element_Fire?one_list[onetime_idx].rate>=change_attack_random_rate&&(priority_position=26):one_list[onetime_idx].stat_trans==database.BattleEffectTrans.Find_Target_To_Element_Water?one_list[onetime_idx].rate>=change_attack_random_rate&&(priority_position=27):one_list[onetime_idx].stat_trans==database.BattleEffectTrans.Find_Target_To_Element_Wind?one_list[onetime_idx].rate>=change_attack_random_rate&&(priority_position=28):one_list[onetime_idx].stat_trans==database.BattleEffectTrans.Find_Target_To_Element_Light?one_list[onetime_idx].rate>=change_attack_random_rate&&(priority_position=29):one_list[onetime_idx].stat_trans==database.BattleEffectTrans.Find_Target_To_Element_Dark?one_list[onetime_idx].rate>=change_attack_random_rate&&(priority_position=30):one_list[onetime_idx].stat_trans==database.BattleEffectTrans.Find_Target_Check_Melee?one_list[onetime_idx].rate>=change_attack_random_rate&&(priority_position=23):one_list[onetime_idx].stat_trans==database.BattleEffectTrans.Find_Target_Check_Lancer?one_list[onetime_idx].rate>=change_attack_random_rate&&(priority_position=24):one_list[onetime_idx].stat_trans==database.BattleEffectTrans.Find_Target_Check_Ranger&&one_list[onetime_idx].rate>=change_attack_random_rate&&(priority_position=25);if(!this.findEnemy(state,action_type,attack_target_count,priority_position,!1))return!1}if(db.GeneralArmServiceType.ArmServiceType_Ranger!=this.getArmServiceType()){var self_pos=this.absolutePosition(this.getParent());if((temp_target=this.m_target_enemys[0]).m_cur_state==BattleGeneral_GeneralState.Freeze)return this.m_target_enemys.length=0,!1;var t_pos=temp_target.absolutePosition(temp_target.getParent());if(this.m_team_type==BattleGeneral_TeamType.Left){if(self_pos.x>t_pos.x)return this.setGeneralState(BattleGeneral_GeneralState.Dash),this.playAction(ActionType.Back),!1}else if(self_pos.x<t_pos.x)return this.setGeneralState(BattleGeneral_GeneralState.Dash),this.playAction(ActionType.Back),!1;if(cc.pDistance(self_pos,t_pos)>DASH_DISTANCE+60)return this.setGeneralState(BattleGeneral_GeneralState.Dash),this.playAction(ActionType.Back),!1}else{var temp_target;if((temp_target=this.m_target_enemys[0]).m_cur_state==BattleGeneral_GeneralState.Freeze)return this.m_target_enemys.length=0,!1}this.m_map_damage.clear();var origin_attk=this.getAttackPoint(),p=this.m_battle_general.attk*this.durabilityBufDebufPoint(database.BattleChainStatType.ChainStatType_Attack_Rate,database.BattleInvokeType.BattleInvokeType_Normal_Attack)/100;if(0<p);(origin_attk+=p)<0&&(origin_attk=1);var attk=origin_attk,trans_passive_ones=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Normal_Attack,trans_passive_ones);var d_p=0,defence_point=this.getDefencePoint();for(idx=0;idx<trans_passive_ones.length;idx++){if((o=trans_passive_ones[idx]).input_ability_type==database.BattleInputAbility.Caster_Defence){var min_value=o.onetime_effect.value,max_value=Math.max(o.onetime_effect.value,o.onetime_effect.max_value);d_p+=defence_point*(effect_value=Math.random()*(max_value-min_value)+min_value)/100}}for(attk+=d_p,i=0,len=this.m_target_enemys.length;i<len;i++){var isevasion=!1,t=this.m_target_enemys[i];if("object"==typeof t){for(var calc_attk=attk,gnrl_id=t.getGeneral().general.gnrl_id,position=t.getBattlePosition(),damage_list=[],isCritical=this.calcCriticalProbability(t),type=database.DamageType.Normal,durability_effects_length=this.m_durability_effects.length,dur_idx=0;dur_idx<durability_effects_length;dur_idx++){(dur=$.extend({},this.m_durability_effects[dur_idx])).trans_type==database.BattleEffectTrans.Perfect_Critical_Power&&(isCritical=!0),dur=null}var element_advance_attk_buf_rate=t.checkElementAdvanceTargetDamage(this),element_attack_buff_rate=ELEMENT_ATTACK_BUF_RATE;for(ELEMENT_ATTACK_BUF_RATE,dur_idx=0;dur_idx<durability_effects_length;dur_idx++)this.m_durability_effects[dur_idx].trans_type==database.BattleEffectTrans.Advenced_Element_Attack_Damage_Inc?element_attack_buff_rate+=this.m_durability_effects[dur_idx].value:this.m_durability_effects[dur_idx].trans_type==database.BattleEffectTrans.Weak_Element_Attack_Damage_Dec&&this.m_durability_effects[dur_idx].value;var dur_list=[];this.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_All_Attacks,dur_list),this.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_Normal_Attack,dur_list);for(var dur_list_idx=0;dur_list_idx<dur_list.length;dur_list_idx++){(dur=$.extend({},dur_list[dur_list_idx])).trans_type==database.BattleEffectTrans.Attack_Favorable_Element&&(element_advance_attk_buf_rate=element_attack_buff_rate),dur=null}calc_attk+=calc_attk*element_advance_attk_buf_rate/100;var is_ignore_guard_rate=!1,find_obj=this.getTransPassiveSkillOneTimeEffectFind(database.BattleInvokeType.BattleInvokeType_Normal_Attack,database.BattleEffectTrans.Guard_Ignor_Attack);if(find_obj.find_one){find_obj.one;is_ignore_guard_rate=!0}var buf_dur_effects=[];this.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_Normal_Attack,buf_dur_effects),this.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_All_Attacks,buf_dur_effects),this.findTransPassiveSkillDurationEffectFind(database.BattleInvokeType.BattleInvokeType_Normal_Attack,buf_dur_effects),this.findTransPassiveSkillDurationEffectFind(database.BattleInvokeType.BattleInvokeType_All_Attacks,buf_dur_effects);for(var buf_idx=0;buf_idx<buf_dur_effects.length;buf_idx++){if((d=$.extend({},buf_dur_effects[buf_idx])).trans_type==database.BattleEffectTrans.Onetime_Effect_Call_Exec)for(var buf_end_idx=0;buf_end_idx<d.end_effects.length;buf_end_idx++){var is_element_trans_type=!1;if((o=d.end_effects[buf_end_idx]).stat_trans==database.BattleEffectTrans.Damage_Increased_General_State_O_To_Enemy_Element_Dark_Trans){for(var target_dur_idx=0;target_dur_idx<t.m_durability_effects.length;target_dur_idx++)t.m_durability_effects[target_dur_idx].trans_type==o.element_trans_type&&0==t.m_durability_effects[target_dur_idx].is_end&&this.m_battle_general.general.state_type==STATE_TYPE_O&&(is_element_trans_type=!0);is_element_trans_type&&(calc_attk+=calc_attk*o.element_value/1e4)}else(is_element_trans_type=t.findTransType(o.element_trans_type))&&(calc_attk+=calc_attk*o.element_value/100);o.stat_trans==database.BattleEffectTrans.Guard_Ignor_Attack&&(is_ignore_guard_rate=!0);var effect_value=Math.random()*(o.onetime_effect.max_value-o.onetime_effect.value)+o.onetime_effect.value;switch(o.stat_trans){case database.BattleEffectTrans.Burning_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||t.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate))&&(calc_attk+=calc_attk*o.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Elec_Shork_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Damage_Reduce)||t.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce))&&(calc_attk+=calc_attk*o.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Stun_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Stun)||t.findTransType(database.BattleEffectTrans.Not_Resist_Stun))&&(calc_attk+=calc_attk*o.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Poison_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||t.findTransType(database.BattleEffectTrans.Not_Resist_Poison))&&(calc_attk+=calc_attk*o.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Silence_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Silence)||t.findTransType(database.BattleEffectTrans.Not_Resist_Silence))&&(calc_attk+=calc_attk*o.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Blind_Darkness_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Blind_Darkness)||t.findTransType(database.BattleEffectTrans.Not_Resist_Blind))&&(calc_attk+=calc_attk*o.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Wounds_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||t.findTransType(database.BattleEffectTrans.Not_Resist_Wound))&&(calc_attk+=calc_attk*o.onetime_effect.stat_trans_value/100)}}}var buf_one_effects=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Normal_Attack,buf_one_effects),this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_All_Attacks,buf_one_effects);for(var one_effect_idx=0;one_effect_idx<buf_one_effects.length;one_effect_idx++){var one_effect=$.extend({},buf_one_effects[one_effect_idx]);if(0!=one_effect.hp_check_type){var hp=t.getCurrentLifePoint()/t.getMaxHealthPoint()*100;1==one_effect.hp_check_type?hp>=one_effect.hp_check_value&&(calc_attk+=calc_attk*(one_effect.hp_increase_value/100)):2==one_effect.hp_check_type&&hp<=one_effect.hp_check_value&&(calc_attk+=calc_attk*(one_effect.hp_increase_value/100))}switch(one_effect.stat_trans){case database.BattleEffectTrans.Burning_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||t.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate))&&(calc_attk+=calc_attk*one_effect.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Elec_Shork_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Damage_Reduce)||t.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce))&&(calc_attk+=calc_attk*one_effect.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Stun_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Stun)||t.findTransType(database.BattleEffectTrans.Not_Resist_Stun))&&(calc_attk+=calc_attk*one_effect.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Poison_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||t.findTransType(database.BattleEffectTrans.Not_Resist_Poison))&&(calc_attk+=calc_attk*one_effect.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Silence_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Silence)||t.findTransType(database.BattleEffectTrans.Not_Resist_Silence))&&(calc_attk+=calc_attk*one_effect.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Blind_Darkness_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Blind_Darkness)||t.findTransType(database.BattleEffectTrans.Not_Resist_Blind))&&(calc_attk+=calc_attk*one_effect.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Wounds_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||t.findTransType(database.BattleEffectTrans.Not_Resist_Wound))&&(calc_attk+=calc_attk*one_effect.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.add_damage_to_koi_skill:for(var rand=parseInt(1e4*Math.random()),dur_percent=0,have_dur=!1,t_durability_effects_length=t.m_durability_effects.length,target_dur_pbx=0;target_dur_pbx<t_durability_effects_length;target_dur_pbx++)t.m_durability_effects[target_dur_pbx].trans_type==database.BattleEffectTrans.Stop_Skill_Charge_koi&&(have_dur=!0);if(have_dur){var rand_plus_percent=Math.random()*(one_effect.max_value-one_effect.value)+one_effect.value;dur_percent=Math.floor(one_effect.rate+rand_plus_percent)}else dur_percent=Math.floor(one_effect.rate);rand<dur_percent&&one_effect.onetime_effect.element_type==ELEMENT_TYPE_ALL&&(calc_attk+=calc_attk*one_effect.onetime_effect.element_type_value/100);break;case database.BattleEffectTrans.Random_Damage_Inc:if(parseInt(1e4*Math.random())<one_effect.rate)calc_attk+=calc_attk*(dmg=Math.random()*(one_effect.max_value-one_effect.value)+one_effect.value)/100}if(0!=one_effect.element_type)if(one_effect.element_type==t.getElementType())calc_attk+=calc_attk*(one_effect.element_type_value/100);else if(one_effect.element_type%ELEMENT_TYPE_FIRE_DEFAULT_ATTK_RATE+1==t.getElementType()&&one_effect.element_type!=ELEMENT_TYPE_NONE&&one_effect.element_type>=ELEMENT_TYPE_FIRE_DEFAULT_ATTK_RATE&&one_effect.element_type<=ELEMENT_TYPE_DARK_DEFAULT_ATTK_RATE){calc_attk+=this.getAttackPoint()*(one_effect.element_type_value/100)}one_effect=null}buf_one_effects=null;dur_list=[];this.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_None,dur_list);var target_dur_list=[];t.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_None,target_dur_list);var check_send_damage_inc_rate_angry_rabbit=!1,check_stop_skill_cooltime_chain_rabbit=!1,inc_rate=0;for(dur_list_idx=0;dur_list_idx<dur_list.length;dur_list_idx++){(dur=$.extend({},dur_list[dur_list_idx])).trans_type==database.BattleEffectTrans.Send_Damage_Inc_Rate_Angry_Rabbit&&(check_send_damage_inc_rate_angry_rabbit=!0,inc_rate=dur.value),dur=null}for(target_dur_idx=0;target_dur_idx<target_dur_list.length;target_dur_idx++){var target_dur=$.extend({},target_dur_list[target_dur_idx]);target_dur.trans_type==database.BattleEffectTrans.Stop_Skill_Cooldown_chain_rabbit&&(check_stop_skill_cooltime_chain_rabbit=!0),target_dur=null}check_send_damage_inc_rate_angry_rabbit&&check_stop_skill_cooltime_chain_rabbit&&(calc_attk+=calc_attk*inc_rate/100),target_dur_list=dur_list=null,isCritical&&(type=database.DamageType.Critical);var check_attack_favorable_element=!1;dur_list=[];this.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_All_Attacks,dur_list),this.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_Normal_Attack,dur_list);for(dur_list_idx=0;dur_list_idx<dur_list.length;dur_list_idx++){var dur;(dur=$.extend({},dur_list[dur_list_idx])).trans_type==database.BattleEffectTrans.Attack_Favorable_Element&&(check_attack_favorable_element=!0)}var equip_stat_trans_onetimes=[];this.m_equipments.getEquipmentOnetimeEffect(this.m_battle_general,database.BattleInvokeType.BattleInvokeType_Always,equip_stat_trans_onetimes);for(var equip_ones_idx=0;equip_ones_idx<equip_stat_trans_onetimes.length;equip_ones_idx++){var equip_ones=$.extend({},equip_stat_trans_onetimes[equip_ones_idx]);if(equip_ones.stat_trans==database.BattleEffectTrans.All_Trans_Type_Dmg_Inc_Rate&&(t.findTransType(database.BattleEffectTrans.Stun)||t.findTransType(database.BattleEffectTrans.Silence)||t.findTransType(database.BattleEffectTrans.Poison)||t.findTransType(database.BattleEffectTrans.Blind_Darkness)||t.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||t.findTransType(database.BattleEffectTrans.Damage_Reduce)||t.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||t.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||t.findTransType(database.BattleEffectTrans.Not_Resist_Stun)||t.findTransType(database.BattleEffectTrans.Not_Resist_Poison)||t.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce)||t.findTransType(database.BattleEffectTrans.Not_Resist_Silence)||t.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate)||t.findTransType(database.BattleEffectTrans.Not_Resist_Wound)||t.findTransType(database.BattleEffectTrans.Not_Resist_Blind))){min_value=equip_ones.value,max_value=Math.max(equip_ones.value,equip_ones.max_value);calc_attk+=calc_attk*(effect_value=Math.random()*(max_value-min_value)+min_value)/100}}for(i2=0,len2=damages.length;i2<len2;i2++){var dmg=damages[i2],damage=new Damage;if(damage.origin_damage=origin_attk,damage.shared_point=dmg,damage.gnrl_id=gnrl_id,damage.damage_type=type,damage.hit_point=2,damage.damage=calc_attk,damage.is_ignore_guard_rate=is_ignore_guard_rate,0==i2){damage.is_first_hit=!0;for(var sum_evasion=0,dur_evasion_idx=0;dur_evasion_idx<t.m_durability_effects.length;dur_evasion_idx++){if((rand=parseInt(100*Math.random()+1))<t.m_durability_effects[dur_evasion_idx].percent&&t.m_durability_effects[dur_evasion_idx].trans_type==database.BattleEffectTrans.Onetime_Effect_Call_Exec)for(var one_evasion_idx=0;one_evasion_idx<t.m_durability_effects[dur_evasion_idx].end_effects.length;one_evasion_idx++)t.m_durability_effects[dur_evasion_idx].end_effects[one_evasion_idx].stat_trans==database.BattleEffectTrans.Attack_evasion&&(sum_evasion+=t.m_durability_effects[dur_evasion_idx].end_effects[one_evasion_idx].rate)}var trans_passive_evasion=[];t.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_All_Hitted,trans_passive_evasion),t.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Normal_Hitted,trans_passive_evasion);for(one_evasion_idx=0;one_evasion_idx<trans_passive_evasion.length;one_evasion_idx++)trans_passive_evasion[one_evasion_idx].stat_trans==database.BattleEffectTrans.Attack_evasion&&(sum_evasion+=trans_passive_evasion[one_evasion_idx].rate);var reader_one_evasion=[];t.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_Normal_Hitted,t.getGeneral(),reader_one_evasion),t.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_All_Hitted,t.getGeneral(),reader_one_evasion);for(one_evasion_idx=0;one_evasion_idx<reader_one_evasion.length;one_evasion_idx++)reader_one_evasion[one_evasion_idx].stat_trans==database.BattleEffectTrans.Attack_evasion&&(sum_evasion+=reader_one_evasion[one_evasion_idx].rate);parseInt(1e4*Math.random()+1)<sum_evasion&&(isevasion=!0)}if(i2==damages.length-1&&(damage.is_last_hit=!0),damage.is_evasion=isevasion,0<element_advance_attk_buf_rate&&(damage.is_element_trans_buf=!0,damage.attk_element_type_buf=element_advance_attk_buf_rate),element_advance_attk_buf_rate<0?damage.element_adv_type=-1:0<element_advance_attk_buf_rate&&(damage.element_adv_type=1),check_attack_favorable_element)switch(t.getElementType()){case ELEMENT_TYPE_FIRE:damage.element_type=ELEMENT_TYPE_WATER;break;case ELEMENT_TYPE_WATER:damage.element_type=ELEMENT_TYPE_WIND;break;case ELEMENT_TYPE_WIND:damage.element_type=ELEMENT_TYPE_FIRE;break;case ELEMENT_TYPE_LIGHT:damage.element_type=ELEMENT_TYPE_DARK;break;case ELEMENT_TYPE_DARK:damage.element_type=ELEMENT_TYPE_LIGHT}else damage.element_type=this.getElementType();damage.attack_type=0==attack_type?Hit_Attack_Type.ATTACK_1:1==attack_type?Hit_Attack_Type.ATTACK_2:Hit_Attack_Type.ATTACK_3;var normal_attk_blood_suck_rate=this.durabilityBufPoint(database.BattleEffectTrans.Blood_Sucking_Rate),blood_oe_list=[];this.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_Normal_Attack,this.m_battle_general,blood_oe_list),this.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_All_Attacks,this.m_battle_general,blood_oe_list);for(var oe_idx=0;oe_idx<blood_oe_list.length;oe_idx++){(oe=blood_oe_list[oe_idx]).onetime_effect.input_ability!=database.BattleInputAbility.Attack&&oe.onetime_effect.input_ability!=database.BattleInputAbility.Damage||oe.onetime_effect.output_ability!=database.BattleOutputAbility.Life||(normal_attk_blood_suck_rate+=oe.onetime_effect.value)}var blood_suck_effs=[];this.getEquipmentOnetimeEffect(this.m_battle_general,database.BattleInvokeType.BattleInvokeType_Normal_Attack,blood_suck_effs);for(oe_idx=0;oe_idx<blood_suck_effs.length;oe_idx++){var oe;(oe=blood_suck_effs[oe_idx]).input_ability_type==database.BattleInputAbility.Damage&&oe.output_ability_type==database.BattleOutputAbility.Life&&(normal_attk_blood_suck_rate+=oe.onetime_effect.value)}var is_exist_blood_suck=!1;for(i3=0,len3=this.m_battle_general.trans_passive_skill.length;i3<len3;i3++){if(this.m_battle_general.trans_passive_skill[i3].trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Normal_Attack||this.m_battle_general.trans_passive_skill[i3].trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_All_Attacks)for(j=0,len4=this.m_battle_general.trans_passive_skill[i3].onetime_effects.length;j<len4;j++)if(this.m_battle_general.trans_passive_skill[i3].onetime_effects[j].our_enemy!=database.BattleSelfOther.Self||this.m_battle_general.trans_passive_skill[i3].onetime_effects[j].input_ability_type!=database.BattleInputAbility.Damage&&this.m_battle_general.trans_passive_skill[i3].onetime_effects[j].input_ability_type!=database.BattleInputAbility.Attack||this.m_battle_general.trans_passive_skill[i3].onetime_effects[j].output_ability_type!=database.BattleOutputAbility.Life)if(this.m_battle_general.trans_passive_skill[i3].onetime_effects[j].our_enemy==database.BattleSelfOther.Self&&this.m_battle_general.trans_passive_skill[i3].onetime_effects[j].input_ability_type==database.BattleInputAbility.Max_Life&&this.m_battle_general.trans_passive_skill[i3].onetime_effects[j].output_ability_type==database.BattleOutputAbility.Damage){var max_hp=this.getMaxHealthPoint(),min=this.m_battle_general.trans_passive_skill[i3].onetime_effects[j].value,max=this.m_battle_general.trans_passive_skill[i3].onetime_effects[j].max_value,buf_attk_point=max_hp*(Math.random()*(max-min)+min)/100;damage.damage+=buf_attk_point}else this.m_battle_general.trans_passive_skill[i3].onetime_effects[j].our_enemy==database.BattleSelfOther.Other&&this.m_battle_general.trans_passive_skill[i3].onetime_effects[j].input_ability_type==database.BattleInputAbility.Good_Trans&&this.m_battle_general.trans_passive_skill[i3].onetime_effects[j].output_ability_type==database.BattleOutputAbility.Release&&this.m_battle_general.trans_passive_skill[i3].onetime_effects[j].stat_trans==database.BattleEffectTrans.None&&damage.onetime_effects.push_back(this.m_battle_general.trans_passive_skill[i3].onetime_effects[j]);else{if((o=$.extend({},this.m_battle_general.trans_passive_skill[i3].onetime_effects[j])).stat_trans==database.BattleEffectTrans.None)(one=$.extend({},o)).damage=calc_attk,one.value+=normal_attk_blood_suck_rate,is_exist_blood_suck=!0,damage.onetime_effects.push_back(one),one=null;else if(t.findTransType(o.stat_trans))(one=$.extend({},o)).damage=calc_attk,one.value+=normal_attk_blood_suck_rate,is_exist_blood_suck=!0,damage.onetime_effects.push_back(one),one=null;o=null}if(this.m_battle_general.trans_passive_skill[i3].trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate)if(this.m_life_point/this.getMaxHealthPoint()<=.5)for(var oe_idx2=0;oe_idx2<this.m_battle_general.trans_passive_skill[i3].onetime_effects.length;oe_idx2++){if((o=$.extend({},this.m_battle_general.trans_passive_skill[i3].onetime_effects[oe_idx2])).our_enemy==database.BattleSelfOther.Self&&(o.input_ability_type==database.BattleInputAbility.Damage||o.input_ability_type==database.BattleInputAbility.Attack)&&o.output_ability_type==database.BattleOutputAbility.Life)if(o.stat_trans==database.BattleEffectTrans.None)(one=$.extend({},o)).value+=normal_attk_blood_suck_rate,is_exist_blood_suck=!0,damage.onetime_effects.push_back(one),one=null;else if(t.findTransType(o.stat_trans))(one=$.extend({},o)).value+=normal_attk_blood_suck_rate,is_exist_blood_suck=!0,damage.onetime_effects.push_back(one),one=null;o=null}if(this.m_battle_general.trans_passive_skill[i3].trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate)if(this.m_life_point/this.getMaxHealthPoint()<=.75)for(oe_idx2=0;oe_idx2<this.m_battle_general.trans_passive_skill[i3].onetime_effects.length;oe_idx2++){var o,one;if((o=$.extend({},this.m_battle_general.trans_passive_skill[i3].onetime_effects[oe_idx2])).our_enemy==database.BattleSelfOther.Self&&(o.input_ability_type==database.BattleInputAbility.Damage||o.input_ability_type==database.BattleInputAbility.Attack)&&o.output_ability_type==database.BattleOutputAbility.Life)if(o.stat_trans==database.BattleEffectTrans.None)(one=$.extend({},o)).value+=normal_attk_blood_suck_rate,is_exist_blood_suck=!0,damage.onetime_effects.push_back(one),one=null;else if(t.findTransType(o.stat_trans))(one=$.extend({},o)).value+=normal_attk_blood_suck_rate,is_exist_blood_suck=!0,damage.onetime_effects.push_back(one),one=null;o=null}if(this.m_battle_general.trans_passive_skill[i3].trans_passive.invoke_type2,database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate,this.m_battle_general.trans_passive_skill[i3].trans_passive.invoke_type2,database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate,this.m_battle_general.trans_passive_skill[i3].trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Normal_Attack||this.m_battle_general.trans_passive_skill[i3].trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_All_Attacks)for(j=0,len4=this.m_battle_general.trans_passive_skill[i3].durability_effects.length;j<len4;j++){(d=$.extend({},this.m_battle_general.trans_passive_skill[i3].durability_effects[j])).our_enemy==database.BattleSelfOther.Other&&damage.durability_effects.push(d)}}buf_dur_effects=[];this.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_Normal_Attack,buf_dur_effects);for(buf_idx=0;buf_idx<buf_dur_effects.length;buf_idx++){var d;if((d=$.extend({},buf_dur_effects[buf_idx])).trans_type!=database.BattleEffectTrans.Blood_Sucking_Rate&&d.trans_type!=database.BattleEffectTrans.Onetime_Effect_Call_Exec&&d.trans_type!=database.BattleEffectTrans.Normal_Attack_Defence_Ignore_Attack&&d.trans_type!=database.BattleEffectTrans.Freeze&&d.trans_type!=database.BattleEffectTrans.Silence&&d.trans_type!=database.BattleEffectTrans.Stun&&d.trans_type!=database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_0&&d.trans_type!=database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_1&&d.trans_type!=database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_2&&d.trans_type!=database.BattleEffectTrans.Attack_Favorable_Element&&d.trans_type!=database.BattleEffectTrans.Defence_Point_Rate_Dec&&d.trans_type!=database.BattleEffectTrans.Normal_Attack_Elec&&damage.durability_effects.push_back(d),d.trans_type==database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_0||d.trans_type==database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_1||d.trans_type==database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_2){var dur_rand=0;if(d.trans_type==database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_0?dur_rand=3e3:d.trans_type==database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_1?dur_rand=4e3:d.trans_type==database.BattleEffectTrans.Normal_Attack_Enchant_Rand_3_jowoon_swim_2&&(dur_rand=5e3),0!=dur_rand)if((rand=parseInt(1e4*Math.random()))<=dur_rand){switch((rand_dur=new database.BattleDurabilityEffect).duration=6,rand_dur.trans_type=database.BattleEffectTrans.None,rand_dur.up_down=database.BattleUpDown.Down,rand_dur.our_enemy=database.BattleSelfOther.Other,rand_dur.percent=100,parseInt(3*Math.random()+1)){case 1:rand_dur.trans_type=database.BattleEffectTrans.Freeze;var end_one=new database.BattleOneTimeEffect;end_one.rate=1e4,end_one.value=90,end_one.max_value=90,end_one.input_ability_type=database.BattleInputAbility.Damage,end_one.output_ability_type=database.BattleOutputAbility.Damage,end_one.our_enemy=database.BattleSelfOther.Other,end_one.damage=this.getAttackPoint(),rand_dur.end_effects.push_back($.extend({},end_one));break;case 2:rand_dur.trans_type=database.BattleEffectTrans.Silence;break;case 3:rand_dur.trans_type=database.BattleEffectTrans.Blind_Darkness}var res_point=0;if(res_point+=t.m_my_team.getLeaderSkillTransResistBufPoint(rand_dur.trans_type,t.getGeneral()),res_point+=t.m_my_team.getSpecialLeaderSkillTransResistBufPoint(rand_dur.trans_type,t.getGeneral()),res_point+=t.m_my_team.getFriendLeaderSkillTransResistBufPoint(rand_dur.trans_type,t.getGeneral()),res_point+=t.getEventDungeonGnrlTransResistBuf(rand_dur.trans_type),res_point+=t.durabilityBufResistPoint(rand_dur.trans_type),res_point+=t.getEquipmentOptionStatBuff(database.BattleChainStatType.ChainStatType_All_Resistance_Inc_Value)/100,res_point=this.m_my_team.getPassiveSkillBufPoint(database.BattleChainStatType.ChainStatType_All_Resistance_Inc_Value,this.m_battle_general),t.IsDurabilityResistZeroCheck(rand_dur.trans_type)&&0<res_point&&(res_point=0),this.checkTransInvinsiblity(d.trans_type))break;var res_rand=parseInt(100*Math.random()),rate=rand_dur.percent-res_point;TEST_SKILL_TRANS_PERCENT&&this.getTeamType()==BattleGeneral_TeamType.Left?damage.durability_effects.push_back($.extend({},rand_dur)):res_rand<rate&&damage.durability_effects.push_back($.extend({},rand_dur))}}else if(d.trans_type==database.BattleEffectTrans.Normal_Attack_Elec){var rand_dur;rand=parseInt(100*Math.random()),dur_rand=0;17242==d.gnrl_id&&(dur_rand=30),(rand_dur=new database.BattleDurabilityEffect).duration=8,rand_dur.trans_type=database.BattleEffectTrans.Damage_Reduce,rand_dur.up_down=database.BattleUpDown.Down,rand_dur.our_enemy=database.BattleSelfOther.Other,rand_dur.percent=100,rand_dur.value=50;res_point=0;if(res_point+=t.m_my_team.getLeaderSkillTransResistBufPoint(rand_dur.trans_type,t.getGeneral()),res_point+=t.m_my_team.getSpecialLeaderSkillTransResistBufPoint(rand_dur.trans_type,t.getGeneral()),res_point+=t.m_my_team.getFriendLeaderSkillTransResistBufPoint(rand_dur.trans_type,t.getGeneral()),res_point+=t.getEventDungeonGnrlTransResistBuf(rand_dur.trans_type),res_point+=t.durabilityBufResistPoint(rand_dur.trans_type),res_point+=t.getEquipmentOptionStatBuff(database.BattleChainStatType.ChainStatType_All_Resistance_Inc_Value)/100,res_point=this.m_my_team.getPassiveSkillBufPoint(database.BattleChainStatType.ChainStatType_All_Resistance_Inc_Value,this.m_battle_general),t.IsDurabilityResistZeroCheck(rand_dur.trans_type)&&0<res_point&&(res_point=0),TEST_SKILL_TRANS_PERCENT&&this.getTeamType()==BattleGeneral_TeamType.Left&&(res_point=0),this.checkTransInvinsiblity(d.trans_type))break;rand<(dur_rand-=res_point)&&damage.durability_effects.push_back($.extend({},rand_dur))}}if(!is_exist_blood_suck&&0<normal_attk_blood_suck_rate){var blood_suck_ot=new database.BattleOneTimeEffect;blood_suck_ot.our_enemy=database.BattleSelfOther.Self,blood_suck_ot.input_ability_type=database.BattleInputAbility.Damage,blood_suck_ot.value=normal_attk_blood_suck_rate,blood_suck_ot.output_ability_type=database.BattleOutputAbility.Life,blood_suck_ot.damage=damage.damage,blood_suck_ot.rate=1e4,blood_suck_ot.max_value=normal_attk_blood_suck_rate,damage.onetime_effects.push_back(blood_suck_ot)}damage_list.push(damage),0}var a_map_damage=[];a_map_damage[0]=[gnrl_id,position],this.m_map_damage.insert(a_map_damage[0],damage_list)}}for(var dur_base_eff=0;dur_base_eff<this.m_durability_effects.length;dur_base_eff++)if(this.m_durability_effects[dur_base_eff].trans_type==database.BattleEffectTrans.Onetime_Effect_Call_Exec)for(var dur_base_eff_one=0;dur_base_eff_one<this.m_durability_effects[dur_base_eff].end_effects.length;dur_base_eff_one++)if(this.m_durability_effects[dur_base_eff].end_effects[dur_base_eff_one].stat_trans==database.BattleEffectTrans.Random_Damage_Inc){min_value=this.m_durability_effects[dur_base_eff].end_effects[dur_base_eff_one].onetime_effect.value,max_value=Math.max(this.m_durability_effects[dur_base_eff].end_effects[dur_base_eff_one].onetime_effect.value,this.m_durability_effects[dur_base_eff].end_effects[dur_base_eff_one].onetime_effect.max_value),effect_value=Math.random()*(max_value-min_value)+min_value;this.m_durability_effects[dur_base_eff].end_effects[dur_base_eff_one].random_damage_value=effect_value}this.m_normal_attack_count--,this.setGeneralState(to_state),this.playAction(to_action);var trans_passive_life_down=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Normal_Attack,trans_passive_life_down),this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_All_Attacks,trans_passive_life_down);for(var passive_adx=0;passive_adx<trans_passive_life_down.length;passive_adx++)if(trans_passive_life_down[passive_adx].input_ability_type==database.BattleInputAbility.Life&&trans_passive_life_down[passive_adx].output_ability_type==database.BattleOutputAbility.Damage){min_value=trans_passive_life_down[passive_adx].value,max_value=Math.max(trans_passive_life_down[passive_adx].value,trans_passive_life_down[passive_adx].max_value),effect_value=Math.random()*(max_value-min_value)+min_value;var evt,life_down_damage_type=database.DamageType.Dot_Poison,hp_point=this.m_life_point*effect_value/100;if(1<=hp_point&&this.selfLifeDown(hp_point),null!=this._cbEventListenerFieldMng)(evt=new battle.Event).floatValue=hp_point,evt.dataValue1=this,evt.intValue=life_down_damage_type,this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_DAMAGE_SHOW,evt);if(null!=this._cbEventListenerUIMng)(evt=new battle.Event).intValue=this.getTeamType(),(evt.dataValue1=this)._cbEventListenerUIMng.EventListenerFromGeneral(EventCode.EVT_UI_MNG_HITTED,evt),evt=null}return!0},stepSkillReadyOurTeam:function(skill_action,active_skill){if(this.addDebugGeneral("stepSkillReadyOurTeam"),this.m_target_ours.length=0,!this.findSelf(skill_action,active_skill)){for(var i=0;i<this.m_battle_general.active_skill.length;i++)this.m_battle_general.active_skill[i].is_prepared&&(this.m_battle_general.active_skill[i].is_prepared=!1);return this.setGeneralState(BattleGeneral_GeneralState.Idle),!1}this.m_map_cure.clear();var origin_attk=this.getAttackPoint(),attk=origin_attk,random_attack_50_to_100=0,random_defence_50_to_100=0;for(i=0;i<this.m_battle_general.active_skill.length;i++){if(!(!(this.m_battle_general.active_skill[i].is_prepared&&this.m_battle_general.active_skill[i].skill_charge_count>INIT_SKILL_CHARGE_BUFF)||this.m_battle_general.active_skill[i].is_teamcooltime)){var equip_opt_durability_effect_duration_time_buff=0,durability_duration_buff=[];this.getEquipmentOnetimeEffect(this.m_battle_general,database.BattleInvokeType.BattleInvokeType_Skill_Attck,durability_duration_buff);for(var idx=0;idx<durability_duration_buff.length;idx++){var o=durability_duration_buff[idx];if(o.stat_trans==database.BattleEffectTrans.All_Stat_Buff_Effect_Duration_Time_Inc){var min_value=o.onetime_effect.value,max_value=Math.max(o.onetime_effect.value,o.onetime_effect.max_value);equip_opt_durability_effect_duration_time_buff+=Math.random()*(max_value-min_value)+min_value}}for(var is_exist_stat_buff_duration=!1,idx_d=0;idx_d<this.m_battle_general.active_skill[i].durability_effects.length;idx_d++){var d=$.extend({},this.m_battle_general.active_skill[i].durability_effects[idx_d]);if(d.our_enemy==database.BattleSelfOther.Self&&(d.trans_type==database.BattleEffectTrans.Damage_Increased||d.trans_type==database.BattleEffectTrans.Defence_Increased||d.trans_type==database.BattleEffectTrans.Attack_Point_Abs_Inc||d.trans_type==database.BattleEffectTrans.Defence_Point_Rate_Inc||d.trans_type==database.BattleEffectTrans.Guard_Invoke_Rate_inc||d.trans_type==database.BattleEffectTrans.Guard_Defence_Rate_Inc||d.trans_type==database.BattleEffectTrans.Critical_Percent_Rate_Inc||d.trans_type==database.BattleEffectTrans.Critical_Power_Rate_inc||d.trans_type==database.BattleEffectTrans.Caster_Lv_Def_Inc||d.trans_type==database.BattleEffectTrans.Caster_Lv_Attk_Inc||d.trans_type==database.BattleEffectTrans.Caster_Lv_Critical_Rate_Inc||d.trans_type==database.BattleEffectTrans.Caster_Lv_Critical_Power_Inc)){is_exist_stat_buff_duration=!0;break}d=null}for(var ii=0;ii<this.m_target_ours.length;ii++){for(var gnrl_id=this.m_target_ours[ii].getGeneral().general.gnrl_id,cure_list=new Array,j=0;j<this.m_battle_general.active_skill[i].skill_action.damages.length;j++){var dmg=this.m_battle_general.active_skill[i].skill_action.damages[j],cure=new Cure;cure.durability_effects=[],cure.onetime_effects=[],cure.origin_damage=origin_attk,cure.damage=attk,cure.share_point=dmg,cure.gnrl_id=gnrl_id;for(var k=0;k<this.m_battle_general.active_skill[i].onetime_effects.length;k++)this.m_battle_general.active_skill[i].onetime_effects[k].our_enemy==database.BattleSelfOther.Self&&(this.m_battle_general.active_skill[i].onetime_effects[k].damage=attk,cure.onetime_effects.push($.extend({},this.m_battle_general.active_skill[i].onetime_effects[k])));for(k=0;k<this.m_battle_general.active_skill[i].durability_effects.length;k++){var dur=$.extend({},this.m_battle_general.active_skill[i].durability_effects[k]);if(dur.our_enemy==database.BattleSelfOther.Self){for(var k2=0;k2<dur.end_effects.length;k2++)dur.end_effects[k2].damage=attk;if(dur.trans_type==database.BattleEffectTrans.Heal_By_Tick_Time&&dur.tick_effects.forEach(function(tic){this.getMaxHealthPoint();dur.damage=attk}.bind(this)),0<this.m_battle_general.active_sub_skill.length){for(var sub_idx=0;sub_idx<this.m_battle_general.active_sub_skill.length;sub_idx++)this.m_battle_general.active_sub_skill[sub_idx].is_used=!1;cure.is_sub_skill=!0}if(0<equip_opt_durability_effect_duration_time_buff)if(dur.trans_type==database.BattleEffectTrans.Damage_Increased||dur.trans_type==database.BattleEffectTrans.Defence_Increased||dur.trans_type==database.BattleEffectTrans.Attack_Point_Abs_Inc||dur.trans_type==database.BattleEffectTrans.Defence_Point_Rate_Inc||dur.trans_type==database.BattleEffectTrans.Guard_Invoke_Rate_inc||dur.trans_type==database.BattleEffectTrans.Guard_Defence_Rate_Inc||dur.trans_type==database.BattleEffectTrans.Critical_Percent_Rate_Inc||dur.trans_type==database.BattleEffectTrans.Critical_Power_Rate_inc||dur.trans_type==database.BattleEffectTrans.Attack_Speed_Inc||dur.trans_type==database.BattleEffectTrans.Caster_Lv_Def_Inc||dur.trans_type==database.BattleEffectTrans.Caster_Lv_Attk_Inc||dur.trans_type==database.BattleEffectTrans.Caster_Lv_Critical_Rate_Inc||dur.trans_type==database.BattleEffectTrans.Caster_Lv_Critical_Power_Inc){var inc_dur=dur.duration*equip_opt_durability_effect_duration_time_buff/100,duration=dur.duration+=inc_dur;dur.duration=duration}else if(dur.trans_type==database.BattleEffectTrans.None_Trans_Only_Effect_Use_Type&&is_exist_stat_buff_duration){inc_dur=dur.duration*equip_opt_durability_effect_duration_time_buff/100,duration=dur.duration+=inc_dur;dur.duration=duration}var dd=$.extend({},dur);cure.durability_effects.push(dd)}}for(k=0;k<this.m_battle_general.trans_passive_skill.length;k++){if(4==this.m_battle_general.trans_passive_skill[k].trans_passive.invoke_type1||5==this.m_battle_general.trans_passive_skill[k].trans_passive.invoke_type1)for(k2=0;k2<this.m_battle_general.trans_passive_skill[k].onetime_effects.length;k2++)this.m_battle_general.trans_passive_skill[k].onetime_effects[k2].our_enemy==database.BattleSelfOther.Self&&(this.m_battle_general.trans_passive_skill[k].onetime_effects[k2].damage=attk,cure.onetime_effects.push($.extend({},this.m_battle_general.trans_passive_skill[k].onetime_effects[k2])));if(4==this.m_battle_general.trans_passive_skill[k].trans_passive.invoke_type2||5==this.m_battle_general.trans_passive_skill[k].trans_passive.invoke_type2)for(k2=0;k2<this.m_battle_general.trans_passive_skill[k].durability_effects.length;k2++)if(this.m_battle_general.trans_passive_skill[k].durability_effects[k2].our_enemy==database.BattleSelfOther.Self){for(var k3=0;k3<this.m_battle_general.trans_passive_skill[k].durability_effects[k2].end_effects.length;k3++)this.m_battle_general.trans_passive_skill[k].durability_effects[k2].end_effects[k3].damage=attk;cure.durability_effects.push($.extend({},this.m_battle_general.trans_passive_skill[k].durability_effects[k2]))}}cure_list.push(cure)}this.m_map_cure.insert(gnrl_id,$.extend([],cure_list))}for(var sub_dur_idx=0;sub_dur_idx<this.m_battle_general.active_sub_skill.length;sub_dur_idx++)for(var d_idx=0;d_idx<this.m_battle_general.active_sub_skill[sub_dur_idx].durability_effects.length;d_idx++)this.m_battle_general.active_sub_skill[sub_dur_idx].durability_effects[d_idx].trans_type==database.BattleEffectTrans.Random_Stat_Attack_50_To_100?this.m_battle_general.active_sub_skill[sub_dur_idx].durability_effects[d_idx].value=(0==random_attack_50_to_100&&(random_attack_50_to_100=parseInt(50*Math.random()+50)),random_attack_50_to_100):this.m_battle_general.active_sub_skill[sub_dur_idx].durability_effects[d_idx].trans_type==database.BattleEffectTrans.Random_Stat_Defence_50_To_100?this.m_battle_general.active_sub_skill[sub_dur_idx].durability_effects[d_idx].value=(0==random_defence_50_to_100&&(random_defence_50_to_100=parseInt(50*Math.random()+50)),random_defence_50_to_100):this.m_battle_general.active_sub_skill[sub_dur_idx].durability_effects[d_idx].trans_type==database.BattleEffectTrans.Random_Stat_Critical_Percent_50_To_100&&(random_defence_50_to_100=parseInt(5e3*Math.random()+5e3),this.m_battle_general.active_sub_skill[sub_dur_idx].durability_effects[d_idx].value=random_defence_50_to_100);this.m_battle_general.active_skill[i].is_cooltime=!0;var dec_cooltime=this.getSkillCoolTimeDecBuf(this.m_battle_general.active_skill[i]);this.m_battle_general.active_skill[i].cooltime=this.m_battle_general.active_skill[i].skill.cool_time-dec_cooltime,this.m_current_skill_charge_count=this.m_battle_general.active_skill[i].skill_charge_count,this.m_battle_general.active_skill[i].skill_charge_count=INIT_SKILL_CHARGE_BUFF;var path=RES_CDN_SOUND+SND_TYPE+"sound/SE_battle_skill.mp3";AudioEngine.getInstance().playEffect(path),null!=this._addSkillMessage&&(this._addSkillMessage_LR==BattleMessageDirection.Left?this._addSkillMessage.addSkillMessageLeftTeam(this.m_battle_general.active_skill[i].skill):this._addSkillMessage.addSkillMessageRightTeam(this.m_battle_general.active_skill[i].skill)),null!=this._req_team_cooltime&&this._req_team_cooltime.requestTeamCoolTime(this);break}}if(this.m_normal_attack_count=this.m_battle_general.normal_hit_count,this.playSkillEffectSound(),this.setGeneralState(BattleGeneral_GeneralState.Skill),this.m_team_type==BattleGeneral_TeamType.Left?this.playAction(ActionType.Skill):0==this.m_battle_general.active_skill[0].skill.enemy_skill_type?this.playAction(ActionType.Skill):this.playAction(ActionType.Skill_Enemy),0<this.m_battle_general.active_sub_skill.length)for(i=0;i<this.m_battle_general.active_sub_skill.length;i++)this.m_battle_general.active_sub_skill[i].is_used=!1;return this.m_game_type==db.BattleGameType.GreatWallDungeon&&this.m_team_type==BattleGeneral_TeamType.Left&&(this.m_battle_general.remain_skill_count--,this.m_use_greatwall_rebon_skil=!0,this.m_battle_general.remain_skill_count<0&&(this.m_use_greatwall_rebon_skil=!1,this.m_battle_general.remain_skill_count=0),0==this.m_battle_general.remain_skill_count&&null!=this._skillEnable&&this._skillEnable.skillEnable(!1)),!0},isReadySkillbyAI:function(index){if(0==this.gen_ver||2==this.gen_ver)return!0;var info=this.getStateInfo();switch(index){case 0:return 0!=info.active_skill1;case 1:return 0!=info.active_skill2;case 2:return 0!=info.active_skill3}return!1},stepSkillReadyEnemyTeam:function(skill_action,active_skill){this.addDebugGeneral("stepSkillReadyEnemyTeam");for(var state=BattleGeneral_GeneralState.None,action_type=ActionType.Basic,priority_position=skill_action.priority_position,idx_dur=0;idx_dur<this.m_durability_effects.length;idx_dur++)this.m_durability_effects[idx_dur].trans_type==database.BattleEffectTrans.All_Attack_Change_Target_For_Boss?priority_position=7:this.m_durability_effects[idx_dur].trans_type==database.BattleEffectTrans.Find_Target_To_Element_Fire?priority_position=26:this.m_durability_effects[idx_dur].trans_type==database.BattleEffectTrans.Find_Target_To_Element_Water?priority_position=27:this.m_durability_effects[idx_dur].trans_type==database.BattleEffectTrans.Find_Target_To_Element_Wind?priority_position=28:this.m_durability_effects[idx_dur].trans_type==database.BattleEffectTrans.Find_Target_To_Element_Light?priority_position=29:this.m_durability_effects[idx_dur].trans_type==database.BattleEffectTrans.Find_Target_To_Element_Dark&&(priority_position=30);if(!this.findEnemy(state,action_type,skill_action.target_count,priority_position,!0)){state=this.m_retrun_state,action_type=this.m_return_type;for(var i=0;i<this.m_battle_general.active_skill.length;i++)this.m_battle_general.active_skill[i].is_prepared&&(this.m_battle_general.active_skill[i].is_prepared=!1);return this.setGeneralState(BattleGeneral_GeneralState.Idle),!1}for(var inc_stat_trans_inc_duration_time=0,idx=0;idx<this.m_durability_effects.length;idx++){(dur=this.m_durability_effects[idx]).trans_type==database.BattleEffectTrans.All_Effect_Trans_Types&&dur.up_down==database.BattleUpDown.Up&&(inc_stat_trans_inc_duration_time=dur.value)}this.m_map_skill_damage.clear();var origin_attk=this.getAttackPoint(),attk=origin_attk,random_attack_50_to_100=0,skillIndex=0;for(i=0;i<this.m_battle_general.active_skill.length;i++){if(!(!(this.m_battle_general.active_skill[i].is_prepared&&this.m_battle_general.active_skill[i].skill_charge_count>INIT_SKILL_CHARGE_BUFF)||this.m_battle_general.active_skill[i].is_teamcooltime)&this.isReadySkillbyAI(skillIndex)){for(var increase_attack_point=0,i2=0;i2<this.m_battle_general.active_skill[i].onetime_effects.length;i2++){if((one=this.m_battle_general.active_skill[i].onetime_effects[i2]).our_enemy==database.BattleSelfOther.Other)if(one.input_ability_type==database.BattleInputAbility.Attack&&one.output_ability_type==database.BattleOutputAbility.Damage)if(0==one.onetime_effect.unit_target_dec)attk=origin_attk*one.value/100;else{var total_target_count=this.m_battle_general.active_skill[i].skill_action.target_count;if(0==total_target_count&&(total_target_count=5),0!=one.value){var diff_cnt=total_target_count-this.m_skill_target_enemys.length,dec_value=parseInt(diff_cnt/one.onetime_effect.unit_target_dec)*one.onetime_effect.unit_target_dmg_dec_value;attk=origin_attk*(one.value+dec_value)/100}}else if(one.input_ability_type==database.BattleInputAbility.LifeDown&&one.output_ability_type==database.BattleOutputAbility.Damage){for(var down_life=0,i3=0;i3<this.m_battle_general.active_skill[i].onetime_effects.length;i3++){if((o=this.m_battle_general.active_skill[i].onetime_effects[i3]).our_enemy==database.BattleSelfOther.Self&&o.input_ability_type==database.BattleInputAbility.Life&&o.output_ability_type==database.BattleOutputAbility.Life_Down){down_life=this.m_life_point*o.value/100;break}}0<down_life&&(increase_attack_point=down_life*one.value/100)}}var ones=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate,ones);for(var f_i_d_idx=0;f_i_d_idx<ones.length;f_i_d_idx++){var find_Increased_Damage=ones[f_i_d_idx],RatioHp=this.getCurrentLifePoint()/this.getMaxHealthPoint(),Option_check=!1;find_Increased_Damage.stat_trans==database.BattleEffectTrans.ActiveSkill_Damage_Inc&&RatioHp<=.5&&(Option_check=!0),Option_check&&(attk+=attk*find_Increased_Damage.value/100)}var ones2=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate,ones2);for(f_i_d_idx=0;f_i_d_idx<ones2.length;f_i_d_idx++){find_Increased_Damage=ones2[f_i_d_idx],RatioHp=this.getCurrentLifePoint()/this.getMaxHealthPoint(),Option_check=!1;find_Increased_Damage.stat_trans==database.BattleEffectTrans.ActiveSkill_Damage_Inc&&RatioHp<=.75&&(Option_check=!0),Option_check&&(attk+=attk*find_Increased_Damage.value/100)}for(i2=0;i2<this.m_battle_general.trans_passive_skill.length;i2++)if(this.m_battle_general.trans_passive_skill[i2].trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Skill_Attck)for(i3=0;i3<this.m_battle_general.trans_passive_skill[i2].onetime_effects.length;i3++)this.m_battle_general.trans_passive_skill[i2].onetime_effects[i3].input_ability_type==database.BattleInputAbility.Attack&&this.m_battle_general.trans_passive_skill[i2].onetime_effects[i3].output_ability_type==database.BattleOutputAbility.Damage&&(attk+=origin_attk*this.m_battle_general.trans_passive_skill[i2].onetime_effects[i3].value/100);if(0<increase_attack_point&&(attk+=increase_attack_point),1<this.m_battle_general.active_skill[i].skill_charge_count){attk+=origin_attk*this.getSkillChargeBuf(SKILL_CHARGE_ATTR_ONETIME,SKILL_CHARGE_EFFECT_TYPE_NONE,this.m_battle_general.active_skill[i].skill_charge_count)/100;var extra_charge_buff=this.getSkillChargeBuf(SKILL_CHARGE_ATTR_EXTRA_BUF,SKILL_CHARGE_EFFECT_TYPE_NONE,this.m_battle_general.active_skill[i].skill_charge_count);0<extra_charge_buff&&(attk=attk*extra_charge_buff/100)}for(i2=0;i2<this.m_skill_target_enemys.length;i2++){var isevasion=!1,t=this.m_skill_target_enemys[i2];if("object"==typeof t){var calc_attk=attk;if("number"!=$.type(t)&&t.IsAlive()&&t.m_cur_state!=BattleGeneral_GeneralState.Freeze){var gnrl_id=t.getGeneral().general.gnrl_id,position=t.getBattlePosition(),damage_list=[],a_map_damage_temp=[];a_map_damage_temp[0]=[gnrl_id,position];var found_temp=this.m_map_skill_damage.find(a_map_damage_temp[0]),found_temp_value=this.m_map_skill_damage.at(a_map_damage_temp[0]);1==found_temp&&(damage_list=found_temp_value);for(var isCritical=this.calcCriticalProbability(t),one_idx=0;one_idx<this.m_battle_general.active_skill[i].onetime_effects.length;one_idx++){(one=$.extend({},this.m_battle_general.active_skill[i].onetime_effects[one_idx])).stat_trans==database.BattleEffectTrans.Perfect_Critical_Power&&(isCritical=!0),one=null}var type=isCritical?database.DamageType.Critical:database.DamageType.Normal,element_advance_attk_buf_rate=t.checkElementAdvanceTargetDamage(this);calc_attk+=attk*element_advance_attk_buf_rate/100,0!=element_advance_attk_buf_rate&&cc.log(cmString("element_advance_attk_buf_rate [%.2f]",element_advance_attk_buf_rate));for(one_idx=0;one_idx<this.m_battle_general.active_skill[i].onetime_effects.length;one_idx++){(one=$.extend({},this.m_battle_general.active_skill[i].onetime_effects[one_idx])).our_enemy==database.BattleSelfOther.Other&&one.element_trans_type==database.BattleEffectTrans.All_Element_Types&&(t.findTransType(database.BattleEffectTrans.Element_Type_Fire_Trans)||t.findTransType(database.BattleEffectTrans.Element_Type_Water_Trans)||t.findTransType(database.BattleEffectTrans.Element_Type_Wind_Trans)||t.findTransType(database.BattleEffectTrans.Element_Type_Light_Trans)||t.findTransType(database.BattleEffectTrans.Element_Type_Dark_Trans))&&(calc_attk+=calc_attk*one.element_value/100)}var buf_dur_effects=[];this.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_Skill_Attck,buf_dur_effects),this.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_All_Attacks,buf_dur_effects),this.findTransPassiveSkillDurationEffectFind(database.BattleInvokeType.BattleInvokeType_Skill_Attck,buf_dur_effects),this.findTransPassiveSkillDurationEffectFind(database.BattleInvokeType.BattleInvokeType_All_Attacks,buf_dur_effects);for(var buf_idx=0;buf_idx<buf_dur_effects.length;buf_idx++){if((d=$.extend({},buf_dur_effects[buf_idx])).trans_type==database.BattleEffectTrans.Onetime_Effect_Call_Exec)for(var buf_end_idx=0;buf_end_idx<d.end_effects.length;buf_end_idx++){var is_element_trans_type=!1;if((o=d.end_effects[buf_end_idx]).stat_trans==database.BattleEffectTrans.Damage_Increased_General_State_O_To_Enemy_Element_Dark_Trans){for(var target_dur_idx=0;target_dur_idx<t.m_durability_effects.length;target_dur_idx++)t.m_durability_effects[target_dur_idx].trans_type==o.element_trans_type&&0==t.m_durability_effects[target_dur_idx].is_end&&this.m_battle_general.general.state_type==STATE_TYPE_O&&(is_element_trans_type=!0);is_element_trans_type&&(calc_attk+=calc_attk*o.element_value/1e4)}else(is_element_trans_type=t.findTransType(o.element_trans_type))&&(calc_attk+=calc_attk*o.element_value/100);var effect_value=Math.random()*(o.onetime_effect.max_value-o.onetime_effect.value)+o.onetime_effect.value;switch(o.stat_trans){case database.BattleEffectTrans.Burning_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||t.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate))&&(calc_attk+=calc_attk*o.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Elec_Shork_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Damage_Reduce)||t.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce))&&(calc_attk+=calc_attk*o.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Stun_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Stun)||t.findTransType(database.BattleEffectTrans.Not_Resist_Stun))&&(calc_attk+=calc_attk*o.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Poison_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||t.findTransType(database.BattleEffectTrans.Not_Resist_Poison))&&(calc_attk+=calc_attk*o.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Silence_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Silence)||t.findTransType(database.BattleEffectTrans.Not_Resist_Silence))&&(calc_attk+=calc_attk*o.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Blind_Darkness_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Blind_Darkness)||t.findTransType(database.BattleEffectTrans.Not_Resist_Blind))&&(calc_attk+=calc_attk*o.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Wounds_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||t.findTransType(database.BattleEffectTrans.Not_Resist_Wound))&&(calc_attk+=calc_attk*o.onetime_effect.stat_trans_value/100)}}}var buf_one_effects=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Skill_Attck,buf_one_effects),this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_All_Attacks,buf_one_effects);for(var buff_one_effect_idx=0;buff_one_effect_idx<buf_one_effects.length;buff_one_effect_idx++){var one_effect=$.extend({},buf_one_effects[buff_one_effect_idx]);if(0!=one_effect.hp_check_type){var hp=t.getCurrentLifePoint()/t.getMaxHealthPoint()*100;1==one_effect.hp_check_type?hp>=one_effect.hp_check_value&&(calc_attk+=calc_attk*(one_effect.hp_increase_value/100)):2==one_effect.hp_check_type&&hp<=one_effect.hp_check_value&&(calc_attk+=calc_attk*(one_effect.hp_increase_value/100))}switch(one_effect.stat_trans){case database.BattleEffectTrans.Burning_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||t.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate))&&(calc_attk+=calc_attk*one_effect.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Elec_Shork_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Damage_Reduce)||t.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce))&&(calc_attk+=calc_attk*one_effect.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Stun_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Stun)||t.findTransType(database.BattleEffectTrans.Not_Resist_Stun))&&(calc_attk+=calc_attk*one_effect.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Poison_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||t.findTransType(database.BattleEffectTrans.Not_Resist_Poison))&&(calc_attk+=calc_attk*one_effect.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Silence_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Silence)||t.findTransType(database.BattleEffectTrans.Not_Resist_Silence))&&(calc_attk+=calc_attk*one_effect.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Blind_Darkness_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Blind_Darkness)||t.findTransType(database.BattleEffectTrans.Not_Resist_Blind))&&(calc_attk+=calc_attk*one_effect.onetime_effect.stat_trans_value/100);break;case database.BattleEffectTrans.Wounds_Trans_Dmg_Inc_Rate:(t.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||t.findTransType(database.BattleEffectTrans.Not_Resist_Wound))&&(calc_attk+=calc_attk*one_effect.onetime_effect.stat_trans_value/100)}if(0!=one_effect.element_type)if(one_effect.element_type==t.getElementType())calc_attk+=calc_attk*(one_effect.element_type_value/100);else if(one_effect.element_type%ELEMENT_TYPE_FIRE_DEFAULT_ATTK_RATE+1==t.getElementType()&&one_effect.element_type!=ELEMENT_TYPE_NONE&&one_effect.element_type>=ELEMENT_TYPE_FIRE_DEFAULT_ATTK_RATE&&one_effect.element_type<=ELEMENT_TYPE_DARK_DEFAULT_ATTK_RATE){calc_attk+=this.getAttackPoint()*(one_effect.element_type_value/100)}one_effect=null}buf_one_effects=null;var dur_list=[];this.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_None,dur_list);var target_dur_list=[];t.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_None,target_dur_list);for(var check_send_damage_inc_rate_angry_rabbit=!1,check_stop_skill_cooltime_chain_rabbit=!1,inc_rate=0,dur_idx=0;dur_idx<dur_list.length;dur_idx++){(dur=$.extend({},dur_list[dur_idx])).trans_type==database.BattleEffectTrans.Send_Damage_Inc_Rate_Angry_Rabbit&&(check_send_damage_inc_rate_angry_rabbit=!0,inc_rate=dur.value),dur=null}for(target_dur_idx=0;target_dur_idx<target_dur_list.length;target_dur_idx++){var target_dur=$.extend({},target_dur_list[target_dur_idx]);target_dur.trans_type==database.BattleEffectTrans.Stop_Skill_Cooldown_chain_rabbit&&(check_stop_skill_cooltime_chain_rabbit=!0),target_dur=null}check_send_damage_inc_rate_angry_rabbit&&check_stop_skill_cooltime_chain_rabbit&&(calc_attk+=calc_attk*inc_rate/100),target_dur_list=dur_list=null;var is_element_trans=!1,is_ignore_guard_rate=!1;for(i3=0;i3<this.m_battle_general.active_skill[i].onetime_effects.length;i3++){if((one=this.m_battle_general.active_skill[i].onetime_effects[i3]).element_type==t.getElementType())calc_attk+=calc_attk*(one.element_type_value/100);else if(one.element_type%6+1==t.getElementType()&&0!=one.element_type&&6<=one.element_type&&10<=one.element_type){calc_attk+=this.getAttackPoint()*(one.element_type_value/100)}if(one.element_trans_type!=database.BattleEffectTrans.None&&(is_element_trans=t.findTransType(one.element_trans_type))&&(calc_attk+=calc_attk*(one.element_value/100)),one.stat_trans==database.BattleEffectTrans.All_Trans_Dmg_Inc_Rate&&(t.findTransType(database.BattleEffectTrans.Stun)||t.findTransType(database.BattleEffectTrans.Freeze)||t.findTransType(database.BattleEffectTrans.Poison)||t.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||t.findTransType(database.BattleEffectTrans.Damage_Reduce)||t.findTransType(database.BattleEffectTrans.Silence)||t.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||t.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||t.findTransType(database.BattleEffectTrans.Electric_Shork)||t.findTransType(database.BattleEffectTrans.Bleeding_Woounds)||t.findTransType(database.BattleEffectTrans.Blind_Darkness)||t.findTransType(database.BattleEffectTrans.Not_Resist_Stun)||t.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)||t.findTransType(database.BattleEffectTrans.Not_Resist_Poison)||t.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce)||t.findTransType(database.BattleEffectTrans.Not_Resist_Silence)||t.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate)||t.findTransType(database.BattleEffectTrans.Not_Resist_Wound)||t.findTransType(database.BattleEffectTrans.Not_Resist_Blind))&&(calc_attk+=calc_attk*one.onetime_effect.stat_trans_value/100),one.stat_trans==database.BattleEffectTrans.Guard_Ignor_Attack?is_ignore_guard_rate=!0:one.stat_trans==database.BattleEffectTrans.Burning_Trans_Dmg_Inc_Rate?(t.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||t.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate))&&(calc_attk+=calc_attk*(one.onetime_effect.stat_trans_value/100)):one.stat_trans==database.BattleEffectTrans.Elec_Shork_Trans_Dmg_Inc_Rate?(t.findTransType(database.BattleEffectTrans.Damage_Reduce)||t.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce))&&(calc_attk+=calc_attk*(one.onetime_effect.stat_trans_value/100)):one.stat_trans==database.BattleEffectTrans.Stun_Trans_Dmg_Inc_Rate?(t.findTransType(database.BattleEffectTrans.Stun)||t.findTransType(database.BattleEffectTrans.Not_Resist_Stun))&&(calc_attk+=calc_attk*(one.onetime_effect.stat_trans_value/100)):one.stat_trans==database.BattleEffectTrans.Poison_Trans_Dmg_Inc_Rate?(t.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||t.findTransType(database.BattleEffectTrans.Not_Resist_Poison))&&(calc_attk+=calc_attk*(one.onetime_effect.stat_trans_value/100)):one.stat_trans==database.BattleEffectTrans.Silence_Trans_Dmg_Inc_Rate?(t.findTransType(database.BattleEffectTrans.Silence)||t.findTransType(database.BattleEffectTrans.Not_Resist_Silence))&&(calc_attk+=calc_attk*(one.onetime_effect.stat_trans_value/100)):one.stat_trans==database.BattleEffectTrans.Blind_Darkness_Trans_Dmg_Inc_Rate?(t.findTransType(database.BattleEffectTrans.Blind_Darkness)||t.findTransType(database.BattleEffectTrans.Not_Resist_Blind))&&(calc_attk+=calc_attk*(one.onetime_effect.stat_trans_value/100)):one.stat_trans==database.BattleEffectTrans.Wounds_Trans_Dmg_Inc_Rate&&(t.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||t.findTransType(database.BattleEffectTrans.Not_Resist_Wound))&&(calc_attk+=calc_attk*(one.onetime_effect.stat_trans_value/100)),one.force_type==t.getArmServiceType()&&(calc_attk+=calc_attk*(one.force_type_value/100)),one.fight_type==t.getFightType()&&(calc_attk+=calc_attk*(one.fight_type_value/100)),0!=one.hp_check_type){hp=t.getCurrentLifePoint()/t.getMaxHealthPoint()*100;1==one.hp_check_type?hp>=one.hp_check_value&&(calc_attk+=calc_attk*(one.hp_increase_value/100)):2==one.hp_check_type&&hp<=one.hp_check_value&&(calc_attk+=calc_attk*(one.hp_increase_value/100))}}var equip_stat_trans_onetimes=[];this.m_equipments.getEquipmentOnetimeEffect(this.m_battle_general,database.BattleInvokeType.BattleInvokeType_Always,equip_stat_trans_onetimes);for(var equip_ones_idx=0;equip_ones_idx<equip_stat_trans_onetimes.length;equip_ones_idx++){var equip_ones=$.extend({},equip_stat_trans_onetimes[equip_ones_idx]);if(equip_ones.stat_trans==database.BattleEffectTrans.All_Trans_Type_Dmg_Inc_Rate&&(t.findTransType(database.BattleEffectTrans.Stun)||t.findTransType(database.BattleEffectTrans.Silence)||t.findTransType(database.BattleEffectTrans.Poison)||t.findTransType(database.BattleEffectTrans.Blind_Darkness)||t.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||t.findTransType(database.BattleEffectTrans.Damage_Reduce)||t.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||t.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||t.findTransType(database.BattleEffectTrans.Not_Resist_Stun)||t.findTransType(database.BattleEffectTrans.Not_Resist_Poison)||t.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce)||t.findTransType(database.BattleEffectTrans.Not_Resist_Silence)||t.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate)||t.findTransType(database.BattleEffectTrans.Not_Resist_Wound)||t.findTransType(database.BattleEffectTrans.Not_Resist_Blind))){var min_value=equip_ones.value,max_value=Math.max(equip_ones.value,equip_ones.max_value);calc_attk+=calc_attk*(effect_value=Math.random()*(max_value-min_value)+min_value)/100}equip_ones=null}var equip_opt_inc_stat_trans_inc_duration_time=0,equip_opt_inc_stat_trans_inc_dec_stat_value=0,equip_onetimes=[];this.m_equipments.getEquipmentOnetimeEffect(this.m_battle_general,database.BattleInvokeType.BattleInvokeType_Skill_Attck,equip_onetimes);for(var equip_idx=0;equip_idx<equip_onetimes.length;equip_idx++){if((o=equip_onetimes[equip_idx]).stat_trans==database.BattleEffectTrans.All_Effect_Trans_Types&&o.output_ability_type==database.BattleOutputAbility.Trans_Duration){min_value=o.value,max_value=Math.max(o.value,o.max_value);equip_opt_inc_stat_trans_inc_duration_time+=effect_value=Math.random()*(max_value-min_value)+min_value}if(o.stat_trans==database.BattleEffectTrans.Enermy_General_Trans_Duration_Time_Dec&&o.output_ability_type==database.BattleOutputAbility.Trans_Duration_Inc){min_value=o.value,max_value=Math.max(o.value,o.max_value);equip_opt_inc_stat_trans_inc_dec_stat_value+=effect_value=Math.random()*(max_value-min_value)+min_value}o=null}var check_attack_favorable_element=!1;dur_list=[];this.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_All_Attacks,dur_list);for(dur_idx=0;dur_idx<dur_list.length;dur_idx++){(dur=$.extend({},dur_list[dur_idx])).trans_type==database.BattleEffectTrans.Attack_Favorable_Element&&(check_attack_favorable_element=!0)}for(var is_last_bloodsucking=!1,bloodsucking_one_time_effect=new database.BattleOneTimeEffect,k=0;k<this.m_battle_general.active_skill[i].skill_action.damages.length;k++){var dmg=this.m_battle_general.active_skill[i].skill_action.damages[k],damage=new Damage;if(damage.onetime_effects=[],damage.durability_effects=[],damage.origin_damage=origin_attk,damage.shared_point=dmg,damage.gnrl_id=gnrl_id,damage.damage_type=type,damage.hit_point=2,damage.damage=calc_attk,damage.is_element_trans_buf=is_element_trans,damage.skill_charge_count=this.m_battle_general.active_skill[i].skill_charge_count,damage.is_ignore_guard_rate=is_ignore_guard_rate,0==k){damage.is_first_hit=!0;for(var sum_evasion=0,dur_evasion_idx=0;dur_evasion_idx<t.m_durability_effects.length;dur_evasion_idx++){if(parseInt(100*Math.random()+1)<t.m_durability_effects[dur_evasion_idx].percent&&t.m_durability_effects[dur_evasion_idx].trans_type==database.BattleEffectTrans.Onetime_Effect_Call_Exec)for(var one_evasion_idx=0;one_evasion_idx<t.m_durability_effects[dur_evasion_idx].end_effects.length;one_evasion_idx++)t.m_durability_effects[dur_evasion_idx].end_effects[one_evasion_idx].stat_trans==database.BattleEffectTrans.Attack_evasion&&(sum_evasion+=t.m_durability_effects[dur_evasion_idx].end_effects[one_evasion_idx].rate)}var trans_passive_evasion=[];t.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_All_Hitted,trans_passive_evasion),t.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Skill_Hitted,trans_passive_evasion);for(one_evasion_idx=0;one_evasion_idx<trans_passive_evasion.length;one_evasion_idx++)trans_passive_evasion[one_evasion_idx].stat_trans==database.BattleEffectTrans.Attack_evasion&&(sum_evasion+=trans_passive_evasion[one_evasion_idx].rate);var t_gnrl=t.getGeneral(),reader_one_evasion=[];t.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_Skill_Hitted,t_gnrl,reader_one_evasion),t.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_All_Hitted,t_gnrl,reader_one_evasion);for(one_evasion_idx=0;one_evasion_idx<reader_one_evasion.length;one_evasion_idx++)reader_one_evasion[one_evasion_idx].stat_trans==database.BattleEffectTrans.Attack_evasion&&(sum_evasion+=reader_one_evasion[one_evasion_idx].rate);parseInt(1e4*Math.random()+1)<sum_evasion&&(isevasion=!0)}if(k==this.m_battle_general.active_skill[i].skill_action.damages.length-1&&(damage.is_last_hit=!0),damage.is_evasion=isevasion,element_advance_attk_buf_rate<0?damage.element_adv_type=-1:0<element_advance_attk_buf_rate&&(damage.element_adv_type=1),check_attack_favorable_element)switch(t.getElementType()){case ELEMENT_TYPE_FIRE:damage.element_type=ELEMENT_TYPE_WATER;break;case ELEMENT_TYPE_WATER:damage.element_type=ELEMENT_TYPE_WIND;break;case ELEMENT_TYPE_WIND:damage.element_type=ELEMENT_TYPE_FIRE;break;case ELEMENT_TYPE_LIGHT:damage.element_type=ELEMENT_TYPE_DARK;break;case ELEMENT_TYPE_DARK:damage.element_type=ELEMENT_TYPE_LIGHT}else damage.element_type=this.getElementType();var skill_attk_blood_suck_rate=0,blood_oe_list=[];this.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_Skill_Attck,this.m_battle_general,blood_oe_list),this.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_All_Attacks,this.m_battle_general,blood_oe_list);for(var idx_t=0;idx_t<blood_oe_list.length;idx_t++){var oe=$.extend({},blood_oe_list[idx_t]);oe.onetime_effect.input_ability!=database.BattleInputAbility.Attack&&oe.onetime_effect.input_ability!=database.BattleInputAbility.Damage||oe.onetime_effect.output_ability!=database.BattleOutputAbility.Life||(skill_attk_blood_suck_rate+=oe.onetime_effect.value)}var is_exist_blood_suck=!1;if(damage.attack_type=Hit_Attack_Type.SKILL,k==this.m_battle_general.active_skill[i].skill_action.damages.length-1){if(i2==this.m_skill_target_enemys.length-1&&0<this.m_battle_general.active_sub_skill.length){for(var sub_skill_idx=0;sub_skill_idx<this.m_battle_general.active_sub_skill.length;sub_skill_idx++)this.m_battle_general.active_sub_skill[sub_skill_idx].is_used=!1;damage.is_sub_skill=!0}for(var k2=0;k2<this.m_battle_general.active_skill[i].durability_effects.length;k2++){for(var dur=$.extend({},this.m_battle_general.active_skill[i].durability_effects[k2]),k3=0;k3<this.m_battle_general.active_skill[i].durability_effects[k2].end_effects.length;k3++)this.m_battle_general.active_skill[i].durability_effects[k2].end_effects[k3].damage=damage.origin_damage;if(0<equip_opt_inc_stat_trans_inc_duration_time&&(this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Stun||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Silence||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Poison||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Freeze||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.After_Recv_Damage_Inc_Rate||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Damage_Reduce||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.New_Poison_Dmg_Rate||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Wound_Obstruct_Heal||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Blind_Darkness||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Not_Resist_Stun||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Not_Resist_Silence||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Not_Resist_Poison||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Not_Resist_Freeze||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Not_Resist_Damage_Reduce||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Not_Resist_Wound||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Not_Resist_Blind||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.All_Random_Trans||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Random_Trans_Slience_Bilnd_Poison_Time_15_15_15_Sec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Random_Trans_Stun_Silence_Time_15_15_Sec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Random_Trans_Stun_Silence_Poison_Time_10_10_18_Sec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Random_Trans_Stun_Silence_Poison_Time_13_13_18_Sec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Random_Trans_Stun_Burn_Time_16_20_Sec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Random_Trans_Stun_Burn_Time_15_15_Sec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Random_Trans_Elec_Silence_Time_12_12_Sec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Random_Trans_Elec_Silence_Time_15_15_Sec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Random_Trans_Stun_Freeze_Silence_Time_10_10_10_Sec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Random_Trans_Stun_Freeze_Silence_Time_15_15_15_Sec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Random_Trans_Silence_Blind_Time_10_10_Sec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Random_Trans_Wound_Blind_Time_15_15_Sec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Random_Trans_Wound_Blind_Time_18_18_Sec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Random_Trans_Stun_Silence_Time_10_10_Sec)){var inc_dur=dur.duration*equip_opt_inc_stat_trans_inc_duration_time/100,duration=dur.duration+inc_dur;dur.duration=duration}if(this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Stun&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Silence&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Poison&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Freeze&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.After_Recv_Damage_Inc_Rate&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Damage_Reduce&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.New_Poison_Dmg_Rate&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Wound_Obstruct_Heal&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Blind_Darkness&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Not_Resist_Stun&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Not_Resist_Silence&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Not_Resist_Poison&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Not_Resist_Freeze&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Not_Resist_Damage_Reduce&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Not_Resist_Wound&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Not_Resist_Blind&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.All_Random_Trans&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Random_Trans_Slience_Bilnd_Poison_Time_15_15_15_Sec&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Random_Trans_Stun_Silence_Time_15_15_Sec&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Random_Trans_Stun_Silence_Poison_Time_10_10_18_Sec&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Random_Trans_Stun_Silence_Poison_Time_13_13_18_Sec&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Random_Trans_Stun_Burn_Time_16_20_Sec&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Random_Trans_Stun_Burn_Time_15_15_Sec&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Random_Trans_Elec_Silence_Time_12_12_Sec&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Random_Trans_Elec_Silence_Time_15_15_Sec&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Random_Trans_Stun_Freeze_Silence_Time_10_10_10_Sec&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Random_Trans_Stun_Freeze_Silence_Time_15_15_15_Sec&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Random_Trans_Silence_Blind_Time_10_10_Sec&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Random_Trans_Wound_Blind_Time_15_15_Sec&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Random_Trans_Wound_Blind_Time_18_18_Sec&&this.m_battle_general.active_skill[i].durability_effects[k2].trans_type!=database.BattleEffectTrans.Random_Trans_Stun_Silence_Time_10_10_Sec||0!=inc_stat_trans_inc_duration_time&&(dur.duration+=inc_stat_trans_inc_duration_time),this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.New_Damage_Reduce_Rate||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Defence_Reduce_Rate||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Attack_Point_Abs_Dec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Defense_Reduce||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Defence_Point_Rate_Dec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Guard_Invoke_Rate_Dec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Guard_Defence_Rate_Dec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Critical_Percent_Rate_Dec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Critical_Power_Rate_Dec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Defence_Point_Rate_Dec_For_Boss||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Attack_Point_Rate_Dec_For_Boss||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Attack_Speed_Dec||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.All_Trans_Attack_Speed_Rate_Dec_Rate||this.m_battle_general.active_skill[i].durability_effects[k2].trans_type==database.BattleEffectTrans.Boss_Attack_Speed_Dec&&this.m_battle_general.is_zoom){inc_dur=dur.duration*equip_opt_inc_stat_trans_inc_dec_stat_value/100,duration=dur.duration+inc_dur;dur.duration=duration}if(dur.trans_type==database.BattleEffectTrans.Random_Stat_Attack_50_To_100)dur.value=(0!=random_attack_50_to_100&&(random_attack_50_to_100=parseInt(50*Math.random()+50)),random_attack_50_to_100);else if(dur.trans_type==database.BattleEffectTrans.Random_Stat_Defence_50_To_100)dur.value=0;else if(dur.trans_type==database.BattleEffectTrans.Random_Stat_Critical_Percent_50_To_100)dur.value=0;else if(dur.trans_type==database.BattleEffectTrans.Glitter_Beach_Stack_Attaker_Light_Dmg_Inc){var stack=0;1<this.m_battle_general.general.gnrl_class&&(stack=this.m_battle_general.one_start_stack),dur.value=dur.durability.value*stack}damage.durability_effects.push($.extend({},dur))}var equip_dur_effects=[];this.getEquipmentDurabilityEffect(t.getGeneral(),database.BattleInvokeType.BattleInvokeType_Skill_Attck,equip_dur_effects),this.getEquipmentDurabilityEffect(t.getGeneral(),database.BattleInvokeType.BattleInvokeType_All_Attacks,equip_dur_effects);for(idx=0;idx<equip_dur_effects.length;idx++){for(var d=equip_dur_effects[idx],jdx=0;jdx<d.end_effects.length;jdx++){(o=d.end_effects[jdx]).damage=damage.origin_damage}damage.durability_effects.push($.extend({},equip_dur_effects[idx]))}for(k2=0;k2<this.m_battle_general.active_skill[i].onetime_effects.length;k2++){(o=$.extend({},this.m_battle_general.active_skill[i].onetime_effects[k2])).our_enemy==database.BattleSelfOther.Other?o.input_ability_type==database.BattleInputAbility.Good_Trans?damage.onetime_effects.push(o):o.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Inc||o.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Rate_Inc?damage.onetime_effects.push(o):o.input_ability_type==database.BattleInputAbility.Fixed_Value&&o.output_ability_type==database.BattleOutputAbility.Trans_Duration?damage.onetime_effects.push(o):o.input_ability_type==database.BattleInputAbility.Max_Life?damage.onetime_effects.push(o):o.input_ability_type==database.BattleInputAbility.Life?damage.onetime_effects.push(o):o.input_ability_type==database.BattleInputAbility.Fixed_Value&&o.output_ability_type==database.BattleOutputAbility.Damage?damage.onetime_effects.push(o):o.input_ability_type==database.BattleInputAbility.Caster_Life&&o.output_ability_type==database.BattleOutputAbility.Damage&&damage.onetime_effects.push_back(o):o.input_ability_type==database.BattleInputAbility.Good_Trans&&damage.onetime_effects.push(o)}for(k2=0;k2<this.m_battle_general.trans_passive_skill.length;k2++)if(this.m_battle_general.trans_passive_skill[k2].trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Skill_Attck||this.m_battle_general.trans_passive_skill[k2].trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_All_Attacks)for(k3=0;k3<this.m_battle_general.trans_passive_skill[k2].durability_effects.length;k3++){for(var k4=0;k4<this.m_battle_general.trans_passive_skill[k2].durability_effects[k3].end_effects.length;k4++)this.m_battle_general.trans_passive_skill[k2].durability_effects[k3].end_effects[k4].damage=damage.origin_damage;this.m_battle_general.trans_passive_skill[k2].durability_effects[k3].our_enemy==database.BattleSelfOther.Other&&damage.durability_effects.push($.extend({},this.m_battle_general.trans_passive_skill[k2].durability_effects[k3]))}}else if(0==k)for(k2=0;k2<this.m_battle_general.active_skill[i].onetime_effects.length;k2++){(o=$.extend({},this.m_battle_general.active_skill[i].onetime_effects[k2])).our_enemy==database.BattleSelfOther.Self&&o.input_ability_type==database.BattleInputAbility.Life&&o.output_ability_type==database.BattleOutputAbility.Life_Down&&(o.damage=this.m_life_point*o.value/100,damage.onetime_effects.push(o))}for(k2=0;k2<this.m_battle_general.active_skill[i].onetime_effects.length;k2++){if(this.m_battle_general.active_skill[i].onetime_effects[k2].input_ability_type==database.BattleInputAbility.Damage||this.m_battle_general.active_skill[i].onetime_effects[k2].input_ability_type==database.BattleInputAbility.Attack)if(this.m_battle_general.active_skill[i].onetime_effects[k2].output_ability_type==database.BattleOutputAbility.Life&&0==this.m_battle_general.active_skill[i].onetime_effects[k2].sub_value)(one=this.m_battle_general.active_skill[i].onetime_effects[k2]).value+=skill_attk_blood_suck_rate,damage.onetime_effects.push_back(one),is_exist_blood_suck=!0;else this.m_battle_general.active_skill[i].onetime_effects[k2].output_ability_type==database.BattleOutputAbility.Life&&1==this.m_battle_general.active_skill[i].onetime_effects[k2].sub_value&&(bloodsucking_one_time_effect=this.m_battle_general.active_skill[i].onetime_effects[k2],is_last_bloodsucking=!0)}for(k2=0;k2<this.m_battle_general.trans_passive_skill.length;k2++){if(this.m_battle_general.trans_passive_skill[k2].trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Skill_Attck||this.m_battle_general.trans_passive_skill[k2].trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_All_Attacks)for(k3=0;k3<this.m_battle_general.trans_passive_skill[k2].onetime_effects.length;k3++)if((this.m_battle_general.trans_passive_skill[k2].onetime_effects[k3].input_ability_type==database.BattleInputAbility.Damage||this.m_battle_general.trans_passive_skill[k2].onetime_effects[k3].input_ability_type==database.BattleInputAbility.Attack)&&this.m_battle_general.trans_passive_skill[k2].onetime_effects[k3].output_ability_type==database.BattleOutputAbility.Life){if((o=$.extend({},this.m_battle_general.trans_passive_skill[k2].onetime_effects[k3])).stat_trans==database.BattleEffectTrans.None)(one=$.extend({},o)).value+=skill_attk_blood_suck_rate,is_exist_blood_suck=!0,damage.onetime_effects.push_back(one),one=null;else if(t.findTransType(o.stat_trans))(one=$.extend({},o)).value+=skill_attk_blood_suck_rate,is_exist_blood_suck=!0,damage.onetime_effects.push_back(one),one=null;o=null}if(this.m_battle_general.trans_passive_skill[k2].trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate)if(this.m_life_point/this.getMaxHealthPoint()<=.5)for(k3=0;k3<this.m_battle_general.trans_passive_skill[k2].onetime_effects.length;k3++){if((o=$.extend({},this.m_battle_general.trans_passive_skill[k2].onetime_effects[k3])).our_enemy==database.BattleSelfOther.Self&&(o.input_ability_type==database.BattleInputAbility.Damage||o.input_ability_type==database.BattleInputAbility.Attack)&&o.output_ability_type==database.BattleOutputAbility.Life)if(o.stat_trans==database.BattleEffectTrans.None)(one=$.extend({},o)).value+=skill_attk_blood_suck_rate,is_exist_blood_suck=!0,damage.onetime_effects.push_back(one),one=null;else if(t.findTransType(o.stat_trans))(one=$.extend({},o)).value+=skill_attk_blood_suck_rate,is_exist_blood_suck=!0,damage.onetime_effects.push_back(one),one=null;o=null}if(this.m_battle_general.trans_passive_skill[k2].trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate)if(this.m_life_point/this.getMaxHealthPoint()<=.75)for(k3=0;k3<this.m_battle_general.trans_passive_skill[k2].onetime_effects.length;k3++){var o,one;if((o=$.extend({},this.m_battle_general.trans_passive_skill[k2].onetime_effects[k3])).our_enemy==database.BattleSelfOther.Self&&(o.input_ability_type==database.BattleInputAbility.Damage||o.input_ability_type==database.BattleInputAbility.Attack)&&o.output_ability_type==database.BattleOutputAbility.Life)if(o.stat_trans==database.BattleEffectTrans.None)(one=$.extend({},o)).value+=skill_attk_blood_suck_rate,is_exist_blood_suck=!0,damage.onetime_effects.push_back(one),one=null;else if(t.findTransType(o.stat_trans))(one=$.extend({},o)).value+=skill_attk_blood_suck_rate,is_exist_blood_suck=!0,damage.onetime_effects.push_back(one),one=null;o=null}this.m_battle_general.trans_passive_skill[k2].trans_passive.invoke_type2,database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate,this.m_battle_general.trans_passive_skill[k2].trans_passive.invoke_type2,database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate}if(!is_exist_blood_suck&&0<skill_attk_blood_suck_rate){var blood_suck_ot={};blood_suck_ot.our_enemy=database.BattleSelfOther.Self,blood_suck_ot.input_ability_type=database.BattleInputAbility.Damage,blood_suck_ot.value=skill_attk_blood_suck_rate,blood_suck_ot.output_ability_type=database.BattleOutputAbility.Life,blood_suck_ot.damage=damage.damage,blood_suck_ot.rate=1e4,blood_suck_ot.max_value=skill_attk_blood_suck_rate,damage.onetime_effects.push_back(blood_suck_ot)}damage_list.push(damage)}if(is_last_bloodsucking&&0<damage_list.length){var blood_damage=$.extend(!0,{},damage_list[damage_list.length-1]);blood_damage.attack_type=Hit_Attack_Type.BLOOD_SUCKING,blood_damage.onetime_effects.push(bloodsucking_one_time_effect),damage_list.push(blood_damage)}var a_map_damage=[];a_map_damage[0]=[gnrl_id,position],this.m_map_skill_damage.insert(a_map_damage[0],damage_list)}}}this.m_battle_general.active_skill[i].is_cooltime=!0;var dec_cooltime=this.getSkillCoolTimeDecBuf(this.m_battle_general.active_skill[i]);this.m_battle_general.active_skill[i].cooltime=this.m_battle_general.active_skill[i].skill.cool_time-dec_cooltime,this.m_current_skill_charge_count=this.m_battle_general.active_skill[i].skill_charge_count,this.m_battle_general.active_skill[i].skill_charge_count=INIT_SKILL_CHARGE_BUFF;var path=RES_CDN_SOUND+SND_TYPE+"sound/SE_battle_skill.mp3";AudioEngine.getInstance().playEffect(path),null!=this._addSkillMessage&&(this._addSkillMessage_LR==BattleMessageDirection.Left?this._addSkillMessage.addSkillMessageLeftTeam(this.m_battle_general.active_skill[i].skill):this._addSkillMessage.addSkillMessageRightTeam(this.m_battle_general.active_skill[i].skill)),null!=this._req_team_cooltime&&this._req_team_cooltime.requestTeamCoolTime(this),this.m_normal_attack_count=this.m_battle_general.normal_hit_count,this.playSkillEffectSound(),this.setGeneralState(BattleGeneral_GeneralState.Skill),this.m_team_type==BattleGeneral_TeamType.Left?this.playAction(ActionType.Skill):this.playSkillAction(skillIndex);break}skillIndex++}for(var dur_base_eff=0;dur_base_eff<this.m_durability_effects.length;dur_base_eff++)if(this.m_durability_effects[dur_base_eff].trans_type==database.BattleEffectTrans.Onetime_Effect_Call_Exec)for(var dur_base_eff_one=0;dur_base_eff_one<this.m_durability_effects[dur_base_eff].end_effects.length;dur_base_eff_one++)if(this.m_durability_effects[dur_base_eff].end_effects[dur_base_eff_one].stat_trans==database.BattleEffectTrans.Random_Damage_Inc){min_value=this.m_durability_effects[dur_base_eff].end_effects[dur_base_eff_one].onetime_effect.value,max_value=Math.max(this.m_durability_effects[dur_base_eff].end_effects[dur_base_eff_one].onetime_effect.value,this.m_durability_effects[dur_base_eff].end_effects[dur_base_eff_one].onetime_effect.max_value),effect_value=Math.random()*(max_value-min_value)+min_value;this.m_durability_effects[dur_base_eff].end_effects[dur_base_eff_one].random_damage_value=effect_value}return this.m_game_type==db.BattleGameType.GreatWallDungeon&&this.m_team_type==BattleGeneral_TeamType.Left&&(this.m_battle_general.remain_skill_count--,this.m_use_greatwall_rebon_skil=!0,this.m_battle_general.remain_skill_count<0&&(this.m_battle_general.remain_skill_count=0,this.m_use_greatwall_rebon_skil=!1),0==this.m_battle_general.remain_skill_count&&null!=this._skillEnable&&this._skillEnable.skillEnable(!1)),!0},playSkillAction:function(index){if(0==this.gen_ver||2==this.gen_ver)0==this.m_battle_general.active_skill[index].skill.enemy_skill_type?this.playAction(ActionType.Skill):this.playAction(ActionType.Skill_Enemy);else switch(index){case 0:return void this.playAction(ActionType.Skill_1);case 1:return void this.playAction(ActionType.Skill_2);case 2:return void this.playAction(ActionType.Skill_3)}},getSkillChargeBuf:function(skill_charge_attribute_type,skill_charge_effect_type,charge_count){var point=0;if(charge_count<2||this.m_team_type==BattleGeneral_TeamType.Right)return point;var m=MasterTable.getInstance();if(null!=this.m_skill_charge_buff_list){0==this.m_skill_charge_buff_list.length&&(this.m_skill_charge_buff_list=m.get_SkillChargeTable(this.m_battle_general.general.gnrl_id));for(var i=0;i<this.m_skill_charge_buff_list.length;i++)this.m_skill_charge_buff_list[i].skill_charge_attribute_type==skill_charge_attribute_type&&this.m_skill_charge_buff_list[i].skill_charge_effect_type==skill_charge_effect_type&&this.m_skill_charge_buff_list[i].skill_charge_count==charge_count&&(point+=this.m_skill_charge_buff_list[i].ability_value)}return point},getSkillCoolTimeDecBuf:function(skill){var point=0;return point+=this.m_my_team.getLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Skill_Cooltime_Dec,this.m_battle_general),point+=this.m_my_team.getLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Skill_Cooltime_Dec_Rate,this.m_battle_general)*skill.skill.cool_time/100,point+=this.m_my_team.getSpecialLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Skill_Cooltime_Dec,this.m_battle_general),point+=this.m_my_team.getSpecialLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Skill_Cooltime_Dec_Rate,this.m_battle_general)*skill.skill.cool_time/100,point+=this.m_my_team.getPassiveSkillBufPoint(database.BattleChainStatType.ChainStatType_Skill_Cooltime_Dec,this.m_battle_general),point+=this.m_my_team.getPassiveSkillBufPoint(database.BattleChainStatType.ChainStatType_Skill_Cooltime_Dec_Rate,this.m_battle_general)*skill.skill.cool_time/100,point+=this.m_my_team.getTargetTeamPassiveSkillDebufPoint(database.BattleChainStatType.ChainStatType_Skill_Cooltime_Dec),point+=this.m_my_team.getTargetTeamPassiveSkillDebufPoint(database.BattleChainStatType.ChainStatType_Skill_Cooltime_Dec_Rate)*skill.skill.cool_time/100,point+=this.m_my_team.getFriendLeaderSkillBuf(database.BattleChainStatType.ChainStatType_Skill_Cooltime_Dec,this.m_battle_general),point+=this.getEquipmentOptionStatBuff(database.BattleChainStatType.ChainStatType_Skill_Cooltime_Dec_Rate)*skill.skill.cool_time/1e4},stepSkillReady:function(dt){if(this.addDebugGeneral("stepSkillReady"),!this.IsAlive())return this.setGeneralState(BattleGeneral_GeneralState.Idle),!1;if(this.findTransType(database.BattleEffectTrans.Motion_Singing,this.IsFriend()))return this.setGeneralState(BattleGeneral_GeneralState.Idle2),!1;for(var isEnableSkill=!1,self_other=database.BattleSelfOther.Self,skill_action=(database.BattleSelfOther.Other,new database.BattleActionImpl),active_skill=new database.BattleSkill,i=0;i<this.m_battle_general.active_skill.length;i++){if(!(this.m_battle_general.active_skill[i].skill_charge_count!=INIT_SKILL_CHARGE_BUFF&&!this.m_battle_general.active_skill[i].is_teamcooltime))this.m_battle_general.active_skill[i].is_prepared=!1;else if(this.m_battle_general.active_skill[i].is_prepared){if(!this.is_silence()){isEnableSkill=!0,skill_action=this.m_battle_general.active_skill[i].skill_action,self_other=this.m_battle_general.active_skill[i].skill_action.our_enemy,this.m_battle_general.active_skill[i].skill_action.self_other,active_skill=this.m_battle_general.active_skill[i];break}this.m_battle_general.active_skill[i].is_prepared=!1}}if(this.m_my_team.getBattleState()!=BattleState.GamePlaying&&(isEnableSkill=!1,this.addDebugGeneral("stepSkillReady Non GamePlaying")),!isEnableSkill)return this.setGeneralState(BattleGeneral_GeneralState.Idle),!1;if(self_other==database.BattleSelfOther.Self){if(!this.stepSkillReadyOurTeam(skill_action,active_skill))return!1}else if(self_other==database.BattleSelfOther.Other&&!this.stepSkillReadyEnemyTeam(skill_action,active_skill))return!1;return!0},stepIdleRevision:function(dt){return!0},stepDash:function(dt){return this.m_my_team.getBattleState()!=BattleState.GamePlaying?(this.addDebugGeneral("stepDash Non GamePlaying"),!1):(this.m_dash_delta+=dt,2<this.m_dash_delta&&(this.m_dash_delta=0,this.setGeneralState(BattleGeneral_GeneralState.Idle)),!0)},stepAway:function(dt){return!!this.IsAlive()||(this.setGeneralState(BattleGeneral_GeneralState.Idle),!1)},stepRun:function(dt){return!!this.IsAlive()||(this.setGeneralState(BattleGeneral_GeneralState.Idle),!1)},stepFind:function(dt){if(this.IsSandbag()||this.m_battle_general.is_cutin_npc)return!1;if(this.m_my_team.getBattleState()!=BattleState.GamePlaying)return this.addDebugGeneral("stepFind Non GamePlaying"),!1;if(this.findTransType(database.BattleEffectTrans.Motion_Singing))return this.setGeneralState(BattleGeneral_GeneralState.Idle2),this.playAction(ActionType.Idle2),!1;for(var state=BattleGeneral_GeneralState.None,action_type=ActionType.Basic,priority_position=this.m_battle_general.attack_action.priority_position,idx=0;idx<this.m_durability_effects.length;idx++)this.m_durability_effects[idx].trans_type==database.BattleEffectTrans.All_Attack_Change_Target_For_Boss&&(priority_position=7);return!this.findEnemy(state,action_type,this.m_battle_general.attack_action.target_count,priority_position,!1)||(state=this.m_retrun_state,action_type=this.m_return_type,this.setGeneralState(state),this.playAction(action_type),!1)},stepAttack:function(dt){if(this.m_attack_delta_time-=dt,this.m_attack_delta_time<0){if(this.m_focus_state==FOCUS_STATE.UNFOCUS)return!0;this.IsAnimationPause()&&!this.m_hitted_duration&&this.generalResume()}return!0},stepSkill:function(dt){return!0},stepStun:function(dt){return this.IsAlive()||this.setGeneralState(BattleGeneral_GeneralState.Idle),!0},stepSleep:function(dt){return this.IsAlive()||this.setGeneralState(BattleGeneral_GeneralState.Idle),!0},stepFreeze:function(dt){return!0},stepWait:function(dt){var _state=this.m_my_team.getBattleState();return!!(_state!=BattleState.GamePlaying&&_state!=BattleState.GameWait_Trasition&&_state!=BattleState.GameBackCourt&&_state!=BattleState.GameRaidFinish||this.IsAlive())||(this.setGeneralState(BattleGeneral_GeneralState.Idle),!1)},stepReturn:function(dt){return!0},stepDeathReady:function(dt){return this.addDebugGeneral("stepDeathReady"),this.m_death_ready_delta_time+=dt,1<this.m_death_ready_delta_time&&!this.IsAlive()&&(this.m_death_ready_delta_time=0,this.setGeneralState(BattleGeneral_GeneralState.Death)),!0},stepIdle2:function(dt){return this.addDebugGeneral("stepIdle2"),this.findTransType(database.BattleEffectTrans.Motion_Singing,this.IsFriend())||(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Idle2_end)),!0},stepDeath:function(dt){if(this.addDebugGeneral("stepDeath"),this.m_info_bar.setVisible(!1),!this.deathAnimation())return!1;this.IsAnimationPause()&&this.generalResume(),null!=this._skillEnable&&this._skillEnable.skillEnable(!1),this.removeAllEffects(),this.removeAllTransCommonFxNode(),this.removeAllDurabilityEffects();var gt=BattleContext._getInstance().getGameType();(gt==db.BattleGameType.Mission||gt==db.BattleGameType.WeeklyDungeon||this.m_my_team.IsCutinStage())&&(this.m_team_type==BattleGeneral_TeamType.Right&&(this.m_is_drop_item_check||(this.m_is_drop_item_check=!0,null!=this._cbEventListenerFieldMng&&(((evt=new battle.Event).dataValue1=this)._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_DROP_ITEM,evt),evt=null))));if(this.m_team_type==BattleGeneral_TeamType.Left){for(var evt,is_prepared=this.m_is_ex_reordering=!1,idx=0;idx<this.m_battle_general.active_skill.length;idx++)is_prepared=this.m_battle_general.active_skill[idx].is_prepared;if(is_prepared)if(1==this.m_battle_general.general.gnrl_type)if(null!=_cbEventListenerUIMng)((evt=new battle.Event).dataValue1=this)._cbEventListenerUIMng.EventListenerFromGeneral(EventCode.EVT_UI_MNG_SKILL_END,evt)}return this.m_battle_general.hit_count_wanko=0,this.m_battle_general.stack_wanko=0,this.m_battle_general.one_start_stack=1,this.m_battle_general.zero_start_stack=0,482==this.m_battle_general.general.gnrl_group&&this.actionSunglassOff(),this.setGeneralState(BattleGeneral_GeneralState.Death_Anim),!0},stepDeathAnim:function(dt){return!0},stepEnd:function(dt){return this.m_my_team.getBattleState()<BattleState.GameOver&&this.m_game_type!=db.BattleGameType.EventMussangBossDungeon&&(0<this.getOpacity()&&this.setOpacity(0),this.m_info_bar.isVisible()&&this.showInfoBar(!1)),!0},step:function(delta_time){var dt=delta_time*this.m_cur_time_scale;(AudioEngine.getInstance().IsVoicePlaying(this.m_Voice_File_Path)||(this.m_Voice_File_Path="",this.m_Voice_priority_value=9999),0==this.Is_Play_Voice_20_sec&&parseInt(this.m_Skill_DeltaTime_Not_Init)%20-1==0&&(this.Is_Play_Voice_20_sec=!0),parseInt(this.m_Skill_DeltaTime_Not_Init)%20==0&&parseInt(this.m_Skill_DeltaTime_Not_Init)-parseInt(this.m_Skill_DeltaTime_Not_Init-dt)==1&&0!=parseInt(this.m_Skill_DeltaTime_Not_Init)&&this.Is_Play_Voice_20_sec)&&(this.Is_Play_Voice_20_sec=!1,parseInt(1e4*Math.random()+1)<5e3&&this.playVoicePart(voice_npc_boss_percent_50_delay_20_sec));if(this.addDurationByTick(dt),this.addOntimeffectByTick(dt),this.m_focus_state==FOCUS_STATE.NONE&&this.calcDurabilityEffect(dt),this.calcTimerStackCheck(dt),!this.IsAlive()||this.m_focus_state!=FOCUS_STATE.UNFOCUS&&!this.m_is_general_pause){switch(this.m_hitted_duration&&(this.m_hit_duration-=dt,this.m_hit_duration<0&&(this.m_hitted_duration=!1,this.IsAlive()&&this.m_cur_state!=BattleGeneral_GeneralState.Attack&&this.m_cur_state!=BattleGeneral_GeneralState.Attack_Ready&&this.m_cur_state!=BattleGeneral_GeneralState.Skill&&this.m_cur_state!=BattleGeneral_GeneralState.Skill_Ready&&this.m_cur_state!=BattleGeneral_GeneralState.Sleep&&this.m_cur_state!=BattleGeneral_GeneralState.Freeze&&this.m_cur_state!=BattleGeneral_GeneralState.Stun&&this.playAction(ActionType.Add_Idle))),this.m_focus_state==FOCUS_STATE.NONE&&this.calcActiveSkillCooltime(dt),this.m_cur_state){case BattleGeneral_GeneralState.Idle:if(!this.stepIdle(dt))return;break;case BattleGeneral_GeneralState.Idle2:if(!this.stepIdle2(dt))return;break;case BattleGeneral_GeneralState.Idle_Revision:if(!this.stepIdleRevision(dt))return;break;case BattleGeneral_GeneralState.Run:if(!this.stepRun(dt))return;break;case BattleGeneral_GeneralState.Dash:if(!this.stepDash(dt))return;break;case BattleGeneral_GeneralState.Find:if(!this.stepFind(dt))return;break;case BattleGeneral_GeneralState.Wait:if(!this.stepWait(dt))return;break;case BattleGeneral_GeneralState.Attack_Ready:if(!this.stepAttackReady(dt))return;break;case BattleGeneral_GeneralState.Attack:if(!this.stepAttack(dt))return;break;case BattleGeneral_GeneralState.Skill_Ready:if(!this.stepSkillReady(dt))return;break;case BattleGeneral_GeneralState.Skill:if(!this.stepSkill(dt))return;break;case BattleGeneral_GeneralState.Away:if(!this.stepAway(dt))return;break;case BattleGeneral_GeneralState.Return:if(!this.stepReturn(dt))return;break;case BattleGeneral_GeneralState.Death_Ready:if(!this.stepDeathReady(dt))return;break;case BattleGeneral_GeneralState.Death:if(!this.stepDeath(dt))return;break;case BattleGeneral_GeneralState.Death_Anim:if(!this.stepDeathAnim(dt))return;break;case BattleGeneral_GeneralState.End:if(!this.stepEnd(dt))return;break;case BattleGeneral_GeneralState.Stun:if(!this.stepStun(dt))return;break;case BattleGeneral_GeneralState.Sleep:if(!this.stepSleep(dt))return;break;case BattleGeneral_GeneralState.Freeze:if(!this.stepFreeze(dt))return;break;case BattleGeneral_GeneralState.RaidTimeover:if(!this.stepStayFinish(dt))return;break;case BattleGeneral_GeneralState.MussangBossTimeOver:if(!this.stepMussnagBossFinish(dt))return}this.calcSpecialAbility(dt)}else this.m_hitted_duration&&(this.m_hit_duration-=dt,this.m_hit_duration<0&&(this.m_hitted_duration=!1,this.IsAlive()&&(this.findTransType(database.BattleEffectTrans.FeverMode,this.IsFriend())&&(479==this.m_battle_general.general.gnrl_group||504==this.m_battle_general.general.gnrl_group)?this.playAction(ActionType.Idle2):this.playAction(ActionType.Attack_Idle))))},findSelfSubSkill:function(action_impl,active_sub_skill,buf_type){var target_count=action_impl.target_count,position=this.getBattlePosition();this.m_sub_skill_targets.length=0;var alive_members=this.m_my_team.getAliveMemberCount();0==target_count?target_count=alive_members:alive_members<target_count&&(target_count=alive_members);for(var idx=0;idx<this.m_durability_effects.length;idx++){$.extend({},this.m_durability_effects[idx]).trans_type==database.BattleEffectTrans.Target_Count_Change_One&&(target_count=1)}if(0<target_count){buf_type=BuffSkillType.None;for(var i=0;i<active_sub_skill.durability_effects.length;i++){active_sub_skill.durability_effects[i].our_enemy==database.BattleSelfOther.Self&&(buf_type=BuffSkillType.Buf)}for(i=0;i<active_sub_skill.onetime_effects.length;i++){var o=active_sub_skill.onetime_effects[i];if(o.output_ability_type==database.BattleOutputAbility.Life&&0<o.value){buf_type=BuffSkillType.Heal;break}o.output_ability_type==database.BattleOutputAbility.Release?buf_type=BuffSkillType.Cure:o.output_ability_type==database.BattleOutputAbility.Cooltime&&(buf_type=BuffSkillType.Cooltime)}if(action_impl.self_other==database.BattleSelfOther.Self)this.m_sub_skill_targets.push(this);else{var team_members=this.m_my_team.getTeamMembers(),sort_data=[];for(i=0;i<team_members.size();i++){var mem=team_members[i];if(mem.IsAlive())(sd={}).is_alive=mem.IsAlive(),sd.position=mem.getBattlePosition(),sd.life_point=mem.getCurrentLifePoint(),sd.max_life_point=mem.getMaxHealthPoint(),sd.attk_point=mem.getAttackPoint(),sd.def_point=mem.getDefencePoint(),sd.gnrl_id=mem.getGeneral().general.gnrl_id,sort_data.push_back(sd)}if(buf_type==BuffSkillType.Heal){var is_include_self=!0;is_include_self=10==action_impl.priority_position?(sort_data=stable(sort_data,function(l,r){return l.life_point/l.max_life_point<r.life_point/r.max_life_point}.bind(this)),!1):11==action_impl.priority_position?(sort_data=stable(sort_data,function(l,r){var l_p=l.life_point/l.max_life_point;return r.life_point/r.max_life_point<l_p}.bind(this)),!1):(sort_data=stable(sort_data,function(l,r){var l_p=l.life_point/l.max_life_point;return r.life_point/r.max_life_point<l_p}.bind(this)),!0);for(idx=0;idx<sort_data.length;idx++){var sd=sort_data[idx],found_is=!1;for(i=0;i<team_members.length;i++){var m2=team_members[i];if(i,m2.getBattlePosition()==sd.position&&m2.IsAlive()&&m2.getGeneral().gnrl_id==sd.gnrl_id){found_is=!0;break}}if(1==found_is){var m=team_members[i];if(!is_include_self&&m==this)continue;if(m.IsAlive()&&!m.findTransType(database.BattleEffectTrans.Freeze)&&!m.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)&&(this.m_sub_skill_targets.push(m),0==--target_count))break}}}else if(buf_type==BuffSkillType.Cure){team_members=stable(team_members,function(l,r){for(var l_count=0,si=0;si<l.m_durability_effects.length;si++){l.m_durability_effects[si].our_enemy==database.BattleSelfOther.Other&&(l_count+=1)}var r_count=0;for(si=0;si<r.m_durability_effects.length;si++){r.m_durability_effects[si].our_enemy==database.BattleSelfOther.Other&&(r_count+=1)}return(l_count=1e3*l_count+5-l.m_battle_general.position)<(r_count=1e3*r_count+5-r.m_battle_general.position)}.bind(this));for(i=0;i<team_members.length;i++){if((m=team_members[i]).IsAlive()&&!m.findTransType(database.BattleEffectTrans.Freeze)&&!m.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)&&(this.m_sub_skill_targets.push(m),0==--target_count))break}}else if(buf_type==BuffSkillType.Buf){var temp_list=[],add_pos=function(list,pos){-1==list.findIndex(function(obj){return obj==pos})&&list.push_back(pos)},self_position=this.getBattlePosition();if(1==action_impl.priority_position)add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2);else if(2==action_impl.priority_position||3==action_impl.priority_position)self_position==db.BattlePosition.Body_2||self_position==db.BattlePosition.Tail_2?(add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Tail_2),add_pos(temp_list,db.BattlePosition.Tail_1)):(add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2));else if(4==action_impl.priority_position||5==action_impl.priority_position)self_position==db.BattlePosition.Body_2||self_position==db.BattlePosition.Tail_2?(add_pos(temp_list,db.BattlePosition.Tail_2),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Body_1)):(add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Body_2));else if(6==action_impl.priority_position)add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2),temp_list.shuffle();else if(8==action_impl.priority_position){sort_data=stable(sort_data,function(l,r){return l.life_point/l.max_life_point<r.life_point/r.max_life_point}.bind(this));for(var iddx=0;iddx<sort_data.length;iddx++){(sd=sort_data[iddx]).is_alive&&add_pos(temp_list,sd.position)}}else if(9==action_impl.priority_position){sort_data=stable(sort_data,function(l,r){var l_p=l.life_point/l.max_life_point;return r.life_point/r.max_life_point<l_p}.bind(this));for(iddx=0;iddx<sort_data.length;iddx++){(sd=sort_data[iddx]).is_alive&&add_pos(temp_list,sd.position)}}else if(10==action_impl.priority_position);else if(11==action_impl.priority_position);else if(17==action_impl.priority_position)add_pos(temp_list,db.BattlePosition.Head);else if(18==action_impl.priority_position)add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Body_2);else if(19==action_impl.priority_position)add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2);else if(20==action_impl.priority_position)add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Body_2);else if(21==action_impl.priority_position)add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2);else if(22==action_impl.priority_position)add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2);else if(32==action_impl.priority_position){sort_data=stable(sort_data,function(l,r){return l.attk_point<r.attk_point}.bind(this));for(var sort_data_idx=0;sort_data_idx<sort_data.length;sort_data_idx++){var general=$.extend({},sort_data.at(sort_data_idx));general.position!=position&&general.is_alive&&add_pos(temp_list,general.position),general=null}}else self_position==db.BattlePosition.Head?(add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2)):self_position==db.BattlePosition.Body_1?(add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2)):self_position==db.BattlePosition.Body_2?(add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Tail_2),add_pos(temp_list,db.BattlePosition.Tail_1)):self_position==db.BattlePosition.Tail_1?(add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2)):self_position==db.BattlePosition.Tail_2&&(add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Tail_2),add_pos(temp_list,db.BattlePosition.Tail_1));for(var iddx2=0;iddx2<temp_list.length;iddx2++){for(var found_idx=0,found_idx_is=!1,ii2=0;ii2<team_members.length;ii2++){var gnrl_mem=team_members[ii2];if(found_idx=ii2,gnrl_mem.getBattlePosition()==temp_list[iddx2]&&gnrl_mem.IsAlive()&&!gnrl_mem.findTransType(database.BattleEffectTrans.Freeze)&&!gnrl_mem.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)){found_idx_is=!0;break}}if(1==found_idx_is&&(this.m_sub_skill_targets.push(team_members[found_idx]),0==--target_count))break}}else if(buf_type==BuffSkillType.Cooltime)for(i=0;i<team_members.length;i++){if((m=team_members[i]).IsAlive()&&(this.m_sub_skill_targets.push(m),0==--target_count))break}}}return this.m_find_sub_skill_type_return=buf_type,0!=this.m_sub_skill_targets.length},findSelf:function(action_impl,active_skill){var target_count=action_impl.target_count;this.m_target_ours.length=0;var alive_members=this.m_my_team.getAliveMemberCount();0==target_count?target_count=alive_members:alive_members<target_count&&(target_count=alive_members);for(var d_idx=0;d_idx<this.m_durability_effects.length;d_idx++)this.m_durability_effects[d_idx].trans_type==database.BattleEffectTrans.Target_Count_Change_One&&(target_count=1);if(0<target_count)if(action_impl.self_other==database.BattleSelfOther.Self)this.m_target_ours.push(this);else{for(var buf_type=BuffSkillType.None,i=0;i<active_skill.durability_effects.length;i++){active_skill.durability_effects[i].our_enemy==database.BattleSelfOther.Self&&(buf_type=BuffSkillType.Buf)}for(i=0;i<active_skill.onetime_effects.length;i++){var o=active_skill.onetime_effects[i];if(o.output_ability_type==database.BattleOutputAbility.Life&&0<o.value){buf_type=BuffSkillType.Heal;break}o.output_ability_type==database.BattleOutputAbility.Release&&(buf_type=BuffSkillType.Cure)}var team_members=this.m_my_team.getTeamMembers();if(buf_type==BuffSkillType.Heal){team_members=stable(team_members,function(l,r){var l_rate=l.getCurrentLifePoint()/l.getMaxHealthPoint()*1e3+l.m_battle_general.position;return r.getCurrentLifePoint()/r.getMaxHealthPoint()*1e3+r.m_battle_general.position<l_rate}.bind(this));for(i=0;i<team_members.length;i++){if((m=team_members[i]).IsAlive()&&!m.findTransType(database.BattleEffectTrans.Freeze)&&!m.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)&&(this.m_target_ours.push(m),0==--target_count))break}}else if(buf_type==BuffSkillType.Cure){team_members=stable(team_members,function(l,r){for(var l_count=0,si=0;si<l.m_durability_effects.length;si++){l.m_durability_effects[si].our_enemy==database.BattleSelfOther.Other&&(l_count+=1)}var r_count=0;for(si=0;si<r.m_durability_effects.length;si++){r.m_durability_effects[si].our_enemy==database.BattleSelfOther.Other&&(r_count+=1)}return(l_count=1e3*l_count+5-l.m_battle_general.position)<(r_count=1e3*r_count+5-r.m_battle_general.position)}.bind(this));for(i=0;i<team_members.length;i++){if((m=team_members[i]).IsAlive()&&!m.findTransType(database.BattleEffectTrans.Freeze)&&!m.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)&&(this.m_target_ours.push(m),0==--target_count))break}}else if(buf_type==BuffSkillType.Buf)for(i=0;i<team_members.length;i++){var m;if((m=team_members[i]).IsAlive()&&!m.findTransType(database.BattleEffectTrans.Freeze)&&!m.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)&&(this.m_target_ours.push(m),0==--target_count))break}}return 0!=this.m_target_ours.length},findEnemy:function(state,type,target_count,priority_position,is_skill){return this.removeDeathEnemy(),is_skill?this.m_skill_target_enemys.length=0:this.m_target_enemys.length=0,this.getArmServiceType()==db.GeneralArmServiceType.ArmServiceType_Ranger?(null!=this._findEnemyTarget&&(1==is_skill?this.m_skill_target_enemys=this._findEnemyTarget.findEnemyTarget(this,target_count,priority_position):this.m_target_enemys=this._findEnemyTarget.findEnemyTarget(this,target_count,priority_position)),is_skill?0!=this.m_skill_target_enemys.length&&(state=BattleGeneral_GeneralState.Idle,this.m_retrun_state=state,type=ActionType.Attack_Idle,this.m_return_type=type,!0):0!=this.m_target_enemys.length&&(state=BattleGeneral_GeneralState.Idle,this.m_retrun_state=state,type=ActionType.Attack_Idle,this.m_return_type=type,!0)):(null!=this._findEnemyTarget&&(1==is_skill?this.m_skill_target_enemys=this._findEnemyTarget.findEnemyTarget(this,target_count,priority_position):this.m_target_enemys=this._findEnemyTarget.findEnemyTarget(this,target_count,priority_position)),is_skill?0!=this.m_skill_target_enemys.length&&(type=this.m_cur_state==BattleGeneral_GeneralState.Find?(state=BattleGeneral_GeneralState.Dash,this.m_retrun_state=state,ActionType.Dash):(state=BattleGeneral_GeneralState.Dash,this.m_retrun_state=state,ActionType.Back),this.m_return_type=type,!0):0!=this.m_target_enemys.length&&(this.m_cur_state==BattleGeneral_GeneralState.Find?(state=BattleGeneral_GeneralState.Dash,this.m_retrun_state=state,type=ActionType.Dash):(state=BattleGeneral_GeneralState.Dash,type=ActionType.Back,this.m_retrun_state=state),this.m_return_type=type,!0))},addHittingEnemy:function(base){this.addDebugGeneral("addHittingEnemy");var attack_position_index=0;if(-1==this.m_hitting_enemys.indexOf(base)){if(0!=this.m_target_enemys.length)if(this.m_target_enemys[0]==base)return attack_position_index=1,this.m_hitting_enemys.push(base),attack_position_index;if(0==this.m_hitting_enemys.length)return attack_position_index=1,this.m_hitting_enemys.push(base),attack_position_index;for(var i=this.m_hitting_enemys.length+1;i<=5;i++){for(var j=0;j<this.m_hitting_enemys.length;j++){var e_pos=this.m_hitting_enemys[j].getAttackPosition();if(0<e_pos&&e_pos!=i){attack_position_index=i;break}}if(0<attack_position_index)break}0==attack_position_index&&(attack_position_index=1),this.m_hitting_enemys.push(base)}else attack_position_index=base.getAttackPosition();return attack_position_index},removeDeathEnemy:function(){for(var iter=[],iter_is=!1,i=0;i<this.m_hitting_enemys.length;i++){this.m_hitting_enemys[i].IsAlive()||(iter_is=!0,iter.push(i))}if(1==iter_is)for(i=0;i<iter.length;i++)this.m_hitting_enemys.splice(iter[i],1)},removeAllEffects:function(){var i=0;for(i=0;i<this.m_fx_used.length;i++){var fx=this.m_fx_used[i];"fx_death"!=fx.getFxID()&&fx.setReserveRemove(!0)}for(i=0;i<this.m_battle_general.active_skill.length;i++)this.m_battle_general.active_skill[i].is_prepared&&(this.m_battle_general.active_skill[i].is_prepared=!1)},recycledFxNode:function(part){var fx2=new BattleFxNode(part,0);return fx2.setFXTimeScale(this.m_cur_time_scale),fx2._throwingEnd=this,fx2._spineStart=this,fx2._spineEnd=this,fx2._spineEvent=this,fx2._spineComplete=this,fx2},hitEffectShow:function(damage_type,hit_point){var fx=null,part=null;this.m_game_type==db.BattleGameType.DailyDungeon?(part=null,1==(part=this.findFxPartByFxId2("fx_hit_daily"))[0]&&(fx=this.recycledFxNode(part[1]))):damage_type==database.DamageType.Critical?(part=null,1==(part=this.findFxPartByFxId2("fx_critical_hit"))[0]&&(fx=this.recycledFxNode(part[1]))):(part=null,1==(part=this.findFxPartByFxId2("fx_hit"))[0]&&(fx=this.recycledFxNode(part[1])));var hit_pos=this.hitPoint(hit_point);fx.setPosition(hit_pos),this.addChild(fx),fx.setReserveRemove(!0),fx.runFXAnimation(FX_Animation.FX_GRADE_1),this.m_fx_used.push(fx)},hitPoint:function(hit_point_num){var hitBone=this.m_sk.findBone("hit_point_"+hit_point_num);if(null==hitBone)return cc.p(0,100);var pos=cc.p(hitBone.x,hitBone.y);return 1==this.m_sk._skeleton.flipX&&(pos.x*=-1),pos},setGeneralPosition:function(pos){this.m_origin_pos=pos,this.setPosition(pos)},clearHittingEnemy:function(){this.m_hitting_enemys.length=0},clearTargetEnemy:function(){this.m_target_enemys.length=0,this.m_skill_target_enemys.length=0},calcActiveSkillCooltime:function(dt){if(this.IsAlive()){var dur_list=[];this.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_None,dur_list);for(var skillcooltime_dt=dt,dur_idx=0;dur_idx<dur_list.length;dur_idx++){var dur=$.extend({},dur_list[dur_idx]);if(dur.trans_type==database.BattleEffectTrans.Stop_Skill_Cooldown_chain_rabbit?skillcooltime_dt=0:dur.trans_type==database.BattleEffectTrans.Motion_Singing?skillcooltime_dt=0:dur.trans_type==database.BattleEffectTrans.Stop_Skill_Charge?skillcooltime_dt=0:dur.trans_type==database.BattleEffectTrans.Stop_Skill_Charge_koi&&(skillcooltime_dt=0),dur.trans_type==database.BattleEffectTrans.Active_Skill_Charge_Speed_Inc){if(0!=dur.durability.element_type&&dur.durability.element_type!=this.m_battle_general.general.element_type)continue;if(0!=dur.durability.arm_service_type&&dur.durability.arm_service_type!=this.m_battle_general.general.arm_service_type)continue;if(0!=dur.durability.fight_type&&dur.durability.fight_type!=this.m_battle_general.general.fight_type)continue;0!=dur.durability.state_type&&dur.durability.state_type==this.m_battle_general.general.state_type?skillcooltime_dt+=skillcooltime_dt*(dur.durability.state_type_value+dur.value)/1e4:skillcooltime_dt+=skillcooltime_dt*dur.value/1e4}else if(dur.trans_type==database.BattleEffectTrans.Active_Skill_Charge_Speed_Dec){if(0!=dur.durability.element_type&&dur.durability.element_type!=this.m_battle_general.general.element_type)continue;if(0!=dur.durability.arm_service_type&&dur.durability.arm_service_type!=this.m_battle_general.general.arm_service_type)continue;if(0!=dur.durability.fight_type&&dur.durability.fight_type!=this.m_battle_general.general.fight_type)continue;0!=dur.durability.state_type&&dur.durability.state_type==this.m_battle_general.general.state_type?skillcooltime_dt-=skillcooltime_dt*(dur.durability.state_type_value+dur.value)/1e4:skillcooltime_dt-=skillcooltime_dt*dur.value/1e4}else if(dur.trans_type==database.BattleEffectTrans.Boss_Active_Skill_Charge_Speed_Dec){if(!this.m_battle_general.is_zoom)continue;if(0!=dur.durability.element_type&&dur.durability.element_type!=this.m_battle_general.general.element_type)continue;if(0!=dur.durability.arm_service_type&&dur.durability.arm_service_type!=this.m_battle_general.general.arm_service_type)continue;if(0!=dur.durability.fight_type&&dur.durability.fight_type!=this.m_battle_general.general.fight_type)continue;0!=dur.durability.state_type&&dur.durability.state_type==this.m_battle_general.general.state_type?skillcooltime_dt-=skillcooltime_dt*(dur.durability.state_type_value+dur.value)/1e4:skillcooltime_dt-=skillcooltime_dt*dur.value/1e4}else if(dur.trans_type==database.BattleEffectTrans.All_Trans_Skill_Charge_Speed_Rate_Dec_Rate)for(var d_trans_idx=0;d_trans_idx<this.m_durability_effects.length;d_trans_idx++)this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.Stun&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.Freeze&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.Poison&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.New_Poison_Dmg_Rate&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.Damage_Reduce&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.Silence&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.After_Recv_Damage_Inc_Rate&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.Wound_Obstruct_Heal&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.Electric_Shork&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.Bleeding_Woounds&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.Blind_Darkness&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.Not_Resist_Stun&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.Not_Resist_Freeze&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.Not_Resist_Poison&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.Not_Resist_Damage_Reduce&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.Not_Resist_Silence&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.Not_Resist_Wound&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.Not_Resist_Blind||(skillcooltime_dt-=skillcooltime_dt*dur.value/1e4);else if(dur.trans_type==database.BattleEffectTrans.HP_Shield_Active_Skill_Charge_Speed_Inc)for(d_trans_idx=0;d_trans_idx<this.m_durability_effects.length;d_trans_idx++)this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.HP_Shield_Caster_Max_HP&&this.m_durability_effects[d_trans_idx].trans_type!=database.BattleEffectTrans.HP_Shield_Caster_Heal_Value||(skillcooltime_dt+=skillcooltime_dt*dur.value/1e4);dur=null}var one_list=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Always,one_list);for(var one_list_idx=0;one_list_idx<one_list.length;one_list_idx++){var passive_one=$.extend({},one_list[one_list_idx]);if(passive_one.stat_trans==database.BattleEffectTrans.Our_Team_Dead_Count_Active_Skill_Charge_Speed_Inc){for(var deadcnt=0,myteam=this.getMyTeam().getTeamMembers(),member_idx=0;member_idx<myteam.length;member_idx++)myteam[member_idx].IsAlive()||++deadcnt;skillcooltime_dt+=skillcooltime_dt*passive_one.value/1e4*deadcnt}else if(passive_one.stat_trans==database.BattleEffectTrans.Self_Check_Radio_Show_Effect_Skill_Cooltime_Faster){for(var found_is=!1,found_idx_et=0;found_idx_et<this.m_durability_effects.length;found_idx_et++)if(found_idx_et,this.m_durability_effects[found_idx_et].trans_type==database.BattleEffectTrans.Target_Radio_Show_Buff_Effect){found_is=!0;break}1==found_is&&(skillcooltime_dt+=skillcooltime_dt*passive_one.value/1e4)}else if(passive_one.stat_trans==database.BattleEffectTrans.HP_Shield_Active_Skill_Charge_Speed_Inc)for(var dur_effect_idx=0;dur_effect_idx<this.m_durability_effects.length;dur_effect_idx++)this.m_durability_effects[dur_effect_idx].trans_type!=database.BattleEffectTrans.HP_Shield_Caster_Max_HP&&this.m_durability_effects[dur_effect_idx].trans_type!=database.BattleEffectTrans.HP_Shield_Caster_Heal_Value||(skillcooltime_dt+=skillcooltime_dt*passive_one.value/1e4);else if(passive_one.stat_trans==database.BattleEffectTrans.Charge_Speed_Inc_Hp_Rate){var inc_value=0,life_rate=this.m_life_point/this.getMaxHealthPoint();(inc_value=.9<life_rate?4e3:.6<life_rate?3e3:.3<life_rate?2e3:1e3)>passive_one.onetime_effect.limit_value&&(inc_value=passive_one.onetime_effect.limit_value),skillcooltime_dt+=skillcooltime_dt*inc_value/1e4}}one_list=null;for(var i=0;i<this.m_battle_general.active_skill.length;i++){if(this.m_battle_general.active_skill[i].is_cooltime){if(this.m_game_type==db.BattleGameType.RaidDungeon&&this.m_team_type==BattleGeneral_TeamType.Right&&1==this.m_battle_general.is_zoom&&this.m_cur_state==BattleGeneral_GeneralState.RaidTimeover&&(this.m_Is_Charge_Skill=!1),this.m_Is_Charge_Skill&&(this.m_battle_general.active_skill[i].cooltime-=skillcooltime_dt),this.m_battle_general.active_skill[i].skill.cool_time/this.m_battle_general.active_skill[i].skill.cooltime<.1&&!this.find_voice_use(voice_charge_skill_90_percent)&&this.playVoicePart(voice_charge_skill_90_percent),this.m_battle_general.active_skill[i].cooltime<0)if(++this.m_battle_general.active_skill[i].skill_charge_count,this.m_battle_general.active_skill[i].skill_charge_count>=MAX_SKILL_CHARGE_BUFF)this.m_battle_general.active_skill[i].is_cooltime=!1,this.m_battle_general.active_skill[i].is_prepared=!1,this.m_battle_general.active_skill[i].skill_charge_count=MAX_SKILL_CHARGE_BUFF;else if(this.m_game_type==db.BattleGameType.RaidDungeon&&this.m_team_type==BattleGeneral_TeamType.Right&&this.m_battle_general.is_zoom)this.m_battle_general.active_skill[i].is_cooltime=!0,this.m_battle_general.active_skill[i].is_prepared=!1;else{this.m_battle_general.active_skill[i].is_cooltime=!0,this.m_battle_general.active_skill[i].is_prepared=!1;var dec_cooltime=this.getSkillCoolTimeDecBuf(this.m_battle_general.active_skill[i]);this.m_battle_general.active_skill[i].cooltime=this.m_battle_general.active_skill[i].skill.cool_time-dec_cooltime}if(null!=this._skillCooltimeProc_V2&&this._skillCooltimeProc_V2.skillCooltimeProc_V2(this.m_battle_general.active_skill[i].cooltime,this.m_battle_general.active_skill[i].skill_charge_count),this.m_game_type==db.BattleGameType.RaidDungeon&&this.m_team_type==BattleGeneral_TeamType.Right&&this.m_battle_general.is_zoom&&null!=this._raid_boss_skill_cooltime){var per=(this.m_battle_general.active_skill[i].skill.cool_time-this.m_battle_general.active_skill[i].cooltime)/this.m_battle_general.active_skill[i].skill.cool_time*100;this._raid_boss_skill_cooltime.setPercentageSkillCooltime(per)}if(this.m_game_type==db.BattleGameType.EventMussangBossDungeon&&this.m_team_type==BattleGeneral_TeamType.Right&&this.m_battle_general.is_zoom&&null!=this._mussang_boss_skill_cooltime){per=(this.m_battle_general.active_skill[i].skill.cool_time-this.m_battle_general.active_skill[i].cooltime)/this.m_battle_general.active_skill[i].skill.cool_time*100;this._mussang_boss_skill_cooltime.setPercentageSkillCooltime(per)}}this.m_battle_general.active_skill[i].is_teamcooltime&&(this.m_battle_general.active_skill[i].team_cooltime-=dt,this.m_battle_general.active_skill[i].team_cooltime<0&&(this.m_battle_general.active_skill[i].is_teamcooltime=!1),this.m_battle_general.active_skill[i].is_cooltime||null!=this._skillTeamCooltimeProc&&this._skillTeamCooltimeProc.skillTeamCooltimeProc(!this.m_battle_general.active_skill[i].is_teamcooltime,this.m_battle_general.active_skill[i].team_cooltime))}for(var active_idx=0;active_idx<this.m_battle_general.active_skill.length;active_idx++)if(this.m_battle_general.m_Is_Reborn_Active_Max_Charge){if(this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Cooldown_chain_rabbit)||this.IsDurabilityEffect(database.BattleEffectTrans.Motion_Singing)||this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Charge)||this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Charge_koi));else for(var idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++)for(var passive=this.m_battle_general.trans_passive_skill[idx],jdx=0;jdx<passive.onetime_effects.length;jdx++){(one=passive.onetime_effects[jdx]).stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_1?this.m_battle_general.active_skill[active_idx].skill_charge_count+=1:one.stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_2?this.m_battle_general.active_skill[active_idx].skill_charge_count+=2:one.stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_3&&(this.m_battle_general.active_skill[active_idx].skill_charge_count+=3),this.m_battle_general.active_skill[active_idx].skill_charge_count>=MAX_SKILL_CHARGE_BUFF&&(this.m_battle_general.active_skill[active_idx].skill_charge_count=MAX_SKILL_CHARGE_BUFF,this.m_battle_general.active_skill[active_idx].cooltime=0)}this.m_battle_general.m_Is_Reborn_Active_Max_Charge=!1}if(0<this.dead_heal_queue.size()&&(this.dead_heal_delta_time-=dt,this.dead_heal_delta_time<0)){var one=this.dead_heal_queue[0];this.dead_heal_queue.pop(),this.addOnetimeEffect(one,one.stat_trans),0<this.dead_heal_queue.size()&&(this.dead_heal_delta_time=.5)}}},IsSkillEanble:function(){if(this.is_silence()||this.findTransType(database.BattleEffectTrans.Freeze)||this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze))return!1;if(this.m_cur_state==BattleGeneral_GeneralState.Sleep||this.m_cur_state==BattleGeneral_GeneralState.Stun||this.m_cur_state==BattleGeneral_GeneralState.Freeze)return!1;if(0==this.m_battle_general.active_skill.length)return!1;for(var i=0;i<this.m_battle_general.active_skill.length;i++)if(this.m_battle_general.active_skill[i].skill_charge_count>INIT_SKILL_CHARGE_BUFF&&!this.m_battle_general.active_skill[i].is_teamcooltime)return!0;return!1},preparedSkill:function(){if((this.m_team_type!=BattleGeneral_TeamType.Left||this.m_game_type!=db.BattleGameType.GreatWallDungeon||0!=this.m_battle_general.remain_skill_count)&&0!=this.m_battle_general.active_skill.length)for(var i=0;i<this.m_battle_general.active_skill.length;i++)if(!this.m_battle_general.active_skill[i].is_prepared&&this.m_battle_general.active_skill[i].skill_charge_count>INIT_SKILL_CHARGE_BUFF){this.m_battle_general.active_skill[i].is_prepared=!0,this.m_cur_state!=BattleGeneral_GeneralState.Dash&&(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Attack_Idle),cc.log("Attack_Idle Check 7"));break}},lifeBarAdjustEnd:function(bar){this.IsAlive()||this.setGeneralState(BattleGeneral_GeneralState.Death)},deathAnimation:function(){if(this.addDebugGeneral("deathAnimation"),this.m_is_death_animation_start)return!1;this.offLeader(),this.offBoss(),this.playAction(ActionType.Death),this.m_is_death_animation_start=!0;var blink=cc.blink(1.5,6),fadeout=cc.fadeOut(1.5),spawn=cc.spawn(blink,fadeout),cb=cc.callFunc(this.cbDeathAnimation,this),seq=cc.sequence(spawn,cb);return this.runAction(seq),this.m_team_type==BattleGeneral_TeamType.Left&&(this.m_game_type==db.BattleGameType.Mission?BattleMissionTaskManager._getInstance().addDeathGeneral(this.m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.WeeklyDungeon?BattleWeeklyDungeonTaskManager.getInstance().addDeathGeneral(this.m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.EventDungeon?BattleEventDungeonTaskManager.getInstance().addDeathGeneral(this.m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.TowerDungeon&&BattleTowerTaskManager._getInstance().addDeathGeneral(this.m_battle_general.general.gnrl_group)),!0},cbDeathAnimation:function(){this.addDebugGeneral("cbDeathAnimation");var teammng=this.getMyTeam();if(this.m_is_reborn_enable&&this.m_my_team.IsAliveTargetGeneral(this.m_reborn_base_gnrl))this.addOnetimeEffect(this.m_reborn_onetime_effect,this.m_reborn_onetime_effect.stat_trans),this.m_is_reborn_enable=!1,this.m_is_death_animation_start=!1,this.m_reborn_base_gnrl.gnrl_id=0,this.m_reborn_base_gnrl.gnrl_num=0,this.m_game_type==db.BattleGameType.GreatWallDungeon?(this.m_battle_general.is_dead=!1,0<this.m_battle_general.remain_skill_count&&null!=this._skillEnable&&(teammng.IsPlaySkill()||this._skillEnable.skillEnable(!0),teammng.IsPlaySkill()&&this.unfocusBegin())):null!=this._skillEnable&&(teammng.IsPlaySkill()||this._skillEnable.skillEnable(!0),teammng.IsPlaySkill()&&this.unfocusBegin()),this.m_team_type==BattleGeneral_TeamType.Left&&(this.m_game_type==db.BattleGameType.Mission?BattleMissionTaskManager._getInstance().removeDeathGeneral(this.m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.WeeklyDungeon?BattleWeeklyDungeonTaskManager.getInstance().removeDeathGeneral(this.m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.EventDungeon?BattleEventDungeonTaskManager.getInstance().removeDeathGeneral(this.m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.TowerDungeon&&BattleTowerTaskManager._getInstance().removeDeathGeneral(this.m_battle_general.general.gnrl_group));else if(this.m_is_self_reborn_enable)this.addOnetimeEffect(this.m_self_reborn_onetime_effect,this.m_self_reborn_onetime_effect.stat_trans),0!=this.m_self_reborn_durability_effect.effect_id&&this.addDurabilityEffect(this.m_self_reborn_durability_effect,this),this.m_is_self_reborn_enable=!1,this.m_is_death_animation_start=!1,this.m_game_type==db.BattleGameType.GreatWallDungeon?(this.m_battle_general.is_dead=!1,0<this.m_battle_general.remain_skill_count&&null!=this._skillEnable&&this._skillEnable.skillEnable(!0)):(this.m_battle_general.is_dead=!1,null!=this._skillEnable&&(teammng.IsPlaySkill()||this._skillEnable.skillEnable(!0),teammng.IsPlaySkill()&&this.unfocusBegin())),this.m_team_type==BattleGeneral_TeamType.Left&&(this.m_game_type==db.BattleGameType.Mission?BattleMissionTaskManager._getInstance().removeDeathGeneral(this.m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.WeeklyDungeon?BattleWeeklyDungeonTaskManager.getInstance().removeDeathGeneral(this.m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.EventDungeon?BattleEventDungeonTaskManager.getInstance().removeDeathGeneral(this.m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.TowerDungeon&&BattleTowerTaskManager._getInstance().removeDeathGeneral(this.m_battle_general.general.gnrl_group));else if(this.m_is_reborn_enable)if(this.addOnetimeEffect(this.m_reborn_onetime_effect,this.m_reborn_onetime_effect.stat_trans))this.m_is_reborn_enable=!1,this.m_is_death_animation_start=!1,this.m_reborn_base_gnrl.gnrl_id=0,this.m_reborn_base_gnrl.gnrl_num=0,this.m_game_type==db.BattleGameType.GreatWallDungeon?(this.m_battle_general.is_dead=!1,0<this.m_battle_general.remain_skill_count&&null!=this._skillEnable&&(teammng.IsPlaySkill()||this._skillEnable.skillEnable(!0),teammng.IsPlaySkill()&&this.unfocusBegin())):null!=this._skillEnable&&(teammng.IsPlaySkill()||this._skillEnable.skillEnable(!0),teammng.IsPlaySkill()&&this.unfocusBegin()),this.m_team_type==BattleGeneral_TeamType.Left&&(this.m_game_type==db.BattleGameType.Mission?BattleMissionTaskManager._getInstance().removeDeathGeneral(this.m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.WeeklyDungeon?BattleWeeklyDungeonTaskManager.getInstance().removeDeathGeneral(this.m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.EventDungeon?BattleEventDungeonTaskManager.getInstance().removeDeathGeneral(this.m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.TowerDungeon&&BattleTowerTaskManager._getInstance().removeDeathGeneral(this.m_battle_general.general.gnrl_group));else{if(this.m_is_reborn_enable=!1,this.m_is_self_reborn_enable=!1,null!=this._skillEnable&&(teammng.IsPlaySkill()||this._skillEnable.skillEnable(!1),teammng.IsPlaySkill()&&this.unfocusBegin()),null!=this._cbEventListenerUIMng)((evt=new battle.Event).dataValue1=this)._cbEventListenerUIMng.EventListenerFromGeneral(EventCode.EVT_UI_MNG_DEATH,evt),evt=null;this.setGeneralState(BattleGeneral_GeneralState.End),this.setVisible(!1),this.m_Skill_DeltaTime=0}else{var evt;if(this.m_is_reborn_enable=!1,this.m_is_self_reborn_enable=!1,null!=this._skillEnable&&(teammng.IsPlaySkill()||this._skillEnable.skillEnable(!1),teammng.IsPlaySkill()&&this.unfocusBegin()),null!=this._cbEventListenerUIMng)((evt=new battle.Event).dataValue1=this)._cbEventListenerUIMng.EventListenerFromGeneral(EventCode.EVT_UI_MNG_DEATH,evt);this.setGeneralState(BattleGeneral_GeneralState.End),this.setVisible(!1),this.m_Skill_DeltaTime=0}},awayJump:function(pos,duration){var ease=cc.moveTo(duration,pos).clone().easing(cc.easeQuadraticActionOut()),cb=cc.callFunc(this.cbAwayJump,this),seq=cc.sequence(ease,cb);this.runAction(seq)},cbAwayJump:function(){this.m_my_team.awayCompleteMember(this),this.setGeneralState(BattleGeneral_GeneralState.End)},generalAwayReady:function(){if(this.m_my_team.IsCutinStage()&&this.m_team_type==BattleGeneral_TeamType.Right&&!this.m_is_drop_item_check&&(this.m_is_drop_item_check=!0,null!=this._cbEventListenerFieldMng)){var evt=new battle.Event;(evt.dataValue1=this)._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_DROP_ITEM,evt)}},generalAway:function(){this.setGeneralState(BattleGeneral_GeneralState.Away),this.playAction(ActionType.Back)},generalFinishSkill:function(){if(0==this.gen_ver);else if(2==this.gen_ver){this.getGeneral().general.gnrl_group;var snd=this.getGeneral().active_skill[0].skill_action.action_sound;this.getTeamType()==BattleGeneral_TeamType.Right&&1==this.getGeneral().active_skill[0].skill.enemy_skill_type&&(snd=this.getGeneral().active_skill[0].skill_action.enemy_action_sound),"0"!=snd&&""!=snd&&null!=snd&&AudioEngine.getInstance().playEffect(RES_CDN_SOUND+SND_TYPE+"sound/"+snd),this.setGeneralState(BattleGeneral_GeneralState.Skill),this.playAction(ActionType.Skill_3)}else this.setGeneralState(BattleGeneral_GeneralState.Skill),this.playAction(ActionType.Skill_3)},jumpDash:function(target,duration){this.addDebugGeneral("jumpDash"),this.dash_offset=cc.p(0,0);this.m_attack_position_index=target.addHittingEnemy(this),this.m_team_type==BattleGeneral_TeamType.Left?this.dash_offset.x=-DASH_DISTANCE:this.dash_offset.x=DASH_DISTANCE,this.dash_offset.y=0,this.dash_target=target;var ease=new BattleMoveToTarget(duration/this.m_cur_time_scale,target,this.dash_offset).clone().easing(cc.easeQuadraticActionOut());this.runAction(ease)},dash:function(target,velocity){this.addDebugGeneral("dash");var pos=this.getPosition(),target_pos=target.getPosition();this.m_attack_position_index=target.addHittingEnemy(this);var boss_offset_y=0;(this.m_game_type==db.BattleGameType.DailyDungeon||this.m_game_type==db.BattleGameType.RaidDungeon||this.m_my_team.getTargetTeam().IsCutinStage())&&this.m_team_type==BattleGeneral_TeamType.Left&&(boss_offset_y=-5),velocity<0&&(velocity=1500);var duration=cc.pDistance(pos,target_pos)/velocity;this.dash_offset=cc.p(0,0),this.m_team_type==BattleGeneral_TeamType.Left?this.dash_offset.x=-DASH_DISTANCE:this.dash_offset.x=DASH_DISTANCE,this.dash_offset.y=0+boss_offset_y,this.dash_target=target;var ease=new BattleMoveToTarget(duration/this.m_cur_time_scale,target,this.dash_offset).clone().easing(cc.easeQuadraticActionOut()),cb=cc.callFunc(this.dashEnd,this),seq=cc.sequence(ease,cb);this.runAction(seq),this.addDebugGeneral("dash")},dashEnd:function(){this.m_cur_state!=BattleGeneral_GeneralState.Skill_Ready&&this.m_cur_state!=BattleGeneral_GeneralState.Skill&&this.m_cur_state!=BattleGeneral_GeneralState.Freeze&&this.m_cur_state!=BattleGeneral_GeneralState.Stun&&this.m_cur_state!=BattleGeneral_GeneralState.Sleep&&(this.checkPositionRevision(this.m_revision_pos)?(this.setGeneralState(BattleGeneral_GeneralState.Idle_Revision),this.playAction(ActionType.Back)):this.findTransType(database.BattleEffectTrans.FeverMode,this.IsFriend())&&(479==this.m_battle_general.general.gnrl_group||504==this.m_battle_general.general.gnrl_group)?(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Idle2)):(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Attack_Idle))),this.m_cur_pos=cc.p(0,0),this.dash_offset=cc.p(0,0),this.dash_target=null,this.addDebugGeneral("dashEnd")},weaponBreak:function(fx_id){var part_arr=this.findFxPartByFxId2(fx_id),part=part_arr[1];if(1==part_arr[0]){for(var i=0;i<this.m_skill_target_enemys.length;i++){var t=this.m_skill_target_enemys[i];if("object"==typeof t&&t.IsAlive()){var fx=this.recycledFxNode(part);this.m_fx_used.push(fx);var flip_x=this.m_sk._skeleton.flipX;part.is_used_flip?fx.setFlipX(flip_x):fx.setFlipX(0);var hit_point=t.hitPoint(part.hit_point);fx.setPosition(hit_point),t.addChild(fx),fx.runFXAnimation(FX_Animation.FX_GRADE_1)}}if(""!=part.fx_sound&&"0"!=part.fx_sound){var path=RES_CDN_SOUND+SND_TYPE+"sound/"+part.fx_sound;AudioEngine.getInstance().playEffect(path)}}},lastFxHitPart:function(fx_id,node){var part_arr=this.findFxPartByFxId(fx_id),part=part_arr[1];if(1==part_arr[0]){var fx=this.recycledFxNode(part);this.m_fx_used.push(fx),fx.setTargetGeneral(node.getTargetGeneral());var flip_x=this.m_sk._skeleton.flipX;part.is_used_flip?fx.setFlipX(flip_x):fx.setFlipX(0);var pos=node.absolutePosition2(this.getParent());if(part.is_base_parent_target,fx.setPosition(pos),part.fx_layer<database.FxLayerType.FxLayer_PersnalBufLayer?(fx.setOrderingOffsetY(node.getOrderingOffsetY()),null!=this._addBattleFxNode&&(this._addBattleFxNode.addFxNode(fx),fx.runFXAnimation(FX_Animation.FX_GRADE_1),fx.setReserveRemove(!0))):(fx.setOrderingOffsetY(node.getOrderingOffsetY()),this.getParent().addChild(fx),fx.runFXAnimation(FX_Animation.FX_GRADE_1),fx.setReserveRemove(!0)),""!=part.fx_sound&&"0"!=part.fx_sound){var path=RES_CDN_SOUND+SND_TYPE+"sound/"+part.fx_sound;AudioEngine.getInstance().playEffect(path)}}},startFxMissilePart:function(fx_id,is_collision){var part_arr=this.findFxPartByFxId(fx_id),part=part_arr[1];if(1==part_arr[0]){var fx=this.recycledFxNode(part);this.m_fx_used.push(fx),fx.setCollisionEnable(is_collision),fx.setReserveRemove(!1);var flip_x=this.m_sk._skeleton.flipX;if(part.is_used_flip?fx.setFlipX(flip_x):fx.setFlipX(0),part.is_throwing_object){fx.setMissileData(this,this.m_map_skill_damage,this.m_skill_target_enemys);var pos=cc.p(0,ccCenter(winSize).y),target_pos=cc.p(0,ccCenter(winSize).y);this.m_team_type==BattleGeneral_TeamType.Left?(pos.x=-200,target_pos.x=winSize.width+600):(pos.x=winSize.width+200,target_pos.x=-600),fx.setPosition(pos),fx.setOrderingOffsetY(pos.y),null!=this._addBattleFxNode&&(this._addBattleFxNode.addFxNode(fx),fx.runFXAnimation(FX_Animation.FX_GRADE_1,!0),fx.throwingMissile(part.velocity,target_pos))}if(""!=part.fx_sound&&"0"!=part.fx_sound&&this.last_use_effect!=part.fx_sound){var path=RES_CDN_SOUND+SND_TYPE+"sound/"+part.fx_sound;AudioEngine.getInstance().playEffect(path),this.last_use_effect=part.fx_sound}}},startFxPartEnemyAttackAll:function(fx_id){var part_arr=this.findFxPartByFxId(fx_id),part=part_arr[1];if(1==part_arr[0])for(var i=0;i<this.m_target_enemys.length;i++){var t=this.m_target_enemys[i];if("object"==typeof t){var fx=this.recycledFxNode(part);this.m_fx_used.push(fx);var bone_pos=cc.p(0,0),bone=this.m_sk.findBone("target");bone_pos.x=bone.x,bone_pos.y=bone.y;var flip_x=this.m_sk._skeleton.flipX;if(part.is_used_flip?fx.setFlipX(flip_x):fx.setFlipX(0),part.is_throwing_object)if(fx.setTargetGeneral(t),part.is_target_pos_use){var pos=cc.p(0,0);0<part.hit_point&&(pos=t.hitPoint(part.hit_point)),fx.setPosition(pos),t.addChild(fx),fx.runFXAnimation(FX_Animation.FX_GRADE_1),fx.setReserveRemove(!0)}else{pos=this.getPosition();0==flip_x?pos.x+=bone_pos.x:pos.x-=bone_pos.x,pos.y+=bone_pos.y,fx.setPosition(pos),fx.setOrderingOffsetY(bone_pos.y+1),null!=this._addBattleFxNode&&(this._addBattleFxNode.addFxNode(fx),fx.runFXAnimation(FX_Animation.FX_GRADE_1,!0),fx.throwToTarget(this,t,part.velocity,part.is_bezier_use))}else if(part.fx_layer<database.FxLayerType.FxLayer_PersnalBufLayer)0==flip_x?fx.setPosition(bone_pos.x,bone_pos.y):fx.setPosition(-bone_pos.x,bone_pos.y),fx.setOrderingOffsetY(bone_pos.y+1),null!=this._addBattleFxNode&&(this._addBattleFxNode.addFxNode(fx),fx.runFXAnimation(FX_Animation.FX_GRADE_1),fx.setReserveRemove(!0));else{switch(0==flip_x?fx.setPosition(bone_pos.x,bone_pos.y):fx.setPosition(-bone_pos.x,bone_pos.y),fx.setOrderingOffsetY(bone_pos.y+1),part.fx_layer){case database.FxLayerType.FxLayer_PersnalBufLayer:this.addChild(fx,LAYER_ORDER_BUF_DEBUF_GROUND);break;case database.FxLayerType.FxLayer_PersnalAuraLayer:this.addChild(fx,LAYER_ORDER_AURA);break;case database.FxLayerType.FxLayer_PersnalDirtyLayer:this.addChild(fx,LAYER_ORDER_DIRTY);break;case database.FxLayerType.FxLayer_PersnalHitLayer:this.addChild(fx,LAYER_ORDER_HIT_EFFECT);break;case database.FxLayerType.FxLayer_PersnalSkillHitLayer:this.addChild(fx,LAYER_ORDER_PERSNAL_SKILL_EFFECT);break;case database.FxLayerType.FxLayer_PersnalStateLayer:this.addChild(fx,LAYER_ORDER_STATE_TRANSITION)}fx.runFXAnimation(FX_Animation.FX_GRADE_1),fx.setReserveRemove(!0)}if(""!=part.fx_sound&&"0"!=part.fx_sound&&this.last_use_effect!=part.fx_sound){var path=RES_CDN_SOUND+SND_TYPE+"sound/"+part.fx_sound;AudioEngine.getInstance().playEffect(path),this.last_use_effect=part.fx_sound}}}},startFxPartEnemyAll:function(fx_id){var pos=fx_id.search("fx_skill_"),skill=new database.BattleSkill,our_enemy=database.BattleSelfOther.Other,i=0;if(-1!=pos)for(i=0;i<this.m_battle_general.active_skill.length;i++)if(this.m_battle_general.active_skill[i].is_prepared){skill=this.m_battle_general.active_skill[i],our_enemy=this.m_battle_general.active_skill[i].skill_action.our_enemy;break}var targetlist=[];targetlist=our_enemy==database.BattleSelfOther.Self?$.extend([],this.m_target_ours):$.extend([],this.m_skill_target_enemys);var part_arr=this.findFxPartByFxId(fx_id),part=part_arr[1];if(1==part_arr[0])for(i=0;i<targetlist.length;i++){var t=targetlist[i];if("object"==typeof t){var fx=this.recycledFxNode(part);this.m_fx_used.push(fx);try{0!=skill.skill.active_skill_id&&fx.setBattleSkill(skill)}catch(e){}var bone_pos=cc.p(0,0),bone=this.m_sk.findBone("target");bone_pos.x=bone.x,bone_pos.y=bone.y;var flip_x=this.m_sk._skeleton.flipX;if(part.is_used_flip?fx.setFlipX(flip_x):fx.setFlipX(0),part.is_throwing_object)if(fx.setTargetGeneral(t),part.is_target_pos_use){pos=cc.p(0,0);0<part.hit_point&&(pos=t.hitPoint(part.hit_point)),fx.setPosition(pos),t.addChild(fx),fx.runFXAnimation(FX_Animation.FX_GRADE_1),fx.setReserveRemove(!0)}else{pos=this.getPosition();0==flip_x?pos.x+=bone_pos.x:pos.x-=bone_pos.x,pos.y+=bone_pos.y,fx.setPosition(pos),fx.setOrderingOffsetY(bone_pos.y+1),null!=this._addBattleFxNode&&(this._addBattleFxNode.addFxNode(fx),fx.runFXAnimation(FX_Animation.FX_GRADE_1,!0),fx.throwToTarget(this,t,part.velocity,part.is_bezier_use))}else if(part.fx_layer<database.FxLayerType.FxLayer_PersnalBufLayer)0==flip_x?fx.setPosition(bone_pos.x,bone_pos.y):fx.setPosition(-bone_pos.x,bone_pos.y),fx.setOrderingOffsetY(bone_pos.y+1),null!=this._addBattleFxNode&&(this._addBattleFxNode.addFxNode(fx),fx.runFXAnimation(FX_Animation.FX_GRADE_1),fx.setReserveRemove(!0));else{switch(0==flip_x?fx.setPosition(bone_pos.x,bone_pos.y):fx.setPosition(-bone_pos.x,bone_pos.y),fx.setOrderingOffsetY(bone_pos.y+1),part.fx_layer){case database.FxLayerType.FxLayer_PersnalBufLayer:this.addChild(fx,LAYER_ORDER_BUF_DEBUF_GROUND);break;case database.FxLayerType.FxLayer_PersnalAuraLayer:this.addChild(fx,LAYER_ORDER_AURA);break;case database.FxLayerType.FxLayer_PersnalDirtyLayer:this.addChild(fx,LAYER_ORDER_DIRTY);break;case database.FxLayerType.FxLayer_PersnalHitLayer:this.addChild(fx,LAYER_ORDER_HIT_EFFECT);break;case database.FxLayerType.FxLayer_PersnalSkillHitLayer:this.addChild(fx,LAYER_ORDER_PERSNAL_SKILL_EFFECT);break;case database.FxLayerType.FxLayer_PersnalStateLayer:this.addChild(fx,LAYER_ORDER_STATE_TRANSITION)}fx.runFXAnimation(FX_Animation.FX_GRADE_1),fx.setReserveRemove(!0)}if(""!=part.fx_sound&&"0"!=part.fx_sound&&this.last_use_effect!=part.fx_sound){var path=RES_CDN_SOUND+SND_TYPE+"sound/"+part.fx_sound;AudioEngine.getInstance().playEffect(path),this.last_use_effect=part.fx_sound}}}},startFxPartNoneTransEffect:function(fx_id,dur){var part_arr=this.findFxPartByFxId(fx_id),part=part_arr[1];if(1==part_arr[0]){var fx=this.recycledFxNode(part);this.m_fx_used.push(fx);var bone_pos=cc.p(0,0),flip_x=this.m_sk._skeleton.flipX;switch(part.is_used_flip?fx.setFlipX(flip_x):fx.setFlipX(0),fx.setPosition(bone_pos),fx.setEffectTransType(dur.trans_type),fx.setEffectId(dur.effect_id),part.fx_layer){case database.FxLayerType.FxLayer_PersnalBufLayer:this.addChild(fx,LAYER_ORDER_BUF_DEBUF_GROUND);break;case database.FxLayerType.FxLayer_PersnalAuraLayer:this.addChild(fx,LAYER_ORDER_AURA);break;case database.FxLayerType.FxLayer_PersnalDirtyLayer:this.addChild(fx,LAYER_ORDER_DIRTY);break;case database.FxLayerType.FxLayer_PersnalHitLayer:this.addChild(fx,LAYER_ORDER_HIT_EFFECT);break;case database.FxLayerType.FxLayer_PersnalSkillHitLayer:this.addChild(fx,LAYER_ORDER_PERSNAL_SKILL_EFFECT);break;case database.FxLayerType.FxLayer_PersnalStateLayer:this.addChild(fx,LAYER_ORDER_STATE_TRANSITION)}fx.runFXAnimation(FX_Animation.FX_GRADE_1,!0),fx.setOrderingOffsetY(bone_pos.y+1)}},startFxPart_v2:function(fx_id,order){var pos=fx_id.search("fx_skill_"),skill=new database.BattleSkill,is_skill=!1,our_enemy=database.BattleSelfOther.Other;if(-1!=pos)for(var i=0;i<this.m_battle_general.active_skill.length;i++)if(this.m_battle_general.active_skill[i].is_prepared){skill=this.m_battle_general.active_skill[i],is_skill=!0,our_enemy=this.m_battle_general.active_skill[i].skill_action.our_enemy;break}if(is_skill){if(our_enemy==database.BattleSelfOther.Other&&0==this.m_skill_target_enemys.length)return}else if(0==this.m_target_enemys.length)return;var part_arr=this.findFxPartByFxId(fx_id),part=part_arr[1];if(1==part_arr[0]){var fx=this.recycledFxNode(part);this.m_fx_used.push(fx);try{0!=skill.skill.active_skill_id&&fx.setBattleSkill(skill)}catch(e){}var bone_pos=cc.p(0,0),bone=this.m_sk.findBone("target");bone_pos.x=bone.x,bone_pos.y=bone.y;var flip_x=this.m_sk._skeleton.flipX;if(part.is_used_flip?fx.setFlipX(flip_x):fx.setFlipX(0),part.is_throwing_object){var target=null,index=order;if(is_skill?our_enemy==database.BattleSelfOther.Other?index<this.m_skill_target_enemys.length?target=this.m_skill_target_enemys[index]:0<this.m_skill_target_enemys.length&&(target=this.m_skill_target_enemys[0]):index<this.m_target_ours.length&&(target=this.m_target_ours[index]):index<this.m_target_enemys.length&&(target=this.m_target_enemys[index]),null==target){for(var found=0,found_is=!1,j=0;j<this.m_fx_used.length;j++)if(fx==this.m_fx_used[j]){found=j,found_is=!0;break}if(1==found_is){this.m_fx_used.splice(found,1);try{fx.m_skeleton.clearTracks(0)}catch(e){}}return}if(fx.setTargetGeneral(target),part.is_target_pos_use){pos=cc.p(0,0);0<part.hit_point&&(pos=target.hitPoint(part.hit_point)),fx.setPosition(pos),target.addChild(fx),fx.runFXAnimation(FX_Animation.FX_GRADE_1),fx.setReserveRemove(!0)}else{pos=this.getPosition();0==flip_x?pos.x+=bone_pos.x:pos.x-=bone_pos.x,pos.y+=bone_pos.y,fx.setPosition(pos),target.getTeamType()==BattleGeneral_TeamType.Right&&(this.m_game_type==db.BattleGameType.DailyDungeon||this.m_game_type==db.BattleGameType.RaidDungeon||target.m_my_team.IsCutinStage())&&target.getGeneral().is_zoom?fx.setOrderingOffsetY(bone_pos.y+500):fx.setOrderingOffsetY(bone_pos.y+1),null!=this._addBattleFxNode&&(this._addBattleFxNode.addFxNode(fx),fx.runFXAnimation(FX_Animation.FX_GRADE_1,!0),fx.throwToTarget(this,target,part.velocity,part.is_bezier_use))}}else if(part.fx_layer<database.FxLayerType.FxLayer_PersnalBufLayer){pos=this.absolutePosition(this.getParent());0==flip_x?pos.x+=bone_pos.x:pos.x-=bone_pos.x,pos.y+=bone_pos.y,fx.setPosition(pos),fx.setOrderingOffsetY(bone_pos.y+1),null!=this._addBattleFxNode&&(this._addBattleFxNode.addFxNode(fx),fx.runFXAnimation(FX_Animation.FX_GRADE_1),fx.setReserveRemove(!0))}else{switch(0==flip_x?fx.setPosition(bone_pos.x,bone_pos.y):fx.setPosition(-bone_pos.x,bone_pos.y),fx.setOrderingOffsetY(bone_pos.y+1),part.fx_layer){case database.FxLayerType.FxLayer_PersnalBufLayer:this.addChild(fx,LAYER_ORDER_BUF_DEBUF_GROUND);break;case database.FxLayerType.FxLayer_PersnalAuraLayer:this.addChild(fx,LAYER_ORDER_AURA);break;case database.FxLayerType.FxLayer_PersnalDirtyLayer:this.addChild(fx,LAYER_ORDER_DIRTY);break;case database.FxLayerType.FxLayer_PersnalHitLayer:this.addChild(fx,LAYER_ORDER_HIT_EFFECT);break;case database.FxLayerType.FxLayer_PersnalSkillHitLayer:this.addChild(fx,LAYER_ORDER_PERSNAL_SKILL_EFFECT);break;case database.FxLayerType.FxLayer_PersnalStateLayer:this.addChild(fx,LAYER_ORDER_STATE_TRANSITION)}fx.runFXAnimation(FX_Animation.FX_GRADE_1),fx.setReserveRemove(!0)}if(""!=part.fx_sound&&"0"!=part.fx_sound&&this.last_use_effect!=part.fx_sound){var path=RES_CDN_SOUND+SND_TYPE+"sound/"+part.fx_sound;AudioEngine.getInstance().playEffect(path),this.last_use_effect=part.fx_sound}}},findFxPartByFxId:function(fx_id){var rePart=[],found=0,found_is=!1;rePart[0]=!1;for(var i=0;i<this.m_battle_general.fx_parts.length;i++){var p=this.m_battle_general.fx_parts[i];if(found=i,p.fx_id==fx_id){found_is=!0;break}p=null}1==found_is&&(rePart[0]=!0,rePart[1]=this.m_battle_general.fx_parts[found]);try{return rePart}finally{rePart=null}},findFxPartByFxId2:function(fx_id){var rePart=[],found=0,found_is=!1;rePart[0]=!1;for(var i=0;i<this.m_battle_general.fx_parts.length;i++){if(found=i,this.m_battle_general.fx_parts[i].fx_id==fx_id){found_is=!0;break}}return 1==found_is&&(rePart[0]=!0,rePart[1]=this.m_battle_general.fx_parts[found]),rePart},is_silence:function(){for(var found_is=!1,i=0;i<this.m_durability_effects.length;i++){var d=this.m_durability_effects[i];if(i,d.trans_type==database.BattleEffectTrans.Silence||d.trans_type==database.BattleEffectTrans.Not_Resist_Silence){found_is=!0;break}}return 1==found_is},silence:function(fx_id,is_skill){for(var list=is_skill?this.m_skill_target_enemys:this.m_target_enemys,i=0;i<list.length;i++){var t=list[i];if("object"==typeof t&&t.IsAlive()){var gnrl_id=t.getGeneralID(),posision=t.getBattlePosition();(a_map_damage=[])[0]=[gnrl_id,posision];var found=this.m_map_skill_damage.find(a_map_damage[0]),found_value=this.m_map_skill_damage.at(a_map_damage[0]);if(1==found){var damage_list=null;if(0!=(damage_list=found_value).length){var a_map_damage,damage=damage_list[0];damage_list.shift(),damage.hit_point=3,(a_map_damage=[])[0]=[gnrl_id,posision],this.m_map_skill_damage.insert(a_map_damage[0],damage_list),t.addDamage(this,damage)&&t.beginHit(0,damage.is_evasion),0==damage_list.length&&this.execActiveSubSkillAttk(damage)}}0}}},execActiveSubSkillBuff:function(cure){0!=this.m_battle_general.active_sub_skill.length&&cure.is_sub_skill&&this.execActiveSubSkill(cure.origin_damage)},execActiveSubSkillAttk:function(damage){0!=this.m_battle_general.active_sub_skill.length&&(damage.attack_type!=Hit_Attack_Type.SKILL&&damage.attack_type!=Hit_Attack_Type.BLOOD_SUCKING||damage.is_sub_skill&&this.execActiveSubSkill(damage.origin_damage))},execActiveSubSkill:function(origin_damage){for(var idx=0;idx<this.m_battle_general.active_sub_skill.length;idx++)if(!this.m_battle_general.active_sub_skill[idx].is_used){var skill_type=BuffSkillType.None;this.findSelfSubSkill(this.m_battle_general.active_sub_skill[idx].skill_action,this.m_battle_general.active_sub_skill[idx],skill_type);if(this.findSelfSubSkill(this.m_battle_general.active_sub_skill[idx].skill_action,this.m_battle_general.active_sub_skill[idx],skill_type)){skill_type=this.m_find_sub_skill_type_return,this.m_battle_general.active_sub_skill[idx].is_used=!0;for(var current_life_point=this.getCurrentLifePoint(),i=0;i<this.m_sub_skill_targets.length;i++){if((t=this.m_sub_skill_targets[i]).IsAlive()){t.getGeneral().general.gnrl_id;for(var j=0;j<this.m_battle_general.active_sub_skill[idx].onetime_effects.length;j++){var one=this.m_battle_general.active_sub_skill[idx].onetime_effects[j];if(one.output_ability_type==database.BattleOutputAbility.Cooltime){if(t==this)continue;if(0!=one.fight_type&&one.fight_type!=t.getFightType())continue}one.damage=origin_damage,one.input_ability_type==database.BattleInputAbility.Caster_Life?one.damage=current_life_point:one.input_ability_type==database.BattleInputAbility.Caster_Max_Life&&(one.damage=this.getMaxHealthPoint()),one.stat_trans!=database.BattleEffectTrans.New_Reborn&&(t.addOnetimeEffect(one),skill_type==BuffSkillType.Buf?t.addCommonEffectNode("fx_buff"):skill_type==BuffSkillType.Cure?t.addCommonEffectNode("fx_cure"):skill_type==BuffSkillType.Heal?t.addCommonEffectNode("fx_heal"):(BuffSkillType.Cooltime,t.addCommonEffectNode("fx_buff")))}}}var duration_plus=0,damage_plus=0,invoke_plus=0;1<this.m_current_skill_charge_count&&(duration_plus=this.getSkillChargeBuf(SKILL_CHARGE_ATTR_DURABILITY,SKILL_CHARGE_EFFECT_TYPE_DURABILITY_SECOND,this.m_current_skill_charge_count),damage_plus=this.getSkillChargeBuf(SKILL_CHARGE_ATTR_DURABILITY,SKILL_CHARGE_EFFECT_TYPE_ABILITY_VALUE,this.m_current_skill_charge_count),invoke_plus=this.getSkillChargeBuf(SKILL_CHARGE_ATTR_DURABILITY,SKILL_CHARGE_EFFECT_TYPE_INVOKE_RATE,this.m_current_skill_charge_count));var equip_opt_durability_effect_duration_time_buff=0,durability_duration_buff=[];this.getEquipmentOnetimeEffect(this.m_battle_general,database.BattleInvokeType.BattleInvokeType_Skill_Attck,durability_duration_buff);for(var du_idx=0;du_idx<durability_duration_buff.length;du_idx++){var o=durability_duration_buff[du_idx];if(o.stat_trans==database.BattleEffectTrans.All_Stat_Buff_Effect_Duration_Time_Inc){var min_value=o.onetime_effect.value,max_value=Math.max(o.onetime_effect.value,o.onetime_effect.max_value);equip_opt_durability_effect_duration_time_buff+=Math.random()*(max_value-min_value)+min_value}}for(var is_exist_stat_buff_duration=!1,idx_d=0;idx_d<this.m_battle_general.active_sub_skill[idx].durability_effects.length;idx_d++){var d=$.extend({},this.m_battle_general.active_sub_skill[idx].durability_effects[idx_d]);if(0<equip_opt_durability_effect_duration_time_buff&&(d.trans_type==database.BattleEffectTrans.Damage_Increased||d.trans_type==database.BattleEffectTrans.Defence_Increased||d.trans_type==database.BattleEffectTrans.Attack_Point_Abs_Inc||d.trans_type==database.BattleEffectTrans.Defence_Point_Rate_Inc||d.trans_type==database.BattleEffectTrans.Guard_Invoke_Rate_inc||d.trans_type==database.BattleEffectTrans.Guard_Defence_Rate_Inc||d.trans_type==database.BattleEffectTrans.Critical_Percent_Rate_Inc||d.trans_type==database.BattleEffectTrans.Critical_Power_Rate_inc||d.trans_type==database.BattleEffectTrans.Attack_Speed_Inc||d.trans_type==database.BattleEffectTrans.Caster_Lv_Def_Inc||d.trans_type==database.BattleEffectTrans.Caster_Lv_Attk_Inc||d.trans_type==database.BattleEffectTrans.Caster_Lv_Critical_Rate_Inc||d.trans_type==database.BattleEffectTrans.Caster_Lv_Critical_Power_Inc)){is_exist_stat_buff_duration=!0;break}d=null}for(i=0;i<this.m_sub_skill_targets.length;i++){var t,vec_dur=[];if((t=this.m_sub_skill_targets[i]).IsAlive()){var gnrl=t.getGeneral();for(j=0;j<this.m_battle_general.active_sub_skill[idx].durability_effects.length;j++){var dd=$.extend({},this.m_battle_general.active_sub_skill[idx].durability_effects[j]);if(this.RandomTransDurCheck(dd),dd.up_down==database.BattleUpDown.Down){if((dd.trans_type==database.BattleEffectTrans.Stun||dd.trans_type==database.BattleEffectTrans.Silence||dd.trans_type==database.BattleEffectTrans.Poison||dd.trans_type==database.BattleEffectTrans.After_Recv_Damage_Inc_Rate||dd.trans_type==database.BattleEffectTrans.Damage_Reduce||dd.trans_type==database.BattleEffectTrans.New_Poison_Dmg_Rate||dd.trans_type==database.BattleEffectTrans.Wound_Obstruct_Heal||dd.trans_type==database.BattleEffectTrans.Blind_Darkness||dd.trans_type==database.BattleEffectTrans.Not_Resist_Stun||dd.trans_type==database.BattleEffectTrans.Not_Resist_Silence||dd.trans_type==database.BattleEffectTrans.Not_Resist_Poison||dd.trans_type==database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate||dd.trans_type==database.BattleEffectTrans.Not_Resist_Damage_Reduce||dd.trans_type==database.BattleEffectTrans.Not_Resist_Wound||dd.trans_type==database.BattleEffectTrans.Not_Resist_Blind)&&this.checkTransInvinsiblity(dd.trans_type))continue;if(this.findTransType(database.BattleEffectTrans.Golden_Invincibility))continue}if((0==dd.element_type||dd.element_type==gnrl.general.element_type)&&!(0!=dd.arm_service_type&&dd.arm_service_type!=gnrl.general.arm_service_type||0!=dd.fight_type&&dd.fight_type!=gnrl.general.fight_type)){for(var rand=parseInt(100*Math.random()+1),trans_resist_value=0,vr_idx=0;vr_idx<this.m_battle_general.resistance.length;vr_idx++)if(dd.trans_type==this.m_battle_general.resistance[vr_idx].trans_type){trans_resist_value=this.m_battle_general.resistance[vr_idx].resist_value;break}var res_point=0;if(dd.trans_type!=database.BattleEffectTrans.Stun&&dd.trans_type!=database.BattleEffectTrans.Silence&&dd.trans_type!=database.BattleEffectTrans.Poison&&dd.trans_type!=database.BattleEffectTrans.After_Recv_Damage_Inc_Rate&&dd.trans_type!=database.BattleEffectTrans.Damage_Reduce&&dd.trans_type!=database.BattleEffectTrans.New_Poison_Dmg_Rate&&dd.trans_type!=database.BattleEffectTrans.Wound_Obstruct_Heal&&dd.trans_type!=database.BattleEffectTrans.Blind_Darkness&&dd.trans_type!=database.BattleEffectTrans.Freeze&&dd.trans_type!=database.BattleEffectTrans.Not_Resist_Stun&&dd.trans_type!=database.BattleEffectTrans.Not_Resist_Silence&&dd.trans_type!=database.BattleEffectTrans.Not_Resist_Poison&&dd.trans_type!=database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate&&dd.trans_type!=database.BattleEffectTrans.Not_Resist_Damage_Reduce&&dd.trans_type!=database.BattleEffectTrans.Not_Resist_Wound&&dd.trans_type!=database.BattleEffectTrans.Not_Resist_Blind&&dd.trans_type!=database.BattleEffectTrans.Not_Resist_Freeze||(res_point+=this.m_my_team.getLeaderSkillTransResistBufPoint(dd.trans_type,this.m_battle_general),res_point+=this.m_my_team.getSpecialLeaderSkillTransResistBufPoint(dd.trans_type,this.m_battle_general),res_point+=this.m_my_team.getFriendLeaderSkillTransResistBufPoint(dd.trans_type,this.m_battle_general),res_point+=this.getEventDungeonGnrlTransResistBuf(dd.trans_type),res_point+=this.durabilityBufResistPoint(dd.trans_type),res_point+=this.getEquipmentOptionStatBuff(database.BattleChainStatType.ChainStatType_All_Resistance_Inc_Value)/100,res_point=this.m_my_team.getPassiveSkillBufPoint(database.BattleChainStatType.ChainStatType_All_Resistance_Inc_Value,this.m_battle_general)),this.IsDurabilityResistZeroCheck(dd.trans_type)&&(0<trans_resist_value&&(trans_resist_value=0),0<res_point&&(res_point=0)),trans_resist_value+=res_point,TEST_SKILL_TRANS_PERCENT&&this.getTeamType()==BattleGeneral_TeamType.Right&&(trans_resist_value=rand=0),rand<=dd.percent+invoke_plus-trans_resist_value){if(dd.damage=origin_damage+origin_damage*damage_plus/100,dd.duration+=duration_plus,dd.trans_type==database.BattleEffectTrans.HP_Shield_Caster_Max_HP){var max_hp=this.getMaxHealthPoint();dd.life_shield=max_hp*dd.value/1e4}else if(dd.trans_type==database.BattleEffectTrans.Darkness_Shield){max_hp=this.getMaxHealthPoint();dd.life_shield=max_hp*dd.value/1e4,dd.max_life_shield=dd.life_shield}else if(dd.trans_type==database.BattleEffectTrans.HP_Shield_Caster_Heal_Value)dd.life_shield=dd.damage*dd.value/1e4,dd.max_life_shield=dd.life_shield;else if(dd.trans_type==database.BattleEffectTrans.Heal_By_Tick_Time)for(var one_sdx=0;one_sdx<dd.tick_effects.length;one_sdx++)dd.tick_effects[one_sdx].stack_count_wanko=this.m_battle_general.stack_wanko;if(0<equip_opt_durability_effect_duration_time_buff)if(dd.trans_type==database.BattleEffectTrans.Damage_Increased||dd.trans_type==database.BattleEffectTrans.Defence_Increased||dd.trans_type==database.BattleEffectTrans.Attack_Point_Abs_Inc||dd.trans_type==database.BattleEffectTrans.Defence_Point_Rate_Inc||dd.trans_type==database.BattleEffectTrans.Guard_Invoke_Rate_inc||dd.trans_type==database.BattleEffectTrans.Guard_Defence_Rate_Inc||dd.trans_type==database.BattleEffectTrans.Critical_Percent_Rate_Inc||dd.trans_type==database.BattleEffectTrans.Critical_Power_Rate_inc||dd.trans_type==database.BattleEffectTrans.Attack_Speed_Inc||dd.trans_type==database.BattleEffectTrans.Caster_Lv_Def_Inc||dd.trans_type==database.BattleEffectTrans.Caster_Lv_Attk_Inc||dd.trans_type==database.BattleEffectTrans.Caster_Lv_Critical_Rate_Inc||dd.trans_type==database.BattleEffectTrans.Caster_Lv_Critical_Power_Inc){var inc_dur=dd.duration*equip_opt_durability_effect_duration_time_buff/100,duration=dd.duration+=inc_dur;dd.duration=duration}else if(dd.trans_type==database.BattleEffectTrans.None_Trans_Only_Effect_Use_Type&&is_exist_stat_buff_duration){inc_dur=dd.duration*equip_opt_durability_effect_duration_time_buff/100,duration=dd.duration+=inc_dur;dd.duration=duration}if(dd.trans_type==database.BattleEffectTrans.Damage_Dispersion){for(var gm_myteam=this.m_my_team.getTeamMembers(),gm_idx=0;gm_idx<gm_myteam.length;gm_idx++)if(gm_myteam[gm_idx].IsAlive())for(var gm_jdx=0;gm_jdx<gm_myteam[gm_idx].m_durability_effects.length;gm_jdx++)gm_myteam[gm_idx].m_durability_effects[gm_jdx].trans_type==database.BattleEffectTrans.Our_Team_Damage_Dec&&dd.gnrl_id==gm_myteam[gm_idx].m_durability_effects[gm_jdx].gnrl_id&&dd.is_friend_effect==gm_myteam[gm_idx].m_durability_effects[gm_jdx].is_friend_effect&&vec_dur.push_back(dd)}else{if(dd.trans_type==database.BattleEffectTrans.Angel_Stack_Attack_Inc)1==this.m_battle_general.general.gnrl_class&&(this.m_battle_general.stack_angel=0),dd.value=dd.durability.value*this.m_battle_general.stack_angel;else if(dd.trans_type==database.BattleEffectTrans.Angel_Stack_Defence_Inc)1==this.m_battle_general.general.gnrl_class&&(this.m_battle_general.stack_angel=0),dd.value=dd.durability.value*this.m_battle_general.stack_angel;else if(dd.trans_type==database.BattleEffectTrans.Angel_Stack_Tick_Life_Heal){1==this.m_battle_general.general.gnrl_class&&(this.m_battle_general.stack_angel=0);for(var one_tick_eff=0;one_tick_eff<dd.tick_effects.length;one_tick_eff++)dd.tick_effects[one_tick_eff].value=dd.tick_effects[one_tick_eff].onetime_effect.value+dd.value*this.m_battle_general.stack_angel,dd.tick_effects[one_tick_eff].max_value=dd.tick_effects[one_tick_eff].onetime_effect.max_value+dd.value*this.m_battle_general.stack_angel}else if(dd.trans_type==database.BattleEffectTrans.Glitter_Beach_Stack_Attaker_Light_Dmg_Inc){var stack=0;1<this.m_battle_general.general.gnrl_class&&(stack=this.m_battle_general.one_start_stack),dd.value=dd.durability.value*stack}else if(dd.trans_type==database.BattleEffectTrans.Glitter_Beach_Stack_ActiveSkill_Damage_Inc){stack=0;1<this.m_battle_general.general.gnrl_class&&(stack=this.m_battle_general.one_start_stack),dd.value=dd.durability.value*stack}else if(dd.trans_type==database.BattleEffectTrans.Timer_Passed_Stack_Up_Skill_Attk_Inc){stack=0;1<this.m_battle_general.general.gnrl_class&&(stack=this.m_battle_general.one_start_stack),dd.value=dd.durability.value*stack}else if(dd.trans_type==database.BattleEffectTrans.Random_Stat_Attack_50_To_100){var rand_attk=50*Math.random()+50;dd.value=rand_attk}else if(dd.trans_type==database.BattleEffectTrans.Random_Stat_Defence_50_To_100){var rand_def=50*Math.random()+50;dd.value=rand_def}vec_dur.push_back(dd)}}}}}for(var insert_dur=0;insert_dur<vec_dur.length;insert_dur++)t.addDurabilityEffect(vec_dur[insert_dur],this)}for(var sub_one_idx=0;sub_one_idx<this.m_battle_general.active_sub_skill[idx].onetime_effects.length;sub_one_idx++)if(this.m_battle_general.active_sub_skill[idx].onetime_effects[sub_one_idx].stat_trans==database.BattleEffectTrans.New_Reborn){var teammng=this.getMyTeam(),teammember=this.getMyTeam().getTeamMembers(),reborn_skill_target=5;this.IsDurabilityEffect(database.BattleEffectTrans.Target_Count_Change_One)&&(reborn_skill_target=1);var reborn_target=[],temp_list=[],add_pos=function(list,pos){-1==list.findIndex(function(obj){return obj==pos})&&list.push_back(pos)},self_position=this.getBattlePosition();self_position==db.BattlePosition.Head?(add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2)):self_position==db.BattlePosition.Body_1?(add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2)):self_position==db.BattlePosition.Body_2?(add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Tail_2),add_pos(temp_list,db.BattlePosition.Tail_1)):self_position==db.BattlePosition.Tail_1?(add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2)):self_position==db.BattlePosition.Tail_2&&(add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Tail_2),add_pos(temp_list,db.BattlePosition.Tail_1));for(var reborn_targe_condition=!1,iddx_p2=0;iddx_p2<temp_list.length&&1!=reborn_targe_condition;iddx_p2++){for(var found_idx_is=!1,found_push=[],ii_p2=0;ii_p2<teammember.length;ii_p2++){var gnrl_mem=teammember[ii_p2];gnrl_mem.getBattlePosition()!=temp_list[iddx_p2]||gnrl_mem.IsAlive()||gnrl_mem.findTransType(database.BattleEffectTrans.Freeze)||gnrl_mem.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)||(found_idx_is=!0,ii_p2,found_push.push(ii_p2))}if(1==found_idx_is)for(var jj_p2=0;jj_p2<found_push.length;jj_p2++)if(reborn_target.push(teammember[found_push[jj_p2]]),0==--reborn_skill_target){reborn_targe_condition=!0;break}}for(var friend_general=null,is_insert_friend=!1,member_idx_f=0;member_idx_f<teammember.length;member_idx_f++)teammember[member_idx_f].IsFriend()&&(friend_general=teammember[member_idx_f],is_insert_friend=!0);for(var member_idx=0;member_idx<reborn_target.length;member_idx++)reborn_target[member_idx].IsFriend()||null!=friend_general&&reborn_target[member_idx].getGeneral().position==friend_general.getGeneral().position&&is_insert_friend&&friend_general.IsAlive()||reborn_target[member_idx].IsAlive()||reborn_target[member_idx].addOnetimeEffect(this.m_battle_general.active_sub_skill[idx].onetime_effects[sub_one_idx],this.m_battle_general.active_sub_skill[idx].onetime_effects[sub_one_idx].stat_trans)&&(reborn_target[member_idx].m_attack_delta_time=.5,reborn_target[member_idx].m_is_death_animation_start=!1,this.m_game_type==db.BattleGameType.GreatWallDungeon?(reborn_target[member_idx].m_battle_general.is_dead=!1,0<this.m_battle_general.remain_skill_count?null!=reborn_target[member_idx]._skillEnable&&(teammng.IsPlaySkill()||reborn_target[member_idx]._skillEnable.skillEnable(!0),teammng.IsPlaySkill()&&(reborn_target[member_idx].unfocusBegin(),reborn_target[member_idx].isVisible()||reborn_target[member_idx].setVisible(!0))):1==this.m_use_greatwall_rebon_skil&&null!=reborn_target[member_idx]._skillEnable&&(teammng.IsPlaySkill()||reborn_target[member_idx]._skillEnable.skillEnable(!0),teammng.IsPlaySkill()&&(reborn_target[member_idx].unfocusBegin(),reborn_target[member_idx].isVisible()||reborn_target[member_idx].setVisible(!0)))):null!=reborn_target[member_idx]._skillEnable&&(teammng.IsPlaySkill()||reborn_target[member_idx]._skillEnable.skillEnable(!0),teammng.IsPlaySkill()&&(reborn_target[member_idx].unfocusBegin(),reborn_target[member_idx].isVisible()||reborn_target[member_idx].setVisible(!0))),this.m_team_type==BattleGeneral_TeamType.Left&&(this.m_game_type==db.BattleGameType.Mission?BattleMissionTaskManager._getInstance().removeDeathGeneral(reborn_target[member_idx].m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.WeeklyDungeon?BattleWeeklyDungeonTaskManager.getInstance().removeDeathGeneral(this.m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.EventDungeon?BattleEventDungeonTaskManager.getInstance().removeDeathGeneral(this.m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.TowerDungeon&&BattleTowerTaskManager._getInstance().removeDeathGeneral(reborn_target[member_idx].m_battle_general.general.gnrl_group)),267==reborn_target[member_idx].m_battle_general.general.gnrl_group&&(reborn_target[member_idx].m_battle_general.m_Is_Reborn_Active_Max_Charge=!0))}}}},bufAll:function(fx_id,is_loop){var part_arr=this.findFxPartByFxId(fx_id),part=part_arr[1];if(1==part_arr[0]){var duration_plus=0,damage_plus=0,onetime_damage_plus=0,extra_charge_buff=0;1<this.m_current_skill_charge_count&&(duration_plus=this.getSkillChargeBuf(SKILL_CHARGE_ATTR_DURABILITY,SKILL_CHARGE_EFFECT_TYPE_DURABILITY_SECOND,this.m_current_skill_charge_count),damage_plus=this.getSkillChargeBuf(SKILL_CHARGE_ATTR_DURABILITY,SKILL_CHARGE_EFFECT_TYPE_ABILITY_VALUE,this.m_current_skill_charge_count),onetime_damage_plus=this.getSkillChargeBuf(SKILL_CHARGE_ATTR_ONETIME,SKILL_CHARGE_EFFECT_TYPE_NONE,this.m_current_skill_charge_count),extra_charge_buff=this.getSkillChargeBuf(SKILL_CHARGE_ATTR_EXTRA_BUF,SKILL_CHARGE_EFFECT_TYPE_NONE,this.m_current_skill_charge_count));for(var i=0;i<this.m_target_ours.length;i++){var t=this.m_target_ours[i];if(t.IsAlive()){var gnrl_id=t.getGeneral().general.gnrl_id,found=this.m_map_cure.find(gnrl_id),found_value=this.m_map_cure.at(gnrl_id);if(1==found){var cure_list=found_value;if(0!=cure_list.length)for(var j=0;j<cure_list.length;j++){var cure=cure_list[j];this.execActiveSubSkillBuff(cure);for(var j2=0;j2<cure.durability_effects.length;j2++){if(cure.durability_effects[j2].duration+=duration_plus,cure.durability_effects[j2].damage=cure.durability_effects[j2].damage+cure.durability_effects[j2].damage*damage_plus/100,cure.durability_effects[j2].trans_type==database.BattleEffectTrans.HP_Shield_Caster_Max_HP){var max_hp=this.getMaxHealthPoint();cure.durability_effects[j2].life_shield=max_hp*cure.durability_effects[j2].value/1e4}else if(cure.durability_effects[j2].trans_type==database.BattleEffectTrans.Darkness_Shield){max_hp=this.getMaxHealthPoint();cure.durability_effects[j2].life_shield=max_hp*cure.durability_effects[j2].value/1e4}else cure.durability_effects[j2].trans_type==database.BattleEffectTrans.HP_Shield_Caster_Heal_Value&&(cure.durability_effects[j2].life_shield=cure.damage*cure.durability_effects[j2].value/1e4);t.addDurabilityEffect(cure.durability_effects[j2],this)}for(var j3=0;j3<cure.onetime_effects.length;j3++)if(cure.onetime_effects[j3].stat_trans==database.BattleEffectTrans.New_Reborn){var teammng=this.getMyTeam(),teammember=this.getMyTeam().getTeamMembers(),reborn_skill_target=5;this.IsDurabilityEffect(database.BattleEffectTrans.Target_Count_Change_One)&&(reborn_skill_target=1);var reborn_target=[],temp_list=[],add_pos=function(list,pos){-1==list.findIndex(function(obj){return obj==pos})&&list.push_back(pos)},self_position=this.getBattlePosition();self_position==db.BattlePosition.Head?(add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2)):self_position==db.BattlePosition.Body_1?(add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2)):self_position==db.BattlePosition.Body_2?(add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Tail_2),add_pos(temp_list,db.BattlePosition.Tail_1)):self_position==db.BattlePosition.Tail_1?(add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2)):self_position==db.BattlePosition.Tail_2&&(add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Tail_2),add_pos(temp_list,db.BattlePosition.Tail_1));for(var reborn_targe_condition=!1,iddx_p2=0;iddx_p2<temp_list.length&&1!=reborn_targe_condition;iddx_p2++){for(var found_idx_is=!1,found_push=[],ii_p2=0;ii_p2<teammember.length;ii_p2++){var gnrl_mem=teammember[ii_p2];gnrl_mem.getBattlePosition()!=temp_list[iddx_p2]||gnrl_mem.IsAlive()||gnrl_mem.findTransType(database.BattleEffectTrans.Freeze)||gnrl_mem.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)||(found_idx_is=!0,ii_p2,found_push.push(ii_p2))}if(1==found_idx_is)for(var jj_p2=0;jj_p2<found_push.length;jj_p2++)if(reborn_target.push(teammember[found_push[jj_p2]]),0==--reborn_skill_target){reborn_targe_condition=!0;break}}for(var friend_general=null,is_insert_friend=!1,jdx_10=0;jdx_10<teammember.length;jdx_10++)teammember[jdx_10].IsFriend()&&(friend_general=teammember[jdx_10],is_insert_friend=!0);for(var jdx_11=0;jdx_11<reborn_target.length;jdx_11++)reborn_target[jdx_11].IsFriend()||null!=friend_general&&reborn_target[jdx_11].getGeneral().position==friend_general.getGeneral().position&&is_insert_friend&&friend_general.IsAlive()||reborn_target[jdx_11].IsAlive()||reborn_target[jdx_11].addOnetimeEffect(cure.onetime_effects[j3],cure.onetime_effects[j3].stat_trans)&&(reborn_target[jdx_11].m_attack_delta_time=.5,reborn_target[jdx_11].m_is_death_animation_start=!1,this.m_game_type==db.BattleGameType.GreatWallDungeon?(reborn_target[jdx_11].m_battle_general.is_dead=!1,0<this.m_battle_general.remain_skill_count?null!=reborn_target[jdx_11]._skillEnable&&(teammng.IsPlaySkill()||reborn_target[jdx_11]._skillEnable.skillEnable(!0),teammng.IsPlaySkill()&&(reborn_target[jdx_11].unfocusBegin(),reborn_target[jdx_11].isVisible()||reborn_target[jdx_11].setVisible(!0))):1==this.m_use_greatwall_rebon_skil&&null!=reborn_target[jdx_11]._skillEnable&&(teammng.IsPlaySkill()||reborn_target[jdx_11]._skillEnable.skillEnable(!0),teammng.IsPlaySkill()&&(reborn_target[jdx_11].unfocusBegin(),reborn_target[jdx_11].isVisible()||reborn_target[jdx_11].setVisible(!0)))):null!=reborn_target[jdx_11]._skillEnable&&(teammng.IsPlaySkill()||reborn_target[jdx_11]._skillEnable.skillEnable(!0),teammng.IsPlaySkill()&&(reborn_target[jdx_11].unfocusBegin(),reborn_target[jdx_11].isVisible()||reborn_target[jdx_11].setVisible(!0))),this.m_team_type==BattleGeneral_TeamType.Left&&(this.m_game_type==db.BattleGameType.Mission?BattleMissionTaskManager._getInstance().removeDeathGeneral(reborn_target[jdx_11].m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.WeeklyDungeon?BattleWeeklyDungeonTaskManager.getInstance().removeDeathGeneral(this.m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.EventDungeon?BattleEventDungeonTaskManager.getInstance().removeDeathGeneral(this.m_battle_general.general.gnrl_group):this.m_game_type==db.BattleGameType.TowerDungeon&&BattleTowerTaskManager._getInstance().removeDeathGeneral(reborn_target[jdx_11].m_battle_general.general.gnrl_group)),267==reborn_target[jdx_11].m_battle_general.general.gnrl_group&&(reborn_target[jdx_11].m_battle_general.m_Is_Reborn_Active_Max_Charge=!0))}else cure.onetime_effects[j3].value+=onetime_damage_plus,0<extra_charge_buff&&(cure.onetime_effects[j3].value=cure.onetime_effects[j3].value*(extra_charge_buff/100)),t.addOnetimeEffect(cure.onetime_effects[j3],database.BattleEffectTrans.None)}}var fx=this.recycledFxNode(part);this.m_fx_used.push(fx),fx.setPosition(0,0),t.addChild(fx),fx.runFXAnimation(FX_Animation.FX_GRADE_1,is_loop),is_loop||fx.setReserveRemove(!0)}}this.m_map_cure.clear()}},bufOne:function(target){if(!this.m_map_cure.empty()&&target.IsAlive()){var gnrl_id=target.getGeneral().general.gnrl_id,found=this.m_map_cure.find(gnrl_id),found_value=this.m_map_cure.at(gnrl_id);if(1==found){var cure_list=found_value;if(0!=cure_list.length){var duration_plus=0;0<this.m_current_skill_charge_count&&(duration_plus=this.getSkillChargeBuf(SKILL_CHARGE_ATTR_DURABILITY,SKILL_CHARGE_EFFECT_TYPE_DURABILITY_SECOND,this.m_current_skill_charge_count));for(var i=0;i<cure_list;i++){for(var cure=cure_list[i],i2=0;i2<cure.durability_effects.length;i2++)cure.durability_effects[i2].duration+=duration_plus,target.addDurabilityEffect(cure.durability_effects[i2],this);for(var i3=0;i3<cure.onetime_effects.length;i3++)target.addOnetimeEffect(cure.onetime_effects[i3],database.BattleEffectTrans.None);this.execActiveSubSkillBuff(cure)}}}}},impactAll:function(hit_point,duration,attack_type){if(attack_type==Hit_Attack_Type.ATTACK_1||attack_type==Hit_Attack_Type.ATTACK_2||attack_type==Hit_Attack_Type.ATTACK_3)for(var input_value=0,output_point=0,i=0;i<this.m_target_enemys.length;i++){if("object"==typeof(t=this.m_target_enemys[i]))if(t.IsAlive()){var gnrl_id=t.getGeneral().general.gnrl_id,position=t.getBattlePosition();(a_map_damage=[])[0]=[gnrl_id,position];var found=this.m_map_damage.find(a_map_damage[0]),found_value=this.m_map_damage.at(a_map_damage[0]);if(1==found){var damage_list=null;if(0!=(damage_list=found_value).length){(damage=damage_list.shift()).hit_point=hit_point,this.m_map_damage.insert(a_map_damage[0],damage_list);for(var is_exist=!1,map_skill_damage_keys=this.m_map_damage.keys(),idx=0;idx<map_skill_damage_keys.length;idx++){var num1=map_skill_damage_keys[idx].split(",");if((arr_map_dmg=[])[0]=[parseInt(num1[0]),parseInt(num1[1])],null!=(m=this.m_map_damage.at(arr_map_dmg[0]))&&0!=m.length){is_exist=!0;break}}t.addDamage(this,damage)&&t.beginHit(duration,damage.is_evasion),0==damage_list.length&&this.execActiveSubSkillAttk(damage),this.playHitSoundEffect(damage.attack_type)}}}else if(!this.findTransType(database.BattleEffectTrans.Blind_Darkness)&&!this.findTransType(database.BattleEffectTrans.Not_Resist_Blind)){gnrl_id=t.getGeneral().general.gnrl_id,position=t.getBattlePosition();(a_map_damage=[])[0]=[gnrl_id,position];found=this.m_map_damage.find(a_map_damage[0]),found_value=this.m_map_damage.at(a_map_damage[0]);if(1==found){damage_list=null;if(0!=(damage_list=found_value).length){var damage_point=(damage=damage_list.shift()).damage;if(damage.damage_type==database.DamageType.Critical){var buf_cri_rate=this.m_my_team.getLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value,this.m_battle_general);buf_cri_rate+=this.m_my_team.getSpecialLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value,this.m_battle_general),buf_cri_rate+=this.durabilityBufDebufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value),buf_cri_rate+=this.m_my_team.getBattleFormationBufPoint(this.m_battle_general.position,database.BattleChainStatType.ChainStatType_Cri_Power_Value,this.m_battle_general),buf_cri_rate+=this.m_my_team.getFriendLeaderSkillBuf(database.BattleChainStatType.ChainStatType_Cri_Power_Value,this.m_battle_general),buf_cri_rate+=this.m_my_team.getPassiveSkillBufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value,this.m_battle_general),buf_cri_rate+=t.m_my_team.getTargetTeamPassiveSkillDebufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value),buf_cri_rate+=this.getEventDungeonGnrlBuf(database.BattleChainStatType.ChainStatType_Cri_Power_Value);var basePower=this.m_battle_general.general.cri_ratio;0<this.m_battle_general.limit_step_id&&(basePower*=this.m_general_limit_ability.cri_rate),damage_point*=(basePower+buf_cri_rate)/1e4}(damage_point*=120/(t.getDefencePoint()+100))<1&&(damage_point=1);for(i=0;i<damage.onetime_effects.length;i++){(o=damage.onetime_effects[i]).our_enemy==database.BattleSelfOther.Self&&(o.input_ability_type==database.BattleInputAbility.Damage?input_value=damage_point:o.input_ability_type==database.BattleInputAbility.Attack&&(input_value=damage_point),0<input_value&&o.output_ability_type==database.BattleOutputAbility.Life&&(output_point+=input_value*o.value/100))}this.playHitSoundEffect(damage.attack_type),(a_map_damage=[])[0]=[gnrl_id,position],this.m_map_skill_damage.insert(a_map_damage[0],damage_list);for(is_exist=!1,map_skill_damage_keys=this.m_map_skill_damage.keys(),idx=0;idx<map_skill_damage_keys.length;idx++){num1=map_skill_damage_keys[idx].split(",");if((arr_map_dmg=[])[0]=[parseInt(num1[0]),parseInt(num1[1])],null!=(m=this.m_map_skill_damage.at(arr_map_dmg[0]))&&0!=m.length){is_exist=!0;break}}damage.is_last_hit&&this.CheckBaseSkillToTargetDead(this,t,damage),is_exist||this.execActiveSubSkillAttk(damage)}}0<output_point&&(0<output_point&&(output_point=this.getSpecialAbilityRecovertyInc(output_point)),this.getBloodSucking(output_point))}}else if(attack_type==Hit_Attack_Type.SKILL)for(i=0;i<this.m_skill_target_enemys.length;i++){if("object"==typeof(t=this.m_skill_target_enemys[i]))if(t.IsAlive()){gnrl_id=t.getGeneral().general.gnrl_id,position=t.getBattlePosition();(a_map_damage=[])[0]=[gnrl_id,position];found=this.m_map_skill_damage.find(a_map_damage[0]),found_value=this.m_map_skill_damage.at(a_map_damage[0]);if(1==found){damage_list=null;if(0!=(damage_list=found_value).length){(damage=damage_list.shift()).hit_point=hit_point,(a_map_damage=[])[0]=[gnrl_id,position],this.m_map_skill_damage.insert(a_map_damage[0],damage_list);for(is_exist=!1,map_skill_damage_keys=this.m_map_skill_damage.keys(),idx=0;idx<map_skill_damage_keys.length;idx++){num1=map_skill_damage_keys[idx].split(",");if((arr_map_dmg=[])[0]=[parseInt(num1[0]),parseInt(num1[1])],null!=(m=this.m_map_skill_damage.at(arr_map_dmg[0]))&&0!=m.length){is_exist=!0;break}}if(t.addDamage(this,damage)&&t.beginHit(duration,damage.is_evasion),is_exist){if(is_exist&&1==damage.is_sub_skill)for(var map_skill_damage_keys2=this.m_map_skill_damage.keys(),idx2=0;idx2<map_skill_damage_keys2.length;idx2++){var num2=map_skill_damage_keys[idx2].split(",");if((arr_map_dmg2=[])[0]=[parseInt(num2[0]),parseInt(num2[1])],null!=(m2=this.m_map_skill_damage.at(arr_map_dmg2[0]))&&0!=m2.length){m2[0].is_sub_skill=!0;for(var dd_idx=0;dd_idx<damage.durability_effects.length;dd_idx++){var dur=$.extend({},damage.durability_effects[dd_idx]);m2[0].durability_effects.push_back(dur)}}}}else this.execActiveSubSkillAttk(damage);this.playHitSoundEffect(damage.attack_type)}}}else{gnrl_id=t.getGeneral().general.gnrl_id,position=t.getBattlePosition();(a_map_damage=[])[0]=[gnrl_id,position];found=this.m_map_skill_damage.find(a_map_damage[0]),found_value=this.m_map_skill_damage.at(a_map_damage[0]);if(1==found){damage_list=null;if(0!=(damage_list=found_value).length){var damage=damage_list.shift();this.playHitSoundEffect(damage.attack_type),(a_map_damage=[])[0]=[gnrl_id,position],this.m_map_skill_damage.insert(a_map_damage[0],damage_list);for(is_exist=!1,map_skill_damage_keys=this.m_map_skill_damage.keys(),idx=0;idx<map_skill_damage_keys.length;idx++){var arr_map_dmg,m;num1=map_skill_damage_keys[idx].split(",");if((arr_map_dmg=[])[0]=[parseInt(num1[0]),parseInt(num1[1])],null!=(m=this.m_map_skill_damage.at(arr_map_dmg[0]))&&0!=m.length){is_exist=!0;break}}if(damage.is_last_hit&&this.CheckBaseSkillToTargetDead(this,t,damage),is_exist){if(is_exist&&1==damage.is_sub_skill)for(map_skill_damage_keys2=this.m_map_skill_damage.keys(),idx2=0;idx2<map_skill_damage_keys2.length;idx2++){var arr_map_dmg2,m2;num2=map_skill_damage_keys[idx2].split(",");if((arr_map_dmg2=[])[0]=[parseInt(num2[0]),parseInt(num2[1])],null!=(m2=this.m_map_skill_damage.at(arr_map_dmg2[0]))&&0!=m2.length){m2[0].is_sub_skill=!0;for(dd_idx=0;dd_idx<damage.durability_effects.length;dd_idx++){dur=$.extend({},damage.durability_effects[dd_idx]);m2[0].durability_effects.push_back(dur)}}}}else this.execActiveSubSkillAttk(damage)}}}}else if(attack_type==Hit_Attack_Type.BLOOD_SUCKING)for(input_value=0,output_point=0,i=0;i<this.m_skill_target_enemys.length;i++){var t;if("object"==typeof(t=this.m_skill_target_enemys[i])){gnrl_id=t.getGeneral().general.gnrl_id,position=t.getBattlePosition();(a_map_damage=[])[0]=[gnrl_id,position];found=this.m_map_skill_damage.find(a_map_damage[0]),found_value=this.m_map_skill_damage.at(a_map_damage[0]);if(1==found){damage_list=null;if(0!=(damage_list=found_value).length){damage_point=(damage=damage_list.shift()).damage;if(damage.damage_type==database.DamageType.Critical){buf_cri_rate=this.m_my_team.getLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value,this.m_battle_general);buf_cri_rate+=this.m_my_team.getSpecialLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value,this.m_battle_general),buf_cri_rate+=this.durabilityBufDebufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value),buf_cri_rate+=this.m_my_team.getBattleFormationBufPoint(this.m_battle_general.position,database.BattleChainStatType.ChainStatType_Cri_Power_Value,this.m_battle_general),buf_cri_rate+=this.m_my_team.getFriendLeaderSkillBuf(database.BattleChainStatType.ChainStatType_Cri_Power_Value,this.m_battle_general),buf_cri_rate+=this.m_my_team.getPassiveSkillBufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value,this.m_battle_general),buf_cri_rate+=t.m_my_team.getTargetTeamPassiveSkillDebufPoint(database.BattleChainStatType.ChainStatType_Cri_Power_Value),buf_cri_rate+=this.getEventDungeonGnrlBuf(database.BattleChainStatType.ChainStatType_Cri_Power_Value);basePower=this.m_battle_general.general.cri_ratio;0<this.m_battle_general.limit_step_id&&(basePower*=this.m_general_limit_ability.cri_rate),damage_point*=(basePower+buf_cri_rate)/1e4}damage_point*=120/(t.getDefencePoint()+100);var guard_random=parseInt(1e4*Math.random()),guard_rate=0,guard_power=0;guard_power=t.checkGuardRateAndValue2(guard_power),guard_random<(guard_rate=t.checkGuardRateAndValue(guard_rate))&&(damage_point-=damage_point*guard_power/1e4);var send_damage=this.durabilityBufDebufPoint(database.BattleChainStatType.ChainStatType_After_Send_Damage_Rate);0<send_damage&&(damage_point+=damage_point*send_damage/1e4);var a_map_damage,recv_damage=t.durabilityBufDebufPoint(database.BattleChainStatType.ChainStatType_After_Recv_Damage_Rate);0<recv_damage&&(damage_point+=damage_point*recv_damage/1e4);for(var dur_pdx=0;dur_pdx<t.m_durability_effects.length;dur_pdx++)t.m_durability_effects[dur_pdx].trans_type==database.BattleEffectTrans.Attaker_Fire_Dmg_Inc?getElementType()==ELEMENT_TYPE_FIRE&&(recv_damage+=t.m_durability_effects[dur_pdx].value):t.m_durability_effects[dur_pdx].trans_type==database.BattleEffectTrans.Attaker_Water_Dmg_Inc?this.getElementType()==ELEMENT_TYPE_WATER&&(recv_damage+=t.m_durability_effects[dur_pdx].value):t.m_durability_effects[dur_pdx].trans_type==database.BattleEffectTrans.Attaker_Wind_Dmg_Inc?this.getElementType()==ELEMENT_TYPE_WIND&&(recv_damage+=t.m_durability_effects[dur_pdx].value):t.m_durability_effects[dur_pdx].trans_type==database.BattleEffectTrans.Attaker_Light_Dmg_Inc||t.m_durability_effects[dur_pdx].trans_type==database.BattleEffectTrans.Glitter_Beach_Stack_Attaker_Light_Dmg_Inc?this.getElementType()==ELEMENT_TYPE_LIGHT&&(recv_damage+=t.m_durability_effects[dur_pdx].value):t.m_durability_effects[dur_pdx].trans_type==database.BattleEffectTrans.Attaker_Dark_Dmg_Inc&&this.getElementType()==ELEMENT_TYPE_DARK&&(recv_damage+=t.m_durability_effects[dur_pdx].value);if(damage.attack_type==Hit_Attack_Type.BLOOD_SUCKING){var pp=0;t.findTransType(database.BattleEffectTrans.After_Recv_Skill_Dmg_Dec_Rate)&&(pp=t.durabilityBufPoint(database.BattleEffectTrans.After_Recv_Skill_Dmg_Dec_Rate));var one_list=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Skill_Hitted,one_list);for(var one_idx=0;one_idx<one_list.length;one_idx++)one_list[one_idx].stat_trans==database.BattleEffectTrans.After_Recv_Skill_Dmg_Dec_Rate&&(pp+=one_list[one_idx].value);0!=pp&&(damage_point-=damage_point*pp/100)}if(damage.attack_type==Hit_Attack_Type.BLOOD_SUCKING){var skill_attk_buf_point=this.durabilityBufPoint(database.BattleEffectTrans.ActiveSkill_Damage_Inc);skill_attk_buf_point+=this.durabilityBufPoint(database.BattleEffectTrans.Passive_Duration_Active_Skill_Damage_Inc),skill_attk_buf_point+=this.durabilityBufDebufPoint(database.BattleChainStatType.CainStatType_Skill_Attk_Damage_Inc_Rate,database.BattleInvokeType.BattleInvokeType_None),skill_attk_buf_point-=this.durabilityBufPoint(database.BattleEffectTrans.ActiveSkill_Damage_Dec),skill_attk_buf_point+=this.durabilityBufPoint(database.BattleEffectTrans.Glitter_Beach_Stack_ActiveSkill_Damage_Inc),damage_point+=damage_point*(skill_attk_buf_point+=this.durabilityBufPoint(database.BattleEffectTrans.Timer_Passed_Stack_Up_Skill_Attk_Inc))/100}damage_point<1&&(damage_point=1);for(i=0;i<damage.onetime_effects.length;i++){var o;(o=damage.onetime_effects[i]).our_enemy==database.BattleSelfOther.Self&&(o.input_ability_type==database.BattleInputAbility.Damage?input_value=damage_point:o.input_ability_type==database.BattleInputAbility.Attack&&(input_value=damage_point),0<input_value&&o.output_ability_type==database.BattleOutputAbility.Life&&(output_point+=input_value*o.value/100))}0==damage_list.length&&this.execActiveSubSkillAttk(damage),(a_map_damage=[])[0]=[gnrl_id,position],this.m_map_skill_damage.insert(a_map_damage[0],damage_list)}}if(0<output_point){0<output_point&&(output_point=this.getSpecialAbilityRecovertyInc(output_point));for(var dur_Heal_inc_idx=0;dur_Heal_inc_idx<this.m_durability_effects.length;dur_Heal_inc_idx++)this.m_durability_effects[dur_Heal_inc_idx].trans_type==database.BattleEffectTrans.Heal_Value_Inc&&(output_point+=output_point*this.m_durability_effects[dur_Heal_inc_idx].value/1e4);this.getBloodSucking(output_point)}}}},IsSkillFxId:function(fx_id){var is_skill=!1;return-1!=fx_id.search("fx_skill_")&&(is_skill=!0),is_skill},impact:function(target,duration,is_skill){247==this.m_battle_general.general.gnrl_group&&is_skill&&cc.log(cmString("%s","impact"));var a_map_damage,gnrl_id=target.getGeneralID(),posision=target.getBattlePosition();if(target.IsAlive())if((a_map_damage=[])[0]=[gnrl_id,posision],is_skill){var found=this.m_map_skill_damage.find(a_map_damage[0]),found_value=this.m_map_skill_damage.at(a_map_damage[0]);if(1==found){var damage_list=null;if(0!=(damage_list=found_value).length){(damage=damage_list.shift()).hit_point=3,this.m_map_skill_damage.insert(a_map_damage[0],damage_list);for(var is_exist=!1,map_skill_damage_keys=this.m_map_skill_damage.keys(),idx=0;idx<map_skill_damage_keys.length;idx++){var num1=map_skill_damage_keys[idx].split(",");if((arr_map_dmg=[])[0]=[parseInt(num1[0]),parseInt(num1[1])],null!=(m=this.m_map_skill_damage.at(arr_map_dmg[0]))&&0!=m.length){is_exist=!0;break}}if(target.addDamage(this,damage)&&target.beginHit(duration,damage.is_evasion),is_exist){if(is_exist&&1==damage.is_sub_skill)for(var map_skill_damage_keys2=this.m_map_skill_damage.keys(),idx2=0;idx2<map_skill_damage_keys2.length;idx2++){var num2=map_skill_damage_keys[idx2].split(",");if((arr_map_dmg2=[])[0]=[parseInt(num2[0]),parseInt(num2[1])],null!=(m2=this.m_map_skill_damage.at(arr_map_dmg2[0]))&&0!=m2.length){m2[0].is_sub_skill=!0;for(var dd_idx=0;dd_idx<damage.durability_effects.length;dd_idx++){var dur=$.extend({},damage.durability_effects[dd_idx]);m2[0].durability_effects.push_back(dur)}}}}else this.execActiveSubSkillAttk(damage);this.playHitSoundEffect(damage.attack_type)}}}else{found=this.m_map_damage.find(a_map_damage[0]),found_value=this.m_map_damage.at(a_map_damage[0]);if(1==found){damage_list=null;if(0!=(damage_list=found_value).length){(damage=damage_list.shift()).hit_point=3,this.m_map_damage.insert(a_map_damage[0],damage_list);for(is_exist=!1,map_skill_damage_keys=this.m_map_damage.keys(),idx=0;idx<map_skill_damage_keys.length;idx++){num1=map_skill_damage_keys[idx].split(",");if((arr_map_dmg=[])[0]=[parseInt(num1[0]),parseInt(num1[1])],null!=(m=this.m_map_damage.at(arr_map_dmg[0]))&&0!=m.length){is_exist=!0;break}}if(target.addDamage(this,damage)&&target.beginHit(duration,damage.is_evasion),is_exist){if(is_exist&&1==damage.is_sub_skill)for(map_skill_damage_keys2=this.m_map_skill_damage.keys(),idx2=0;idx2<map_skill_damage_keys2.length;idx2++){num2=map_skill_damage_keys[idx2].split(",");if((arr_map_dmg2=[])[0]=[parseInt(num2[0]),parseInt(num2[1])],null!=(m2=this.m_map_skill_damage.at(arr_map_dmg2[0]))&&0!=m2.length){m2[0].is_sub_skill=!0;for(dd_idx=0;dd_idx<damage.durability_effects.length;dd_idx++){dur=$.extend({},damage.durability_effects[dd_idx]);m2[0].durability_effects.push_back(dur)}}}}else this.execActiveSubSkillAttk(damage);this.playHitSoundEffect(damage.attack_type)}}}else if((a_map_damage=[])[0]=[gnrl_id,posision],is_skill){found=this.m_map_skill_damage.find(a_map_damage[0]),found_value=this.m_map_skill_damage.at(a_map_damage[0]);if(1==found)if(0!=(damage_list=found_value).length){(damage=damage_list.shift()).hit_point=3,this.m_map_skill_damage.insert(a_map_damage[0],damage_list);for(is_exist=!1,map_skill_damage_keys=this.m_map_skill_damage.keys(),idx=0;idx<map_skill_damage_keys.length;idx++){var arr_map_dmg,m;num1=map_skill_damage_keys[idx].split(",");if((arr_map_dmg=[])[0]=[parseInt(num1[0]),parseInt(num1[1])],null!=(m=this.m_map_skill_damage.at(arr_map_dmg[0]))&&0!=m.length){is_exist=!0;break}}if(damage.is_last_hit&&this.CheckBaseSkillToTargetDead(this,target,damage),is_exist){if(is_exist&&1==damage.is_sub_skill)for(map_skill_damage_keys2=this.m_map_skill_damage.keys(),idx2=0;idx2<map_skill_damage_keys2.length;idx2++){var arr_map_dmg2,m2;num2=map_skill_damage_keys[idx2].split(",");if((arr_map_dmg2=[])[0]=[parseInt(num2[0]),parseInt(num2[1])],null!=(m2=this.m_map_skill_damage.at(arr_map_dmg2[0]))&&0!=m2.length){m2[0].is_sub_skill=!0;for(dd_idx=0;dd_idx<damage.durability_effects.length;dd_idx++){dur=$.extend({},damage.durability_effects[dd_idx]);m2[0].durability_effects.push_back(dur)}}}}else this.execActiveSubSkillAttk(damage);this.playHitSoundEffect(damage.attack_type)}}else{var damage;found=this.m_map_damage.find(a_map_damage[0]),found_value=this.m_map_damage.at(a_map_damage[0]);if(1==found)if(0!=(damage_list=found_value).length)(damage=damage_list.shift()).hit_point=3,target.beginHit(duration,damage.is_evasion),this.playHitSoundEffect(damage.attack_type),damage.is_last_hit&&this.CheckBaseSkillToTargetDead(this,target,damage),0==damage_list.length&&this.execActiveSubSkillAttk(damage),this.m_map_damage.insert(a_map_damage[0],damage_list)}},cbTransShaderCallback:function(node){this.checkTransShader()},cbUnfocusTransShaderCallback:function(node){this.runTransShader(TransShaderType.None,0,null,0)},positionRevision:function(duration,move){var moveby=cc.moveBy(duration/this.m_cur_time_scale,move),cb=cc.callFunc(this.cbPositionRevision,this),seq=cc.sequence(moveby,cb);this.runAction(seq)},cbPositionRevision:function(){this.m_cur_state==BattleGeneral_GeneralState.Idle_Revision&&(this.setGeneralState(BattleGeneral_GeneralState.Idle),this.playAction(ActionType.Attack_Idle),cc.log("Attack_Idle Check 5"),this.m_cur_pos=ZERO())},checkPositionRevision:function(move){if(this.addDebugGeneral("checkPositionRevision"),move=cc.p(0,0),this.m_my_team.getBattleState()!=BattleState.GamePlaying)return!1;if(this.getArmServiceType()==db.GeneralArmServiceType.ArmServiceType_Ranger)return!1;var boss_offset_y=0;(this.m_game_type==db.BattleGameType.DailyDungeon||this.m_game_type==db.BattleGameType.RaidDungeon||this.m_my_team.getTargetTeam().IsCutinStage())&&this.m_team_type==BattleGeneral_TeamType.Left&&(boss_offset_y-=5);var is_revision_need=!1,pos=this.getPosition();if(pos.y<150||330<pos.y)return!1;var my_collider=cc.rect(0,0,0,0);my_collider=cc.rect(pos.x-20,pos.y-20,40,40);for(var collider=cc.rect(0,0,0,0),member_position=cc.p(0,0),result_list=[],team_mem=this.m_my_team.getTeamMembers(),i=0;i<team_mem.length;i++){var m=team_mem[i];m!=this&&m.IsAlive()&&(member_position=m.getPosition(),collider=cc.rect(member_position.x-20,member_position.y-20,40,40),cc.rectIntersectsRect(my_collider,collider)&&result_list.push(m))}var my_position=this.getBattlePosition(),my_pos=my_position;for(i=0;i<result_list.length;i++){var position=result_list[i].getBattlePosition(),arm_type=result_list[i].getArmServiceType();if(position<my_pos||arm_type==db.GeneralArmServiceType.ArmServiceType_Ranger){is_revision_need=!0;break}}if(is_revision_need){my_position==db.BattlePosition.Body_1||my_position==db.BattlePosition.Tail_1||my_position==db.BattlePosition.Head?move.y+=61+boss_offset_y:my_position!=db.BattlePosition.Body_2&&my_position!=db.BattlePosition.Tail_2||(move.y-=61+boss_offset_y)}return this.m_revision_pos=move,is_revision_need},setAutoSkill:function(isAuto){this.m_team_type==BattleGeneral_TeamType.Left?this.m_is_auto_skill=isAuto:this.m_is_auto_skill=!0},cancelUsedEffect:function(){},generalPause:function(){var entry=this.m_sk.getCurrent(0);null!=entry?entry.timeScale=0:this.m_cur_state<BattleGeneral_GeneralState.Death_Anim&&this.addDebugGeneral("generalPause - entry is null");for(var i=0;i<this.m_fx_used.length;i++){var fx=this.m_fx_used[i];fx.is_pause=!0,null!=fx.m_skeleton&&fx.m_skeleton.pause()}this.pauseCommonEfffects(),this.addDebugGeneral("generalPause")},generalResume:function(){if(this.m_focus_state!=FOCUS_STATE.FOCUS){var entry=this.m_sk.getCurrent(0);null!=entry?entry.timeScale=this.m_cur_time_scale:this.m_cur_state<BattleGeneral_GeneralState.Death_Anim&&this.addDebugGeneral("generalResume - entry is null");for(var i=0;i<this.m_fx_used.length;i++){var fx=this.m_fx_used[i];fx.is_pause=!1,null!=fx.m_skeleton&&fx.m_skeleton.resume()}this.resumeCommonEffects()}this.m_cur_state==BattleGeneral_GeneralState.Freeze&&this.addDebugGeneral("generalResume - cur state - Freeze"),this.addDebugGeneral("generalResume")},allPause:function(){this.generalPause(),this.m_is_general_pause=!0;for(var i=0;i<this.m_skill_sounds.length;i++)AudioEngine.getInstance().pauseEffect(this.m_skill_sounds[i]);this.addDebugGeneral("allPause")},allResume:function(){this.m_focus_state!=FOCUS_STATE.NONE&&this.m_focus_state!=FOCUS_STATE.FOCUS_SKILL||this.generalResume(),this.m_is_general_pause=!1;for(var i=0;i<this.m_skill_sounds.length;i++)AudioEngine.getInstance().resumeEffect(this.m_skill_sounds[i]);this.addDebugGeneral("allResume")},focusBegin:function(){var entry=this.m_sk.getCurrent(0);null!=entry?entry.timeScale=0:this.m_cur_state<BattleGeneral_GeneralState.Death_Ready&&this.addDebugGeneral("focusBegin - entry is null");for(var i=0;i<this.m_fx_used.length;i++){var fx=this.m_fx_used[i],fx_id=fx.getFxID();"string"==typeof fx_id&&-1!=fx_id.indexOf("fx_skill_cast")||(fx.is_pause=!0,null!=fx.m_skeleton&&fx.m_skeleton.pause())}this.pauseCommonEfffects();var snd=RES_CDN_SOUND+SND_TYPE+"sound/SE_battle_skill.mp3";AudioEngine.getInstance().playEffect(snd),this.m_focus_state=FOCUS_STATE.FOCUS,this.showInfoBar(!1),this.offLeader(),this.offBoss(),this.addDebugGeneral("focusBegin")},focusEnd:function(){var entry=this.m_sk.getCurrent(0);null!=entry?entry.timeScale=this.m_cur_time_scale:this.m_cur_state<BattleGeneral_GeneralState.Death_Ready&&this.addDebugGeneral("focusEnd - entry is null");for(var i=0;i<this.m_fx_used.length;i++){var fx=this.m_fx_used[i],fx_id=fx.getFxID();"string"==typeof fx_id&&-1!=fx_id.indexOf("fx_skill_cast")||(fx.is_pause=!1,null!=fx.m_skeleton&&fx.m_skeleton.resume())}this.resumeCommonEffects();try{var s_file=this.m_battle_general.active_skill[0].skill_action.action_sound,snd=RES_CDN_SOUND+SND_TYPE+"sound/"+s_file;if("0"!=s_file&&""!=s_file)AudioEngine.getInstance().playEffect(snd),this.m_skill_sounds.push(snd)}catch(e){cc.log(e)}this.m_focus_state==FOCUS_STATE.FOCUS&&(this.m_focus_state=FOCUS_STATE.FOCUS_SKILL),this.m_battle_general.is_zoom&&this.IsAlive()&&(this.m_team_type==BattleGeneral_TeamType.Left?this.onLeader():this.m_team_type==BattleGeneral_TeamType.Right&&this.m_game_type==db.BattleGameType.DailyDungeon&&this.m_battle_general.is_zoom?this.onBoss(DAILY_BOSS_BOTTOM_SCALE):this.onBoss(1)),this.addDebugGeneral("focusEnd")},unfocusBegin:function(is_hold_shader){if(null==is_hold_shader&&(is_hold_shader=!0),!(this.m_cur_state>=BattleGeneral_GeneralState.Death_Ready)){var entry=this.m_sk.getCurrent(0);null!=entry?(entry.timeScale=0,is_hold_shader&&255<=this.getOpacity()&&this.runTransShader(TransShaderType.Hold,0,null,0)):this.m_cur_state<BattleGeneral_GeneralState.Death_Anim&&this.addDebugGeneral("unfocusBegin - entry is null");for(var i=0;i<this.m_fx_used.length;i++){var fx=this.m_fx_used[i],fx_id=fx.getFxID();("string"!=typeof fx_id||"fx_skill_cast"!=fx_id&&"fx_critical_hit"!=fx_id&&"fx_hit"!=fx_id&&"fx_hit_daily"!=fx_id)&&(fx.is_pause=!0,null!=fx.m_skeleton&&fx.m_skeleton.pause())}this.pauseCommonEfffects(),this.m_focus_state=FOCUS_STATE.UNFOCUS,this.offLeader(),this.offBoss(),this.showInfoBar(!1),this.addDebugGeneral("unfocusBegin")}},unfocusEnd:function(){var entry=this.m_sk.getCurrent(0);null!=entry?(entry.timeScale=this.m_cur_time_scale,255<=this.getOpacity()&&this.runTransShader(TransShaderType.None,0,null,0)):this.m_cur_state<BattleGeneral_GeneralState.Death_Anim&&this.addDebugGeneral("unfocusEnd - entry is null");for(var i=0;i<this.m_fx_used.length;i++){var fx=this.m_fx_used[i];if(null!=fx){var fx_id=fx.getFxID();("string"!=typeof fx_id||"fx_skill_cast"!=fx_id&&"fx_critical_hit"!=fx_id&&"fx_hit"!=fx_id&&"fx_hit_daily"!=fx_id)&&(fx.is_pause=!1,null!=fx.m_skeleton&&fx.m_skeleton.resume())}}this.resumeCommonEffects(),this.m_battle_general.is_zoom&&this.IsAlive()&&(this.m_team_type==BattleGeneral_TeamType.Left?this.onLeader():this.m_team_type==BattleGeneral_TeamType.Right&&this.m_game_type==db.BattleGameType.DailyDungeon&&this.m_battle_general.is_zoom?this.onBoss(DAILY_BOSS_BOTTOM_SCALE):this.onBoss(1)),this.m_focus_state=FOCUS_STATE.NONE,this.m_cur_state==BattleGeneral_GeneralState.Idle&&(this.IsDurabilityEffect(database.BattleEffectTrans.Stun)||this.IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Stun)||this.IsDurabilityEffect(database.BattleEffectTrans.Motion_Singing)||(this.playAction(ActionType.Attack_Idle),cc.log("Attack_Idle Check 4"))),null!=this._skillEnable&&this.IsAlive()&&(this.m_team_type==BattleGeneral_TeamType.Left&&this.m_game_type==db.BattleGameType.GreatWallDungeon&&0==this.m_battle_general.remain_skill_count?this._skillEnable.skillEnable(!1):this._skillEnable.skillEnable(!0)),this.addDebugGeneral("unfocusEnd")},firstEnableSkillCooltime:function(){if(BattleContext._getInstance().getGameType()==db.BattleGameType.Prologue)this.m_is_first_enable_skill_cooltime=!0;else if(!this.m_is_first_enable_skill_cooltime){var pre_cool_time_buf=this.m_my_team.getLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Pre_Skill_Cooltime_Dec,this.m_battle_general);pre_cool_time_buf+=this.m_my_team.getSpecialLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Pre_Skill_Cooltime_Dec,this.m_battle_general);var pre_cool_time_buf_rate=this.m_my_team.getLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Pre_Skill_Cooltime_Rate,this.m_battle_general);pre_cool_time_buf_rate+=this.m_my_team.getSpecialLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Pre_Skill_Cooltime_Rate,this.m_battle_general);for(var i=0;i<this.m_battle_general.active_skill.length;i++){this.m_battle_general.active_skill[i].is_cooltime=!0;var pre_cool_time=this.m_battle_general.active_skill[i].skill.pre_cool_time-pre_cool_time_buf;pre_cool_time-=this.m_battle_general.active_skill[i].skill.pre_cool_time*pre_cool_time_buf_rate/100,this.m_battle_general.active_skill[i].cooltime=pre_cool_time}this.m_is_first_enable_skill_cooltime=!0}},cancelActiveSkill:function(){for(var i=0;i<this.m_battle_general.active_skill.length;i++)this.m_battle_general.active_skill[i].is_prepared&&(this.m_battle_general.active_skill[i].is_prepared=!1)},cancelActiveSkillForCutin:function(){for(var i=0;i<this.m_battle_general.active_skill.length;i++)this.m_battle_general.active_skill[i].is_prepared&&(this.m_battle_general.active_skill[i].is_prepared=!1,this.m_battle_general.active_skill[i].cooltime=0);this.playAction(ActionType.Attack_Idle),cc.log("Attack_Idle Check 3")},getAttackPoint:function(){var find_obj,point=0,p=0;if(point+=this.m_battle_general.attk,point+=p=this.m_battle_general.attk*this.durabilityBufDebufPoint(database.BattleChainStatType.ChainStatType_Attack_Rate)/100,point+=p=this.m_my_team.getBattleFormationBufPoint(this.m_battle_general.position,database.BattleChainStatType.ChainStatType_Attack_Rate,this.m_battle_general)*this.m_battle_general.attk/100,point+=p=this.m_my_team.getLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Attack_Rate,this.m_battle_general)*this.m_battle_general.attk/100,point+=p=this.m_my_team.getSpecialLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Attack_Rate,this.m_battle_general)*this.m_battle_general.attk/100,point+=p=this.m_my_team.getPassiveSkillBufPoint(database.BattleChainStatType.ChainStatType_Attack_Rate,this.m_battle_general)*this.m_battle_general.attk/100,point+=p=this.m_my_team.getTargetTeamPassiveSkillDebufPoint(database.BattleChainStatType.ChainStatType_Attack_Rate)*this.m_battle_general.attk/100,point-=p=this.m_my_team.getTargetTeam().getSpecialLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Enermy_Att_Inc_Rate,this.m_battle_general)*this.m_battle_general.attk/100,point+=p=this.m_my_team.getFriendLeaderSkillBuf(database.BattleChainStatType.ChainStatType_Attack_Rate,this.m_battle_general)*this.m_battle_general.attk/100,(find_obj=this.getTransPassiveSkillOneTimeEffectFind(database.BattleInvokeType.BattleInvokeType_Always,database.BattleEffectTrans.Life_Then_Attk_Inc)).find_one){var one=find_obj.one,max_health_point=this.getMaxHealthPoint(),life=100-this.m_life_point/max_health_point*100;(inc_value=(dec_life=Math.floor(life/one.value))*one.sub_value)>one.onetime_effect.limit_value/100&&(inc_value=one.onetime_effect.limit_value/100),point+=p=point*inc_value/100}if((find_obj=this.getTransPassiveSkillOneTimeEffectFind(database.BattleInvokeType.BattleInvokeType_Always,database.BattleEffectTrans.Life_Then_Attk_Dec)).find_one){one=find_obj.one,life=this.m_life_point/this.getMaxHealthPoint()*100;var inc_value,dec_life=Math.floor(life/one.sub_value);(inc_value=(dec_life+=1)*one.sub_value)>one.onetime_effect.limit_value/100&&(inc_value=one.onetime_effect.limit_value/100),point+=this.m_battle_general.attk*inc_value/100}var find_obj2=this.getTransPassiveSkillOneTimeEffectFind(database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleEffectTrans.Enermy_General_Trans_Type_Light_Dmg_Inc_Rate);if(find_obj2.find_one){for(var oneTime_effect=find_obj2.one,TargetTeam_GeneralList=this.m_my_team.getTargetTeam().getTeamMembers(),EnermyTeam_Trans_Light_Cnt=0,target_team_idx=0;target_team_idx<TargetTeam_GeneralList.size();target_team_idx++){TargetTeam_GeneralList[target_team_idx].getElementType()==ELEMENT_TYPE_LIGHT&&++EnermyTeam_Trans_Light_Cnt}if(0<EnermyTeam_Trans_Light_Cnt&&oneTime_effect.input_ability_type==database.BattleInputAbility.Attack&&oneTime_effect.output_ability_type==database.BattleOutputAbility.Damage){var min_value=oneTime_effect.onetime_effect.value,max_value=Math.max(oneTime_effect.onetime_effect.value,oneTime_effect.onetime_effect.max_value),effect_value=Math.random()*(max_value-min_value)+min_value;point+=this.m_battle_general.attk/100*(effect_value*EnermyTeam_Trans_Light_Cnt)}}var dur_list=[];this.findDuraibilityEffect(database.BattleInvokeType.BattleInvokeType_None,dur_list);for(var check_shield=!1,dur_idx=0;dur_idx<dur_list.length;dur_idx++){var dur=$.extend({},dur_list[dur_idx]);dur.trans_type!=database.BattleEffectTrans.HP_Shield_Caster_Max_HP&&dur.trans_type!=database.BattleEffectTrans.HP_Shield_Caster_Heal_Value||(check_shield=!0),dur=null}var one_list=[];if(this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_All_Attacks,one_list),!one_list.empty()&&1==check_shield)for(var one_idx=0;one_idx<one_list.length;one_idx++){(one=$.extend({},one_list[one_idx])).input_ability_type==database.BattleInputAbility.Good_Trans&&one.output_ability_type==database.BattleOutputAbility.Damage&&(point+=this.m_battle_general.attk*one.value/100),one=null}dur_list=one_list=null,point+=this.CheckAllMemberDmgIncForTrans(database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleEffectTrans.Our_Enermy_General_Trans_Type_Stun_Dmg_Inc_Rate,BattlePassiveType.Passive_Target_Type_All_Member),point+=this.CheckAllMemberDmgIncForTrans(database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleEffectTrans.Our_Enermy_General_Trans_Type_Freeze_Dmg_Inc_Rate,BattlePassiveType.Passive_Target_Type_All_Member),point+=this.CheckAllMemberDmgIncForTrans(database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleEffectTrans.Our_Enermy_General_Trans_Type_Poison_Dmg_Inc_Rate,BattlePassiveType.Passive_Target_Type_All_Member),point+=this.CheckAllMemberDmgIncForTrans(database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleEffectTrans.Our_Enermy_General_Trans_Type_Silence_Dmg_Inc_Rate,BattlePassiveType.Passive_Target_Type_All_Member),point+=this.CheckAllMemberDmgIncForTrans(database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleEffectTrans.Our_Enermy_General_Trans_Type_Burning_Dmg_Inc_Rate,BattlePassiveType.Passive_Target_Type_All_Member),point+=this.CheckAllMemberDmgIncForTrans(database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleEffectTrans.Our_Enermy_General_Trans_Type_Elec_Shork_Dmg_Inc_Rate,BattlePassiveType.Passive_Target_Type_All_Member),point+=this.CheckAllMemberDmgIncForTrans(database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleEffectTrans.Our_Enermy_General_Trans_Type_Wounds_Dmg_Inc_Rate,BattlePassiveType.Passive_Target_Type_All_Member),point+=this.CheckAllMemberDmgIncForTrans(database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleEffectTrans.Our_Enermy_General_Trans_Type_Blind_Darkness_Dmg_Inc_Rate,BattlePassiveType.Passive_Target_Type_All_Member);one_list=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Always,one_list);for(var idx=0;idx<one_list.length;idx++)if(one_list[idx].stat_trans==database.BattleEffectTrans.Our_Team_Dead_Count_Att_Inc){for(var member_team=this.getMyTeam().getTeamMembers(),deadcnt=0,jdx=0;jdx<member_team.length;jdx++)member_team[jdx].IsAlive()||++deadcnt;point+=this.m_battle_general.attk*deadcnt*(one_list[idx].value/100)}var per=this.m_life_point/this.getMaxHealthPoint(),invoke_type=database.BattleInvokeType.BattleInvokeType_None;if(.95<per?invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_95_per_Rate:.9<per?invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_90_per_Rate:.85<per?invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_85_per_Rate:.8<per?invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_80_per_Rate:.75<per?invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_75_per_Rate:.7<per?invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_70_per_Rate:.65<per?invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_65_per_Rate:.6<per?invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_60_per_Rate:.55<per?invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_55_per_Rate:.5<per&&(invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_50_per_Rate),invoke_type!=database.BattleInvokeType.BattleInvokeType_None){for(var ones=[];invoke_type!=database.BattleInvokeType.BattleInvokeType_None;)switch(this.findTransPassiveSkillOneTimeEffectsFind(invoke_type,ones),invoke_type){case database.BattleInvokeType.BattleInvokeType_Excess_Life_95_per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_90_per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Excess_Life_90_per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_85_per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Excess_Life_85_per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_80_per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Excess_Life_80_per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_75_per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Excess_Life_75_per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_70_per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Excess_Life_70_per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_65_per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Excess_Life_65_per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_60_per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Excess_Life_60_per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_55_per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Excess_Life_55_per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Excess_Life_50_per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Excess_Life_50_per_Rate:default:invoke_type=database.BattleInvokeType.BattleInvokeType_None}var p2=0;for(idx=0;idx<ones.length;idx++)if(ones[idx].input_ability_type==database.BattleInputAbility.Attack&&ones[idx].output_ability_type==database.BattleOutputAbility.Normal_Attk){min_value=ones[idx].onetime_effect.value,max_value=Math.max(ones[idx].onetime_effect.value,ones[idx].onetime_effect.max_value);p2+=effect_value=Math.random()*(max_value-min_value)+min_value}point+=this.m_battle_general.attk*p2/100}per=this.m_life_point/this.getMaxHealthPoint(),invoke_type=database.BattleInvokeType.BattleInvokeType_None;if(per<=.1?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_10_Per_Rate:per<=.2?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate:per<=.3?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate:per<=.4?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate:per<=.5?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate:per<=.75&&(invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate),invoke_type!=database.BattleInvokeType.BattleInvokeType_None){for(ones=[];invoke_type>=database.BattleInvokeType.BattleInvokeType_Below_Life_10_Per_Rate;)switch(this.findTransPassiveSkillOneTimeEffectsFind(invoke_type,ones),invoke_type){case database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_None;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_10_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate;break;default:invoke_type=database.BattleInvokeType.BattleInvokeType_None}p2=0;if(0<ones.size())for(idx=0;idx<ones.length;idx++)if(1e4*Math.random()+0<ones[idx].rate&&ones[idx].input_ability_type==database.BattleInputAbility.Attack&&ones[idx].output_ability_type==database.BattleOutputAbility.Normal_Attk){min_value=ones[idx].onetime_effect.value,max_value=Math.max(ones[idx].onetime_effect.value,ones[idx].onetime_effect.max_value);p2+=effect_value=Math.random()*(max_value-min_value)+min_value}point+=this.m_battle_general.attk*p2/100}point+=this.CheckAllMemberDmgIncForTrans(database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleEffectTrans.Enermy_General_Trans_Type_Stun_Attack_Inc,BattlePassiveType.Passive_Target_Type_Enemy_Team_member),point+=this.CheckAllMemberDmgIncForTrans(database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleEffectTrans.Enermy_General_Trans_Type_Freeze_Attack_Inc,BattlePassiveType.Passive_Target_Type_Enemy_Team_member),point+=this.CheckAllMemberDmgIncForTrans(database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleEffectTrans.Enermy_General_Trans_Type_Poison_Attack_Inc,BattlePassiveType.Passive_Target_Type_Enemy_Team_member),point+=this.CheckAllMemberDmgIncForTrans(database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleEffectTrans.Enermy_General_Trans_Type_Silence_Attack_Inc,BattlePassiveType.Passive_Target_Type_Enemy_Team_member),point+=this.CheckAllMemberDmgIncForTrans(database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleEffectTrans.Enermy_General_Trans_Type_Burning_Attack_Inc,BattlePassiveType.Passive_Target_Type_Enemy_Team_member),point+=this.CheckAllMemberDmgIncForTrans(database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleEffectTrans.Enermy_General_Trans_Type_Elec_Attack_Inc,BattlePassiveType.Passive_Target_Type_Enemy_Team_member),point+=this.CheckAllMemberDmgIncForTrans(database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleEffectTrans.Enermy_General_Trans_Type_Wound_Attack_Inc,BattlePassiveType.Passive_Target_Type_Enemy_Team_member),point+=this.CheckAllMemberDmgIncForTrans(database.BattleInvokeType.BattleInvokeType_All_Attacks,database.BattleEffectTrans.Enermy_General_Trans_Type_Blind_Attack_Inc,BattlePassiveType.Passive_Target_Type_Enemy_Team_member);var GeneralList=this.m_my_team.getTeamMembers();for(one_list=[],idx=0;idx<GeneralList.length;idx++){var EnemyTeam_Trans_Cnt=0;one_list=[],GeneralList[idx].findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Our_Team_All_Attack,one_list);for(jdx=0;jdx<one_list.length;jdx++)if(one_list[jdx].stat_trans==database.BattleEffectTrans.Enermy_General_Trans_Type_Wound_Attack_Inc_To_Our_team){for(var TargetTeam_GeneralList_1=this.m_my_team.getTargetTeam().getTeamMembers(),tdx=0;tdx<TargetTeam_GeneralList_1.length;tdx++)for(var vdx=0;vdx<TargetTeam_GeneralList_1[tdx].m_durability_effects.length;vdx++)TargetTeam_GeneralList_1[tdx].m_durability_effects[vdx].trans_type!=database.BattleEffectTrans.Wound_Obstruct_Heal&&TargetTeam_GeneralList_1[tdx].m_durability_effects[vdx].trans_type!=database.BattleEffectTrans.Not_Resist_Wound||++EnemyTeam_Trans_Cnt;if(0<EnemyTeam_Trans_Cnt&&one_list[jdx].input_ability_type==database.BattleInputAbility.Attack&&one_list[jdx].output_ability_type==database.BattleOutputAbility.Damage){min_value=one_list[jdx].onetime_effect.value,max_value=Math.max(one_list[jdx].onetime_effect.value,one_list[jdx].onetime_effect.max_value),effect_value=Math.random()*(max_value-min_value)+min_value;point+=this.m_battle_general.attk/100*(effect_value*EnemyTeam_Trans_Cnt)}TargetTeam_GeneralList_1=null}else if(one_list[jdx].stat_trans==database.BattleEffectTrans.Enermy_General_Trans_Type_Stun_Attack_Inc_To_Our_team){for(TargetTeam_GeneralList_1=this.m_my_team.getTargetTeam().getTeamMembers(),tdx=EnemyTeam_Trans_Cnt=0;tdx<TargetTeam_GeneralList_1.length;tdx++)for(vdx=0;vdx<TargetTeam_GeneralList_1[tdx].m_durability_effects.length;vdx++)TargetTeam_GeneralList_1[tdx].m_durability_effects[vdx].trans_type!=database.BattleEffectTrans.Stun&&TargetTeam_GeneralList_1[tdx].m_durability_effects[vdx].trans_type!=database.BattleEffectTrans.Not_Resist_Stun||++EnemyTeam_Trans_Cnt;if(one_list[jdx].input_ability_type==database.BattleInputAbility.Attack&&one_list[jdx].output_ability_type==database.BattleOutputAbility.Damage){min_value=one_list[jdx].onetime_effect.value,max_value=Math.max(one_list[jdx].onetime_effect.value,one_list[jdx].onetime_effect.max_value),effect_value=Math.random()*(max_value-min_value)+min_value;point+=this.m_battle_general.attk/100*(effect_value*EnemyTeam_Trans_Cnt)}TargetTeam_GeneralList_1=null}else if(one_list[jdx].stat_trans==database.BattleEffectTrans.Enemy_General_Elec_Shork_Our_Gener_Damage_Inc){var TargetTeam_GeneralList_2=this.m_my_team.getTargetTeam().getTeamMembers();for(tdx=EnemyTeam_Trans_Cnt=0;tdx<TargetTeam_GeneralList_2.length;tdx++)for(vdx=0;vdx<TargetTeam_GeneralList_2[tdx].m_durability_effects.length;vdx++)TargetTeam_GeneralList_2[tdx].m_durability_effects[vdx].trans_type!=database.BattleEffectTrans.Damage_Reduce&&TargetTeam_GeneralList_2[tdx].m_durability_effects[vdx].trans_type!=database.BattleEffectTrans.Not_Resist_Damage_Reduce||++EnemyTeam_Trans_Cnt;if(one_list[jdx].input_ability_type==database.BattleInputAbility.Attack&&one_list[jdx].output_ability_type==database.BattleOutputAbility.Damage){min_value=one_list[jdx].onetime_effect.value,max_value=Math.max(one_list[jdx].onetime_effect.value,one_list[jdx].onetime_effect.max_value),effect_value=Math.random()*(max_value-min_value)+min_value;point+=this.m_battle_general.attk/100*(effect_value*EnemyTeam_Trans_Cnt)}TargetTeam_GeneralList_2=null}}ones=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_All_Attacks,ones);for(one_idx=0;one_idx<ones.length;one_idx++){var alive_count=0;if(ones[one_idx].stat_trans==database.BattleEffectTrans.Attack_Increased_Check_Our_Team_State_Type_Dong)for(var OurTeam_GeneralList=this.m_my_team.getTeamMembers(),general_idx=0;general_idx<OurTeam_GeneralList.length;general_idx++)OurTeam_GeneralList[general_idx].IsAlive()&&OurTeam_GeneralList[general_idx].m_battle_general.general.state_type==STATE_TYPE_DONG&&++alive_count;if(0!=alive_count){min_value=ones[one_idx].onetime_effect.value,max_value=Math.max(ones[one_idx].onetime_effect.value,ones[one_idx].onetime_effect.max_value),effect_value=Math.random()*(max_value-min_value)+min_value;point+=this.m_battle_general.attk/100*(effect_value*alive_count)}}ones=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Always,ones);var is_activate=!1;for(one_idx=0;one_idx<ones.length;one_idx++){if(is_activate=!1,ones[one_idx].stat_trans==database.BattleEffectTrans.Trans_Defence_Inc_Damage_Inc)for(var dur_eff_jdx=0;dur_eff_jdx<this.m_durability_effects.length;dur_eff_jdx++)this.m_durability_effects[dur_eff_jdx].trans_type!=database.BattleEffectTrans.Defence_Increased&&this.m_durability_effects[dur_eff_jdx].trans_type!=database.BattleEffectTrans.Defence_Point_Rate_Inc&&this.m_durability_effects[dur_eff_jdx].trans_type!=database.BattleEffectTrans.Random_Stat_Defence_50_To_100&&this.m_durability_effects[dur_eff_jdx].trans_type!=database.BattleEffectTrans.Caster_Lv_Def_Inc||(is_activate=!0);if(is_activate){min_value=ones[one_idx].onetime_effect.value,max_value=Math.max(ones[one_idx].onetime_effect.value,ones[one_idx].onetime_effect.max_value),effect_value=Math.random()*(max_value-min_value)+min_value;point+=this.m_battle_general.attk*effect_value/100}}ones=[],this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Always,ones),is_activate=!1;for(one_idx=0;one_idx<ones.length;one_idx++){if(is_activate=!1,ones[one_idx].stat_trans==database.BattleEffectTrans.Self_Check_Radio_Show_Effect_Attack_Inc){for(var found_is=!1,found_idx=0;found_idx<this.m_durability_effects.length;found_idx++)if(found_idx,this.m_durability_effects[found_idx].trans_type==database.BattleEffectTrans.Target_Radio_Show_Buff_Effect){found_is=!0;break}1==found_is&&(is_activate=!0)}if(is_activate){min_value=ones[one_idx].onetime_effect.value,max_value=Math.max(min_value,ones[one_idx].onetime_effect.max_value),effect_value=Math.random()*(max_value-min_value)+min_value;point+=this.m_battle_general.attk*effect_value/100}}var random_in_trans_attk_inc=this.TransPassiveOneTimeEffectBufPoint(database.BattleChainStatType.ChainStatType_Attack_Rate,database.BattleInvokeType.BattleInvokeType_Always);return 0<random_in_trans_attk_inc&&(point+=this.m_battle_general.attk*random_in_trans_attk_inc/100),this.getArmServiceType()==db.GeneralArmServiceType.ArmServiceType_Melee?(p=200*Math.random()/1e4,2*Math.random()==0?point+=point*p:point-=point*p):this.getArmServiceType()==db.GeneralArmServiceType.ArmServiceType_Lancer?(p=parseInt(200*Math.random())/1e4,0==parseInt(2*Math.random())?point+=point*p:point-=point*p):this.getArmServiceType()==db.GeneralArmServiceType.ArmServiceType_Ranger?(p=parseInt(200*Math.random())/1e4,0==parseInt(2*Math.random())?point+=point*p:point-=point*p):(this.getArmServiceType(),db.GeneralArmServiceType.ArmServiceType_Captain),point},getDefencePoint:function(){var point=0,p=0;point+=this.m_battle_general.def,point+=p=this.durabilityBufDebufPoint(database.BattleChainStatType.ChainStatType_Def_Rate)*this.m_battle_general.def/100,point+=p=this.m_my_team.getBattleFormationBufPoint(this.m_battle_general.position,database.BattleChainStatType.ChainStatType_Def_Rate,this.m_battle_general)*this.m_battle_general.def/100,point+=p=this.m_my_team.getLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Def_Rate,this.m_battle_general)*this.m_battle_general.def/100,point+=p=this.m_my_team.getSpecialLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Def_Rate,this.m_battle_general)*this.m_battle_general.def/100,point-=p=this.m_my_team.getTargetTeamSpecialLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Enemy_Def_Dec_Rate,this.m_battle_general)*this.m_battle_general.def/100,point+=p=this.m_my_team.getPassiveSkillBufPoint(database.BattleChainStatType.ChainStatType_Def_Rate,this.m_battle_general)*this.m_battle_general.def/100,point+=p=this.m_my_team.getTargetTeamPassiveSkillDebufPoint(database.BattleChainStatType.ChainStatType_Def_Rate)*this.m_battle_general.def/100,point+=p=this.m_my_team.getFriendLeaderSkillBuf(database.BattleChainStatType.ChainStatType_Def_Rate,this.m_battle_general)*this.m_battle_general.def/100;var per=this.m_life_point/this.getMaxHealthPoint(),invoke_type=database.BattleInvokeType.BattleInvokeType_None;if(per<=.1?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_10_Per_Rate:per<=.2?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate:per<=.3?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate:per<=.4?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate:per<=.5?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate:per<=.75&&(invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate),invoke_type!=database.BattleInvokeType.BattleInvokeType_None){var ones=[];for(263==this.m_battle_general.general.gnrl_group&&cc.log("check_gnrl_group = 263");invoke_type>=database.BattleInvokeType.BattleInvokeType_Below_Life_10_Per_Rate;)switch(this.findTransPassiveSkillOneTimeEffectsFind(invoke_type,ones),invoke_type){case database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_None;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_10_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate;break;default:invoke_type=database.BattleInvokeType.BattleInvokeType_None}p=0;for(var idx=0;idx<ones.length;idx++){var o=ones[idx];if(o.input_ability_type==database.BattleInputAbility.Defence&&o.output_ability_type==database.BattleOutputAbility.Defence){var min_value=o.onetime_effect.value,max_value=Math.max(o.onetime_effect.value,o.onetime_effect.max_value);p+=effect_value=Math.random()*(max_value-min_value)+min_value}}point+=this.m_battle_general.def*p/100}var one_list=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Always,one_list);for(var passive_one_idx=0;passive_one_idx<one_list.length;passive_one_idx++)if(one_list[passive_one_idx].stat_trans==database.BattleEffectTrans.Our_Team_Dead_Count_Def_Inc){for(var teammng=this.getMyTeam(),deadcnt=0,member_idx=0;member_idx<teammng.length;member_idx++)teammng[member_idx].IsAlive()||++deadcnt;point+=this.m_battle_general.def*deadcnt*(one_list[passive_one_idx].value/100)}var find_obj_one=this.getTransPassiveSkillOneTimeEffectFind(database.BattleInvokeType.BattleInvokeType_All_Hitted,database.BattleEffectTrans.Enermy_General_Trans_Type_Light_Def_Inc_Rate);if(find_obj_one.find_one){for(var oneTime_effect=find_obj_one.one,TargetTeam_GeneralList=this.m_my_team.getTargetTeam().getTeamMembers(),EnermyTeam_Trans_Light_Cnt=0,idx_enermy_ge=0;idx_enermy_ge<TargetTeam_GeneralList.length;idx_enermy_ge++){var Enermy_General=TargetTeam_GeneralList[idx_enermy_ge];Enermy_General.getElementType()==ELEMENT_TYPE_LIGHT&&++EnermyTeam_Trans_Light_Cnt,Enermy_General=null}if(0<EnermyTeam_Trans_Light_Cnt&&oneTime_effect.input_ability_type==database.BattleInputAbility.Defence&&oneTime_effect.output_ability_type==database.BattleOutputAbility.Defence){min_value=oneTime_effect.onetime_effect.value,max_value=Math.max(oneTime_effect.onetime_effect.value,oneTime_effect.onetime_effect.max_value);var effect_value=Math.random()*(max_value-min_value)+min_value;point+=this.m_battle_general.def*(effect_value*EnermyTeam_Trans_Light_Cnt)/100}}one_list=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Always,one_list);for(var om_idx=0;om_idx<one_list.length;om_idx++){var one=new database.BattleOneTimeEffect;if(null!=one_list[om_idx].stat_trans&&null!=one_list[om_idx].stat_trans&&(one.stat_trans=one_list[om_idx].stat_trans),null!=one_list[om_idx].value&&null!=one_list[om_idx].value&&(one.value=one_list[om_idx].value),null!=one_list[om_idx].onetime_effect&&null!=one_list[om_idx].onetime_effect&&(one.onetime_effect=one_list[om_idx].onetime_effect),null!=one_list[om_idx].sub_value&&null!=one_list[om_idx].sub_value&&(one.sub_value=one_list[om_idx].sub_value),one.stat_trans==database.BattleEffectTrans.Life_Then_Def_Rate_Inc){var life=100-this.m_life_point/this.getMaxHealthPoint()*100,inc_def_rate=Math.floor(life/one.value)*one.sub_value;null!=one.onetime_effect.limit_value&&null!=one.onetime_effect.limit_value&&inc_def_rate>one.onetime_effect.limit_value&&(inc_def_rate=one.onetime_effect.limit_value),point+=this.m_battle_general.def*inc_def_rate/100}one=null}for(var GeneralList=this.m_my_team.getTeamMembers(),general_idx=(one_list=[],0);general_idx<GeneralList.length;general_idx++){one_list=[],GeneralList[general_idx].findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Our_Team_All_Attack,one_list);for(var is_activate=!1,one_list_idx=0;one_list_idx<one_list.length;one_list_idx++){if(is_activate=!1,one_list[one_list_idx].stat_trans==database.BattleEffectTrans.Guard_Power_Inc_General_Def_Inc)for(var dur_eff_idx=0;dur_eff_idx<this.m_durability_effects.length;dur_eff_idx++)this.m_durability_effects[dur_eff_idx].trans_type==database.BattleEffectTrans.Guard_Defence_Rate_Inc&&(is_activate=!0);if(is_activate){min_value=one_list[one_list_idx].onetime_effect.value,max_value=Math.max(one_list[one_list_idx].onetime_effect.value,one_list[one_list_idx].onetime_effect.max_value),effect_value=Math.random()*(max_value-min_value)+min_value;point+=this.m_battle_general.def*effect_value/100}}}ones=[];this.findTransPassiveSkillOneTimeEffectsFind(database.BattleInvokeType.BattleInvokeType_Always,ones);is_activate=!1;for(var ones_idx=0;ones_idx<ones.length;ones_idx++){if(is_activate=!1,ones[ones_idx].stat_trans==database.BattleEffectTrans.Guard_Power_Inc_General_Def_Inc)for(var dur_eff_jdx=0;dur_eff_jdx<this.m_durability_effects.length;dur_eff_jdx++)this.m_durability_effects[dur_eff_jdx].trans_type==database.BattleEffectTrans.Guard_Defence_Rate_Inc&&(is_activate=!0);if(is_activate){min_value=ones[ones_idx].onetime_effect.value,max_value=Math.max(ones[ones_idx].onetime_effect.value,ones[ones_idx].onetime_effect.max_value),effect_value=Math.random()*(max_value-min_value)+min_value;point+=this.m_battle_general.def*effect_value/100}}return point},getMaxHealthPoint:function(){if(null==this.m_my_team)return 0;var point=0;return point+=this.m_battle_general.hp,this.m_game_type!=db.BattleGameType.GreatWallDungeon&&(point+=this.m_my_team.getLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Hp_Rate,this.m_battle_general)*this.m_battle_general.hp/100),point+=this.m_my_team.getSpecialLeaderSkillBufPoint(database.BattleChainStatType.ChainStatType_Hp_Rate,this.m_battle_general)*this.m_battle_general.hp/100,point+=this.m_my_team.getBattleFormationBufPoint(this.m_battle_general.position,database.BattleChainStatType.ChainStatType_Hp_Rate,this.m_battle_general)*this.m_battle_general.hp/100,point+=this.m_my_team.getPassiveSkillBufPoint(database.BattleChainStatType.ChainStatType_Hp_Rate,this.m_battle_general)*this.m_battle_general.hp/100,point+=this.m_my_team.getTargetTeamPassiveSkillDebufPoint(database.BattleChainStatType.ChainStatType_Hp_Rate)*this.m_battle_general.hp/100,point+=this.m_my_team.getFriendLeaderSkillBuf(database.BattleChainStatType.ChainStatType_Hp_Rate,this.m_battle_general)*this.m_battle_general.hp/100},getAttackSpeed:function(){for(var point=this.m_battle_general.sp,idx=0;idx<this.m_durability_effects.length;idx++){var dur=$.extend({},this.m_durability_effects[idx]);dur.trans_type==database.BattleEffectTrans.Attack_Speed_Dec?point+=this.m_battle_general.sp*dur.value/1e4:dur.trans_type==database.BattleEffectTrans.Boss_Attack_Speed_Dec?this.m_battle_general.is_zoom&&(point+=this.m_battle_general.sp*dur.value/1e4):dur.trans_type==database.BattleEffectTrans.All_Trans_Attack_Speed_Rate_Dec_Rate?(this.findTransType(database.BattleEffectTrans.Stun)||this.findTransType(database.BattleEffectTrans.Freeze)||this.findTransType(database.BattleEffectTrans.Poison)||this.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||this.findTransType(database.BattleEffectTrans.Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Silence)||this.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||this.findTransType(database.BattleEffectTrans.Electric_Shork)||this.findTransType(database.BattleEffectTrans.Bleeding_Woounds)||this.findTransType(database.BattleEffectTrans.Blind_Darkness)||this.findTransType(database.BattleEffectTrans.Not_Resist_Stun)||this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)||this.findTransType(database.BattleEffectTrans.Not_Resist_Poison)||this.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Not_Resist_Silence)||this.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Not_Resist_Wound)||this.findTransType(database.BattleEffectTrans.Not_Resist_Blind))&&(point+=this.m_battle_general.sp*dur.value/1e4):dur.trans_type==database.BattleEffectTrans.Attack_Speed_Inc&&(point-=this.m_battle_general.sp*dur.value/1e4),dur=null}return point},durabilityBufPoint:function(trans_type){for(var point=0,i=0;i<this.m_durability_effects.length;i++)if(this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Onetime_Effect_Call_Exec){if(this.m_durability_effects[i].trans_type==trans_type)if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Caster_Lv_Skill_Attack_Inc||this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Caster_Lv_Skill_Attack_Inc_Dup_Limit){var caster=this.getMyTeam().getBattleGeneral(this.m_durability_effects[i].gnrl_id);if(null!=caster)point+=parseInt(caster.getGeneral().gnrl_level)*(this.m_durability_effects[i].value/100)}else point+=this.m_durability_effects[i].value,this.m_durability_effects[i].durability.state_type==this.m_battle_general.general.state_type&&(point+=this.m_durability_effects[i].durability.state_type_value)}else for(var j=0;j<this.m_durability_effects[i].end_effects.length;j++)if(this.m_durability_effects[i].end_effects[j].stat_trans==trans_type){var min_value=this.m_durability_effects[i].end_effects[j].onetime_effect.value,max_value=Math.max(this.m_durability_effects[i].end_effects[j].onetime_effect.value,this.m_durability_effects[i].end_effects[j].onetime_effect.max_value);point+=Math.random()*(max_value-min_value)+min_value}return point},IsDurabilityResistZeroCheck:function(trans_type){for(var is_exist=!1,i=0;i<this.m_durability_effects.length;i++){var dur=this.m_durability_effects[i];if(dur.trans_type==database.BattleEffectTrans.Resistance_Zero&&(dur.resist_trans_type==database.BattleEffectTrans.None||dur.resist_trans_type==trans_type)){is_exist=!0;break}}return is_exist},durabilityBufResistPoint:function(trans_type){var not_resist_trans_type=0;switch(trans_type){case database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate:not_resist_trans_type=database.BattleEffectTrans.After_Recv_Damage_Inc_Rate;break;case database.BattleEffectTrans.Not_Resist_Freeze:not_resist_trans_type=database.BattleEffectTrans.Freeze;break;case database.BattleEffectTrans.Not_Resist_Damage_Reduce:not_resist_trans_type=database.BattleEffectTrans.Damage_Reduce;break;case database.BattleEffectTrans.Not_Resist_Stun:not_resist_trans_type=database.BattleEffectTrans.Stun;break;case database.BattleEffectTrans.Not_Resist_Poison:not_resist_trans_type=database.BattleEffectTrans.Poison;break;case database.BattleEffectTrans.Not_Resist_Silence:not_resist_trans_type=database.BattleEffectTrans.Silence;break;case database.BattleEffectTrans.Not_Resist_Wound:not_resist_trans_type=database.BattleEffectTrans.Wound_Obstruct_Heal;break;case database.BattleEffectTrans.Not_Resist_Blind:not_resist_trans_type=database.BattleEffectTrans.Blind_Darkness}for(var point=0,i=0;i<this.m_durability_effects.length;i++)this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Resistance_All_Trans&&(trans_type!=database.BattleEffectTrans.Stun&&trans_type!=database.BattleEffectTrans.Silence&&trans_type!=database.BattleEffectTrans.Poison&&trans_type!=database.BattleEffectTrans.Freeze&&trans_type!=database.BattleEffectTrans.After_Recv_Damage_Inc_Rate&&trans_type!=database.BattleEffectTrans.Damage_Reduce&&trans_type!=database.BattleEffectTrans.New_Poison_Dmg_Rate&&trans_type!=database.BattleEffectTrans.Wound_Obstruct_Heal&&trans_type!=database.BattleEffectTrans.Blind_Darkness||(point+=this.m_durability_effects[i].value)),this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Resistance_Increment&&(trans_type==this.m_durability_effects[i].resist_trans_type?point+=this.m_durability_effects[i].value:0!=not_resist_trans_type&&not_resist_trans_type==this.m_durability_effects[i].resist_trans_type&&(point+=this.m_durability_effects[i].value)),this.m_durability_effects[i].trans_type==database.BattleEffectTrans.All_Trans_Resistance_Dec_Rate&&(this.findTransType(database.BattleEffectTrans.Stun)||this.findTransType(database.BattleEffectTrans.Freeze)||this.findTransType(database.BattleEffectTrans.Poison)||this.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||this.findTransType(database.BattleEffectTrans.Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Silence)||this.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||this.findTransType(database.BattleEffectTrans.Electric_Shork)||this.findTransType(database.BattleEffectTrans.Bleeding_Woounds)||this.findTransType(database.BattleEffectTrans.Blind_Darkness)||this.findTransType(database.BattleEffectTrans.Not_Resist_Stun)||this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)||this.findTransType(database.BattleEffectTrans.Not_Resist_Poison)||this.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Not_Resist_Silence)||this.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Not_Resist_Wound)||this.findTransType(database.BattleEffectTrans.Not_Resist_Blind))&&(trans_type!=database.BattleEffectTrans.Stun&&trans_type!=database.BattleEffectTrans.Silence&&trans_type!=database.BattleEffectTrans.Poison&&trans_type!=database.BattleEffectTrans.Freeze&&trans_type!=database.BattleEffectTrans.After_Recv_Damage_Inc_Rate&&trans_type!=database.BattleEffectTrans.Damage_Reduce&&trans_type!=database.BattleEffectTrans.New_Poison_Dmg_Rate&&trans_type!=database.BattleEffectTrans.Wound_Obstruct_Heal&&trans_type!=database.BattleEffectTrans.Blind_Darkness||(point+=this.m_durability_effects[i].value));return point},findDuraibilityEffect:function(invoke_type,dur_list){var it=invoke_type;if(!this.m_durability_effects.empty())for(var dur_idx=0;dur_idx<this.m_durability_effects.length;dur_idx++){var dur=this.m_durability_effects[dur_idx];if(dur.invoke_type==it&&dur.our_enemy==database.BattleSelfOther.Self)(eff=$.extend({},dur)).delta_duration=eff.duration,eff.our_enemy=database.BattleSelfOther.Other,eff.is_end=!1,eff.is_clear=!1,dur_list.push_back(eff);else if(dur.invoke_type==it&&dur.our_enemy==database.BattleSelfOther.Other){var eff;(eff=$.extend({},dur)).delta_duration=eff.duration,eff.our_enemy=database.BattleSelfOther.Other,eff.is_end=!1,eff.is_clear=!1,dur_list.push_back(eff)}}},durabilityBufDebufPoint:function(stat_type,invoke_type){var point=0;null==invoke_type&&(invoke_type=database.BattleInvokeType.BattleInvokeType_None);var it=invoke_type;if(0!=this.m_durability_effects.length){for(var i=0;i<this.m_durability_effects.length;i++)if(this.m_durability_effects[i].invoke_type==it)switch(stat_type){case database.BattleChainStatType.ChainStatType_Attack_Value:break;case database.BattleChainStatType.ChainStatType_Attack_Rate:if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Damage_Increased)point+=this.m_durability_effects[i].value,0!=this.m_durability_effects[i].durability.state_type?this.m_durability_effects[i].durability.state_type==this.m_battle_general.general.state_type&&(point+=this.m_durability_effects[i].durability.state_type_value):0!=this.m_durability_effects[i].durability.extra_rate_arm_service_type?this.m_durability_effects[i].durability.extra_rate_arm_service_type==this.m_battle_general.general.arm_service_type&&(point+=this.m_durability_effects[i].durability.arm_service_type_extra_rate):0!=this.m_durability_effects[i].durability.extra_rate_element_type&&this.m_durability_effects[i].durability.extra_rate_element_type==this.m_battle_general.general.element_type&&(point+=this.m_durability_effects[i].durability.element_type_extra_rate);else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Damage_Reduce)this.m_durability_effects[i].our_enemy==database.BattleSelfOther.Other&&(point-=this.m_durability_effects[i].value);else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.New_Damage_Reduce_Rate)this.m_game_type==db.BattleGameType.RaidDungeon&&this.m_team_type==BattleGeneral_TeamType.Right&&this.m_battle_general.is_zoom?50<this.m_durability_effects[i].value?point-=50:point-=this.m_durability_effects[i].value:this.m_durability_effects[i].durability.extra_rate_element_type==this.getElementType()?point-=this.m_durability_effects[i].value+this.m_durability_effects[i].durability.element_type_extra_rate:point-=this.m_durability_effects[i].value;else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Attack_Point_Rate_Dec_For_Boss)1==this.m_battle_general.is_zoom&&(point-=this.m_durability_effects[i].value);else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.All_Trans_Att_Dec_Rate)(this.findTransType(database.BattleEffectTrans.Stun)||this.findTransType(database.BattleEffectTrans.Freeze)||this.findTransType(database.BattleEffectTrans.Poison)||this.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||this.findTransType(database.BattleEffectTrans.Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Silence)||this.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||this.findTransType(database.BattleEffectTrans.Electric_Shork)||this.findTransType(database.BattleEffectTrans.Bleeding_Woounds)||this.findTransType(database.BattleEffectTrans.Blind_Darkness)||this.findTransType(database.BattleEffectTrans.Not_Resist_Stun)||this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)||this.findTransType(database.BattleEffectTrans.Not_Resist_Poison)||this.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Not_Resist_Silence)||this.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Not_Resist_Wound)||this.findTransType(database.BattleEffectTrans.Not_Resist_Blind))&&(point-=this.m_durability_effects[i].value);else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Damage_Increased_By_Hina)point+=this.m_durability_effects[i].value;else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Damage_Increaded_By_Konami)point+=this.m_durability_effects[i].value;else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Random_Stat_Attack_50_To_100)point+=this.m_durability_effects[i].value;else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Passive_Attk_Dec_Songyeon_Hero)point+=this.m_durability_effects[i].value;else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Angel_Stack_Attack_Inc)point+=this.m_durability_effects[i].value;else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Caster_Lv_Attk_Inc){if(null!=(caster=this.getMyTeam().getBattleGeneral(this.m_durability_effects[i].gnrl_id))&&null!=caster)point+=parseInt(caster.getGeneral().gnrl_level)*(this.m_durability_effects[i].value/100)}break;case database.BattleChainStatType.ChainStatType_Def_Value:this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Defence_Increased?point+=this.m_durability_effects[i].value:this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Defense_Reduce&&(point-=this.m_durability_effects[i].value);break;case database.BattleChainStatType.ChainStatType_Def_Rate:if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Defence_Point_Rate_Inc)point+=this.m_durability_effects[i].value,0!=this.m_durability_effects[i].durability.state_type?this.m_durability_effects[i].durability.state_type==this.m_battle_general.general.state_type&&(point+=this.m_durability_effects[i].durability.state_type_value):0!=this.m_durability_effects[i].durability.extra_rate_element_type&&this.m_durability_effects[i].durability.extra_rate_element_type==this.m_battle_general.general.element_type&&(point+=this.m_durability_effects[i].durability.element_type_extra_rate);else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Caster_Lv_Def_Inc){if(null!=(caster=this.getMyTeam().getBattleGeneral(this.m_durability_effects[i].gnrl_id))&&null!=caster)point+=parseInt(caster.getGeneral().gnrl_level)*(this.m_durability_effects[i].value/100)}else this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Defence_Point_Rate_Dec?(point-=this.m_durability_effects[i].value,this.m_durability_effects[i].durability.extra_rate_arm_service_type==this.getArmServiceType()&&(point-=this.m_durability_effects[i].durability.arm_service_type_extra_rate)):this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Defence_Point_Rate_Dec_For_Boss?1==this.m_battle_general.is_zoom&&(point-=this.m_durability_effects[i].value):this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Passive_Duration_Cri_Defence_Point_Rate_Dec?point-=this.m_durability_effects[i].value:this.m_durability_effects[i].trans_type==database.BattleEffectTrans.All_Trans_Def_Dec_Rate?(this.findTransType(database.BattleEffectTrans.Stun)||this.findTransType(database.BattleEffectTrans.Freeze)||this.findTransType(database.BattleEffectTrans.Poison)||this.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||this.findTransType(database.BattleEffectTrans.Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Silence)||this.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||this.findTransType(database.BattleEffectTrans.Electric_Shork)||this.findTransType(database.BattleEffectTrans.Bleeding_Woounds)||this.findTransType(database.BattleEffectTrans.Blind_Darkness)||this.findTransType(database.BattleEffectTrans.Not_Resist_Stun)||this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)||this.findTransType(database.BattleEffectTrans.Not_Resist_Poison)||this.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Not_Resist_Silence)||this.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Not_Resist_Wound)||this.findTransType(database.BattleEffectTrans.Not_Resist_Blind))&&(point-=this.m_durability_effects[i].value):this.m_durability_effects[i].trans_type==database.BattleEffectTrans.All_Our_Team_Dead_Count_Def_Inc?(point+=this.m_durability_effects[i].value,0!=this.m_durability_effects[i].durability.state_type&&this.m_durability_effects[i].durability.state_type==this.m_battle_general.general.state_type&&(point+=this.m_durability_effects[i].durability.state_type_value)):this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Random_Stat_Defence_50_To_100?point+=this.m_durability_effects[i].value:this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Angel_Stack_Defence_Inc&&(point+=this.m_durability_effects[i].value);break;case database.BattleChainStatType.ChainStatType_Hp_Value:case database.BattleChainStatType.ChainStatType_Hp_Rate:break;case database.BattleChainStatType.ChainStatType_Critical_Value:if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Critical_Percent_Rate_Inc)point+=this.m_durability_effects[i].value,0!=this.m_durability_effects[i].durability.state_type?this.m_durability_effects[i].durability.state_type==this.m_battle_general.general.state_type&&(point+=this.m_durability_effects[i].durability.state_type_value):0!=this.m_durability_effects[i].durability.extra_rate_arm_service_type&&this.m_durability_effects[i].durability.extra_rate_arm_service_type==this.m_battle_general.general.arm_service_type&&(point+=this.m_durability_effects[i].durability.arm_service_type_extra_rate);else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Caster_Lv_Critical_Rate_Inc){if(null!=(caster=this.getMyTeam().getBattleGeneral(this.m_durability_effects[i].gnrl_id))&&null!=caster)point+=caster.getGeneral().gnrl_level*this.m_durability_effects[i].value}else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Critical_Percent_Rate_Dec)point-=this.m_durability_effects[i].value;else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Enermy_General_Trans_Type_Stun_Critical_Percent_Rate_Inc){for(var TargetTeam_GeneralList=this.m_my_team.getTargetTeam().getTeamMembers(),EnermyTeam_Trans_Stun_Cnt=0,enermy_general_idx=0;enermy_general_idx<TargetTeam_GeneralList.length;enermy_general_idx++)(TargetTeam_GeneralList[enermy_general_idx].IsDurabilityEffect(database.BattleEffectTrans.Stun)||TargetTeam_GeneralList[enermy_general_idx].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Stun))&&++EnermyTeam_Trans_Stun_Cnt;0<EnermyTeam_Trans_Stun_Cnt&&(point+=EnermyTeam_Trans_Stun_Cnt*this.m_durability_effects[i].value),TargetTeam_GeneralList=null}else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Enermy_General_Trans_Type_Freeze_Critical_Percent_Rate_Inc){TargetTeam_GeneralList=this.m_my_team.getTargetTeam().getTeamMembers();var EnermyTeam_Trans_Freeze_Cnt=0;for(enermy_general_idx=0;enermy_general_idx<TargetTeam_GeneralList.length;enermy_general_idx++)(TargetTeam_GeneralList[enermy_general_idx].IsDurabilityEffect(database.BattleEffectTrans.Freeze)||TargetTeam_GeneralList[enermy_general_idx].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Freeze))&&++EnermyTeam_Trans_Freeze_Cnt;0<EnermyTeam_Trans_Freeze_Cnt&&(point+=EnermyTeam_Trans_Freeze_Cnt*this.m_durability_effects[i].value),TargetTeam_GeneralList=null}else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Enermy_General_Trans_Type_Poison_Critical_Percent_Rate_Inc){TargetTeam_GeneralList=this.m_my_team.getTargetTeam().getTeamMembers();var EnermyTeam_Trans_Poison_Cnt=0;for(enermy_general_idx=0;enermy_general_idx<TargetTeam_GeneralList.length;enermy_general_idx++)(TargetTeam_GeneralList[enermy_general_idx].IsDurabilityEffect(database.BattleEffectTrans.Poison)||TargetTeam_GeneralList[enermy_general_idx].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Poison))&&++EnermyTeam_Trans_Poison_Cnt;0<EnermyTeam_Trans_Poison_Cnt&&(point+=EnermyTeam_Trans_Poison_Cnt*this.m_durability_effects[i].value),TargetTeam_GeneralList=null}else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Enermy_General_Trans_Type_Silence_Critical_Percent_Rate_Inc){TargetTeam_GeneralList=this.m_my_team.getTargetTeam().getTeamMembers();var EnermyTeam_Trans_Silence_Cnt=0;for(enermy_general_idx=0;enermy_general_idx<TargetTeam_GeneralList.length;enermy_general_idx++)(TargetTeam_GeneralList[enermy_general_idx].IsDurabilityEffect(database.BattleEffectTrans.Silence)||TargetTeam_GeneralList[enermy_general_idx].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Silence))&&++EnermyTeam_Trans_Silence_Cnt;0<EnermyTeam_Trans_Silence_Cnt&&(point+=EnermyTeam_Trans_Silence_Cnt*this.m_durability_effects[i].value),TargetTeam_GeneralList=null}else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Enermy_General_Trans_Type_Burning_Critical_Percent_Rate_Inc){TargetTeam_GeneralList=this.m_my_team.getTargetTeam().getTeamMembers();var EnermyTeam_Trans_Burning_Cnt=0;for(enermy_general_idx=0;enermy_general_idx<TargetTeam_GeneralList.length;enermy_general_idx++)(TargetTeam_GeneralList[enermy_general_idx].IsDurabilityEffect(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||TargetTeam_GeneralList[enermy_general_idx].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate))&&++EnermyTeam_Trans_Burning_Cnt;0<EnermyTeam_Trans_Burning_Cnt&&(point+=EnermyTeam_Trans_Burning_Cnt*this.m_durability_effects[i].value),TargetTeam_GeneralList=null}else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Enermy_General_Trans_Type_Elec_Critical_Percent_Rate_Inc){TargetTeam_GeneralList=this.m_my_team.getTargetTeam().getTeamMembers();var EnermyTeam_Trans_Elec_Cnt=0;for(enermy_general_idx=0;enermy_general_idx<TargetTeam_GeneralList.length;enermy_general_idx++)(TargetTeam_GeneralList[enermy_general_idx].IsDurabilityEffect(database.BattleEffectTrans.Damage_Reduce)||TargetTeam_GeneralList[enermy_general_idx].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Damage_Reduce))&&++EnermyTeam_Trans_Elec_Cnt;0<EnermyTeam_Trans_Elec_Cnt&&(point+=EnermyTeam_Trans_Elec_Cnt*this.m_durability_effects[i].value),TargetTeam_GeneralList=null}else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Enermy_General_Trans_Type_Wounds_Critical_Percent_Rate_Inc){TargetTeam_GeneralList=this.m_my_team.getTargetTeam().getTeamMembers();var EnermyTeam_Trans_Wounds_Cnt=0;for(enermy_general_idx=0;enermy_general_idx<TargetTeam_GeneralList.length;enermy_general_idx++)(TargetTeam_GeneralList[enermy_general_idx].IsDurabilityEffect(database.BattleEffectTrans.Bleeding_Woounds)||TargetTeam_GeneralList[enermy_general_idx].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Wound))&&++EnermyTeam_Trans_Wounds_Cnt;0<EnermyTeam_Trans_Wounds_Cnt&&(point+=EnermyTeam_Trans_Wounds_Cnt*this.m_durability_effects[i].value),TargetTeam_GeneralList=null}else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Enermy_General_Trans_Type_Blind_Critical_Percent_Rate_Inc){TargetTeam_GeneralList=this.m_my_team.getTargetTeam().getTeamMembers();var EnermyTeam_Trans_Blind_Cnt=0;for(enermy_general_idx=0;enermy_general_idx<TargetTeam_GeneralList.length;enermy_general_idx++)(TargetTeam_GeneralList[enermy_general_idx].IsDurabilityEffect(database.BattleEffectTrans.Blind_Darkness)||TargetTeam_GeneralList[enermy_general_idx].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Blind))&&++EnermyTeam_Trans_Blind_Cnt;0<EnermyTeam_Trans_Blind_Cnt&&(point+=EnermyTeam_Trans_Blind_Cnt*this.m_durability_effects[i].value),TargetTeam_GeneralList=null}else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.All_Trans_Critical_Percent_Rate_Dec_Rate)(this.findTransType(database.BattleEffectTrans.Stun)||this.findTransType(database.BattleEffectTrans.Freeze)||this.findTransType(database.BattleEffectTrans.Poison)||this.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||this.findTransType(database.BattleEffectTrans.Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Silence)||this.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||this.findTransType(database.BattleEffectTrans.Electric_Shork)||this.findTransType(database.BattleEffectTrans.Bleeding_Woounds)||this.findTransType(database.BattleEffectTrans.Blind_Darkness)||this.findTransType(database.BattleEffectTrans.Not_Resist_Stun)||this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)||this.findTransType(database.BattleEffectTrans.Not_Resist_Poison)||this.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Not_Resist_Silence)||this.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Not_Resist_Wound)||this.findTransType(database.BattleEffectTrans.Not_Resist_Blind))&&(point-=this.m_durability_effects[i].value);else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Random_Stat_Critical_Percent_50_To_100)point+=this.m_durability_effects[i].value;else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Trans_Damage_inc_Critical_Rate_Inc){for(var is_activate=!1,duration_value=0,dur_jdx=0;dur_jdx<this.m_durability_effects.length;dur_jdx++)this.m_durability_effects[dur_jdx].trans_type!=database.BattleEffectTrans.Damage_Increased&&this.m_durability_effects[dur_jdx].trans_type!=database.BattleEffectTrans.Attack_Point_Abs_Inc&&this.m_durability_effects[dur_jdx].trans_type!=database.BattleEffectTrans.Damage_Increased_By_Hina&&this.m_durability_effects[dur_jdx].trans_type!=database.BattleEffectTrans.Passive_Attk_Dec_Songyeon_Hero&&this.m_durability_effects[dur_jdx].trans_type!=database.BattleEffectTrans.Random_Stat_Attack_50_To_100||(is_activate=!0,duration_value=this.m_durability_effects[dur_jdx].value);is_activate&&(point+=duration_value)}else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Trans_Defence_Inc_Critical_Rate_Inc){for(is_activate=!0,duration_value=0,dur_jdx=0;dur_jdx<this.m_durability_effects.length;dur_jdx++)this.m_durability_effects[dur_jdx].trans_type!=database.BattleEffectTrans.Defence_Increased&&this.m_durability_effects[dur_jdx].trans_type!=database.BattleEffectTrans.Defence_Point_Rate_Inc&&this.m_durability_effects[dur_jdx].trans_type!=database.BattleEffectTrans.Random_Stat_Defence_50_To_100&&this.m_durability_effects[dur_jdx].trans_type!=database.BattleEffectTrans.Caster_Lv_Def_Inc||(is_activate=!0);is_activate&&(point+=100*duration_value)}break;case database.BattleChainStatType.ChainStatType_Cri_Power_Value:if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Critical_Power_Rate_inc)point+=this.m_durability_effects[i].value,0!=this.m_durability_effects[i].durability.state_type&&this.m_durability_effects[i].durability.state_type==this.m_battle_general.general.state_type&&(point+=this.m_durability_effects[i].durability.state_type_value);else if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Caster_Lv_Critical_Power_Inc){var caster;if(null!=(caster=this.getMyTeam().getBattleGeneral(this.m_durability_effects[i].gnrl_id))&&null!=caster)point+=caster.getGeneral().gnrl_level*this.m_durability_effects[i].value}else this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Critical_Power_Rate_Dec?point-=this.m_durability_effects[i].value:this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Passive_Duration_Critical_Power_Rate_inc?point+=this.m_durability_effects[i].value:this.m_durability_effects[i].trans_type==database.BattleEffectTrans.All_Trans_Critical_Power_Rate_Dec_Rate&&(this.findTransType(database.BattleEffectTrans.Stun)||this.findTransType(database.BattleEffectTrans.Freeze)||this.findTransType(database.BattleEffectTrans.Poison)||this.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||this.findTransType(database.BattleEffectTrans.Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Silence)||this.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||this.findTransType(database.BattleEffectTrans.Electric_Shork)||this.findTransType(database.BattleEffectTrans.Bleeding_Woounds)||this.findTransType(database.BattleEffectTrans.Blind_Darkness)||this.findTransType(database.BattleEffectTrans.Not_Resist_Stun)||this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)||this.findTransType(database.BattleEffectTrans.Not_Resist_Poison)||this.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Not_Resist_Silence)||this.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Not_Resist_Wound)||this.findTransType(database.BattleEffectTrans.Not_Resist_Blind))&&(point-=this.m_durability_effects[i].value);break;case database.BattleChainStatType.ChainStatType_Skill_Cooltime_Dec:case database.BattleChainStatType.ChainStatType_Skill_Cooltime_Dec_Rate:break;case database.BattleChainStatType.ChainStatType_Guard_Invoke_Rate:this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Guard_Invoke_Rate_inc?(point+=this.m_durability_effects[i].value,0!=this.m_durability_effects[i].durability.state_type&&this.m_durability_effects[i].durability.state_type==this.m_battle_general.general.state_type&&(point+=this.m_durability_effects[i].durability.state_type_value)):this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Guard_Invoke_Rate_Dec&&(point-=this.m_durability_effects[i].value);break;case database.BattleChainStatType.ChainStatType_Guard_Defence_Rate:this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Guard_Defence_Rate_Inc?(point+=this.m_durability_effects[i].value,0!=this.m_durability_effects[i].durability.state_type&&this.m_durability_effects[i].durability.state_type==this.m_battle_general.general.state_type&&(point+=this.m_durability_effects[i].durability.state_type_value)):this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Guard_Defence_Rate_Dec&&(point-=this.m_durability_effects[i].value,0!=this.m_durability_effects[i].durability.state_type&&this.m_durability_effects[i].durability.state_type==this.m_battle_general.general.state_type&&(point-=this.m_durability_effects[i].durability.state_type_value));break;case database.BattleChainStatType.ChainStatType_Pre_Skill_Cooltime_Dec:case database.BattleChainStatType.ChainStatType_Pre_Skill_Cooltime_Rate:break;case database.BattleChainStatType.ChainStatType_After_Send_Damage_Rate:this.m_durability_effects[i].trans_type==database.BattleEffectTrans.After_Send_Damage_Inc_Rate?(point+=this.m_durability_effects[i].value,0!=this.m_durability_effects[i].durability.state_type&&this.m_durability_effects[i].durability.state_type==this.m_battle_general.general.state_type&&(point+=this.m_durability_effects[i].durability.state_type_value)):this.m_durability_effects[i].trans_type==database.BattleEffectTrans.After_Send_Damage_Dec_Rate&&(point-=this.m_durability_effects[i].value);break;case database.BattleChainStatType.ChainStatType_After_Recv_Damage_Rate:this.m_durability_effects[i].trans_type==database.BattleEffectTrans.After_Recv_Damage_Inc_Rate?point+=this.m_durability_effects[i].value:this.m_durability_effects[i].trans_type==database.BattleEffectTrans.New_Recv_Damage_Inc_Rate?point+=this.m_durability_effects[i].value:this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate&&(point+=this.m_durability_effects[i].value);break;case database.BattleChainStatType.ChainStatType_After_Recv_Damage_Dec_Rate:this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Normal_Attk_Dmg_Dec_Rate?point+=this.m_durability_effects[i].value:this.m_durability_effects[i].trans_type==database.BattleEffectTrans.After_Recv_Damage_Dec&&(point+=this.m_durability_effects[i].value),this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Accumulate_Stack_Wanko_Damage_Dec&&(point+=this.m_durability_effects[i].value);break;case database.BattleChainStatType.CainStatType_Skill_Attk_Damage_Inc_Rate:this.m_durability_effects[i].trans_type==database.BattleEffectTrans.ActiveSkill_Damage_Inc?(point+=this.m_durability_effects[i].value,0!=this.m_durability_effects[i].durability.state_type&&this.m_durability_effects[i].durability.state_type==this.m_battle_general.general.state_type&&(point+=this.m_durability_effects[i].durability.state_type_value)):this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Glitter_Beach_Stack_ActiveSkill_Damage_Inc?point+=this.m_durability_effects[i].value:this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Timer_Passed_Stack_Up_Skill_Attk_Inc&&(point+=this.m_durability_effects[i].value);break;case database.BattleChainStatType.CainStatType_Skill_Attk_Damage_Dec_Rate:this.m_durability_effects[i].trans_type==database.BattleEffectTrans.ActiveSkill_Damage_Dec&&(point+=this.m_durability_effects[i].value,0!=this.m_durability_effects[i].durability.state_type&&this.m_durability_effects[i].durability.state_type==this.m_battle_general.general.state_type&&(point-=this.m_durability_effects[i].durability.state_type_value))}stat_type==database.BattleChainStatType.ChainStatType_Cri_Power_Value&&(point+=this.getDurationEffect_CriticalPower())}return point},setGeneralTimeScale:function(timescale){this.m_cur_time_scale=timescale,null!=(entry=this.m_sk.getCurrent(0))&&(entry.timeScale=this.m_cur_time_scale);for(var i=0;i<this.m_fx_used.length;i++){var entry,fx=this.m_fx_used[i];if(null!=fx.m_skeleton)null!=(entry=fx.m_skeleton.getCurrent(0))&&(entry.timeScale=this.m_cur_time_scale)}this.setCommonTimeScale(this.m_cur_time_scale)},battleContinue:function(){if(this.m_team_type==BattleGeneral_TeamType.Left){this.calcGeneralStat(),this.setGeneralState(BattleGeneral_GeneralState.Wait);var percent=this.m_life_point/this.getMaxHealthPoint()*100;this.m_info_bar.setPercentageLife(percent,!0),null!=this._updateLifeBar&&this._updateLifeBar.updateLifeBar(),this.momentShowInfoBar(2)}else if(this.m_team_type==BattleGeneral_TeamType.Right){if(this.setGeneralState(BattleGeneral_GeneralState.Wait),!this.IsAlive())return this.m_is_death_animation_start=!0,void this.playAction(ActionType.Death);this.momentShowInfoBar(2)}this.clearHittingEnemy(),this.clearTargetEnemy(),this.removeAllDurabilityEffects(),this.m_is_first_attack=!1,this.m_is_death_animation_start=!1;for(var i=0;i<this.m_battle_general.active_skill.length;i++)this.m_battle_general.active_skill[i].is_prepared=!1,null!=this._skillCooltimeProc_V2&&this._skillCooltimeProc_V2.skillCooltimeProc_V2(this.m_battle_general.active_skill[i].cooltime,this.m_battle_general.active_skill[i].skill_charge_count);for(var j=0;j<this.m_battle_general.trans_passive_skill.length;j++)this.m_battle_general.trans_passive_skill[j].reborn_count=0,this.m_battle_general.trans_passive_skill[j].full_charge_count=0,this.m_battle_general.trans_passive_skill[j].mild_rabbit_count=0,this.m_battle_general.m_Is_Life_Down_Active_Skill_Charge=!1,this.m_Skill_DeltaTime=0,this.m_battle_general.m_Is_Dur_Life_Not_Zero=!1;this.m_battle_general.m_Is_Dead_Passive_Charge=!0,this.m_Skill_DeltaTime=0,this.m_Skill_DeltaTime_Not_Init=0,this.m_use_skill_hp_rate_75=!1,this.m_use_skill_hp_rate_50=!1,this.m_use_skill_hp_rate_25=!1,this.playAction(ActionType.Attack_Idle),cc.log("Attack_Idle Check 2")},initSkillCooltime:function(){for(var i=0;i<this.m_battle_general.active_skill.length;i++)this.m_battle_general.active_skill[i].is_prepared=!1,null!=this._skillCooltimeProc_V2&&this._skillCooltimeProc_V2.skillCooltimeProc_V2(this.m_battle_general.active_skill[i].cooltime,this.m_battle_general.active_skill[i].skill_charge_count)},actionHitted:function(){0==this.m_cur_pos.x&&0==this.m_cur_pos.y?this.m_cur_pos=this.getPosition():(this.stopAllActions(),this.setPosition(this.m_cur_pos.x,this.m_cur_pos.y)),this.generalPause();var dist=10;this.m_team_type==BattleGeneral_TeamType.Left&&(dist*=-1);var back=cc.moveBy(.01/this.m_cur_time_scale,cc.p(dist,0)),delay=cc.delayTime(.05/this.m_cur_time_scale),roll=cc.moveBy(.02/this.m_cur_time_scale,cc.p(-dist,0)),cb=cc.callFunc(this.cbActionHitted,this),seq=cc.sequence(back,delay,roll,cb);this.runAction(seq),this.addDebugGeneral("actionHitted")},cbActionHitted:function(){this.generalResume(),0==this.m_cur_pos.x&&0==this.m_cur_pos.y||(this.setPosition(this.m_cur_pos.x,this.m_cur_pos.y),this.m_cur_pos=cc.p(0,0)),this.addDebugGeneral("cbActionHitted")},unfocsActionHItted:function(){this.addDebugGeneral("unfocsActionHItted"),0==this.m_cur_pos.x&&0==this.m_cur_pos.y?this.m_cur_pos=this.getPosition():(this.stopAllActions(),this.setPosition(this.m_cur_pos));var dist=10;this.m_team_type==BattleGeneral_TeamType.Left&&(dist*=-1);var back=cc.moveBy(.01/this.m_cur_time_scale,cc.p(dist,0)),delay=cc.delayTime(.05/this.m_cur_time_scale),roll=cc.moveBy(.02/this.m_cur_time_scale,cc.p(-dist,0)),cb=cc.callFunc(this.cbUnfocusActionHitted,this),seq=cc.sequence(back,delay,roll,cb);this.runAction(seq)},cbUnfocusActionHitted:function(){this.addDebugGeneral("cbUnfocusActionHitted"),0==this.m_cur_pos.x&&0==this.m_cur_pos.y||(this.setPosition(this.m_cur_pos),this.m_cur_pos=cc.p(0,0))},freeze:function(){var entry=this.m_sk.getCurrent(0);null!=entry?entry.timeScale=0:this.m_cur_state<BattleGeneral_GeneralState.Death_Anim&&this.addDebugGeneral("freeze - entry is null"),this.addDebugGeneral("freeze")},unfreeze:function(){var entry=this.m_sk.getCurrent(0);null!=entry?entry.timeScale=this.m_cur_time_scale:this.m_cur_state<BattleGeneral_GeneralState.Death_Anim&&this.addDebugGeneral("unfreeze - entry is null"),this.runTransShader(TransShaderType.None,0,null,0),this.addDebugGeneral("unfreeze")},showInfoBar:function(isShow){this.m_info_bar.isRunning()&&this.m_info_bar.stopAllActions(),this.m_info_bar.setVisible(isShow)},momentShowInfoBar:function(delaytime){if(!(this.m_team_type==BattleGeneral_TeamType.Right&&this.m_my_team.IsCutinStage()&&this.m_battle_general.is_zoom||this.m_team_type==BattleGeneral_TeamType.Right&&this.m_game_type==db.BattleGameType.RaidDungeon||this.m_team_type==BattleGeneral_TeamType.Right&&this.m_game_type==db.BattleGameType.EventMussangBossDungeon)){this.m_info_bar.isRunning()&&this.m_info_bar.stopAllActions(),this.m_info_bar.setVisible(!0);var delay=cc.delayTime(delaytime),cb=cc.callFunc(this.cbMomentShowInfoBar,this),seq=cc.sequence(delay,cb);this.m_info_bar.runAction(seq)}},cbMomentShowInfoBar:function(){this.m_info_bar.setVisible(!1)},playHitSoundEffect:function(attack_type){var audio=AudioEngine.getInstance();if(attack_type==Hit_Attack_Type.ATTACK_1)""!=(hit_sound=this.m_battle_general.attack_action.hit_sound)&&"0"!=hit_sound&&this.last_use_effect!=hit_sound&&(this.last_use_effect=hit_sound,audio.playEffect(RES_CDN_SOUND+SND_TYPE+"sound/"+hit_sound));else if(attack_type==Hit_Attack_Type.ATTACK_2){if(0==this.m_battle_general.attack2_action.action_id)""!=(hit_sound=this.m_battle_general.attack_action.hit_sound)&&"0"!=hit_sound&&this.last_use_effect!=hit_sound&&(this.last_use_effect=hit_sound,audio.playEffect(RES_CDN_SOUND+SND_TYPE+"sound/"+hit_sound));else""!=(hit_sound=this.m_battle_general.attack2_action.hit_sound)&&"0"!=hit_sound&&this.last_use_effect!=hit_sound&&(this.last_use_effect=hit_sound,audio.playEffect(RES_CDN_SOUND+SND_TYPE+"sound/"+hit_sound))}else if(attack_type==Hit_Attack_Type.ATTACK_3){if(0==this.m_battle_general.attack3_action.action_id)""!=(hit_sound=this.m_battle_general.attack_action.hit_sound)&&"0"!=hit_sound&&this.last_use_effect!=hit_sound&&(this.last_use_effect=hit_sound,audio.playEffect(RES_CDN_SOUND+SND_TYPE+"sound/"+hit_sound));else""!=(hit_sound=this.m_battle_general.attack3_action.hit_sound)&&"0"!=hit_sound&&this.last_use_effect!=hit_sound&&(this.last_use_effect=hit_sound,audio.playEffect(RES_CDN_SOUND+SND_TYPE+"sound/"+hit_sound))}else if(attack_type==Hit_Attack_Type.SKILL){var hit_sound;""!=(hit_sound=this.m_battle_general.active_skill[0].skill_action.hit_sound)&&"0"!=hit_sound&&this.last_use_effect!=hit_sound&&(this.last_use_effect=hit_sound,cc.log("sound[7]"+hit_sound),audio.playEffect(RES_CDN_SOUND+SND_TYPE+"sound/"+hit_sound))}},getBloodSucking:function(blood_point,is_damage_show){if(null!=is_damage_show&&null!=is_damage_show||(is_damage_show=!0),this.IsAlive()&&!this.findTransType(database.BattleEffectTrans.Freeze)&&!this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)){(this.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||this.findTransType(database.BattleEffectTrans.Not_Resist_Wound))&&(blood_point=0);for(var dur_idx2=0;dur_idx2<this.m_durability_effects.length;dur_idx2++)this.m_durability_effects[dur_idx2].trans_type==database.BattleEffectTrans.Good_Trans_Invincibility_Mode&&(blood_point=0);var before_heal_point=this.m_life_point;if(this.m_life_point+=blood_point,this.m_life_point>this.getMaxHealthPoint()){if(this.m_life_point=this.getMaxHealthPoint(),this.m_game_type==db.BattleGameType.EventMussangBossDungeon&&this.m_team_type==BattleGeneral_TeamType.Right){var point=this.m_life_point-before_heal_point;if(this.m_my_team.getTargetTeam().addEventDungeonMusssangBossAccumDamage(-point),null!=this._cbEventListenerUIMng)(evt=new battle.Event).intValue=this.m_team_type,(evt.dataValue1=this)._cbEventListenerUIMng.EventListenerFromGeneral(EventCode.EVT_UI_MNG_HITTED,evt),evt=null}}else if(this.m_game_type==db.BattleGameType.EventMussangBossDungeon&&this.m_team_type==BattleGeneral_TeamType.Right)if(this.m_my_team.getTargetTeam().addEventDungeonMusssangBossAccumDamage(-blood_point),null!=this._cbEventListenerUIMng)(evt=new battle.Event).intValue=this.m_team_type,(evt.dataValue1=this)._cbEventListenerUIMng.EventListenerFromGeneral(EventCode.EVT_UI_MNG_HITTED,evt),evt=null;if(this.m_game_type==db.BattleGameType.GreatWallDungeon||this.m_game_type==db.BattleGameType.WorldWarNpcDungeon){var max_hp=this.getMaxHealthPoint(),rate=this.m_life_point/max_hp*1e4;1e4<rate&&(rate=1e4),this.m_battle_general.remain_hp_rate=rate,0<parseInt(this.m_life_point)&&0==this.m_battle_general.remain_hp_rate&&(this.m_battle_general.remain_hp_rate=1)}this.m_life_point>this.getMaxHealthPoint()&&(this.m_life_point=this.getMaxHealthPoint());var evt,percent=this.m_life_point/this.getMaxHealthPoint()*100;if(this.m_info_bar.setPercentageLife(percent,!0),null!=this._updateLifeBar&&this._updateLifeBar.updateLifeBar(),this.momentShowInfoBar(.7),0!=is_damage_show&&null!=this._cbEventListenerFieldMng)(evt=new battle.Event).floatValue=blood_point,evt.dataValue1=this,evt.intValue=database.DamageType.Heal,cc.log(this.m_battle_general.general.name+" getBloodSucking point "+blood_point),this._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_DAMAGE_SHOW,evt);this.viewLifePoint()}},removeDeactivationDebufEffect:function(){for(var delete_list=new Array,i=0;i<this.m_durability_effects.length;i++)if(this.IsAlive())if(this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Freeze||this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Petrification||this.m_durability_effects[i].trans_type==database.BattleEffectTrans.Not_Resist_Freeze){for(var j=0;j<this.m_durability_effects[i].end_effects.length;j++){var one=this.m_durability_effects[i].end_effects[j];this.IsAlive()&&this.addOnetimeEffect(one,this.m_durability_effects[i].trans_type)}delete_list.push_back(this.m_durability_effects[i])}else this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Stun&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Sleep&&this.m_durability_effects[i].trans_type!=database.BattleEffectTrans.Not_Resist_Stun||delete_list.push_back(this.m_durability_effects[i]);delete_list.empty()||this.removeDurabilityEffect(delete_list)},teamSkillCooltime:function(){for(var i=0;i<this.m_battle_general.active_skill.length;i++)this.m_battle_general.active_skill[i].is_teamcooltime||(this.m_battle_general.active_skill[i].is_teamcooltime=!0,this.m_battle_general.active_skill[i].team_cooltime=TEAM_SKILL_COOLTIME)},calcArmServiceTypeAdvenceValue:function(target){var rate=0,arm_type=this.getArmServiceType();return arm_type==db.GeneralArmServiceType.ArmServiceType_Melee?target.getArmServiceType()==db.GeneralArmServiceType.ArmServiceType_Ranger?rate=.05:target.getArmServiceType()==db.GeneralArmServiceType.ArmServiceType_Lancer&&(rate=-.05):arm_type==db.GeneralArmServiceType.ArmServiceType_Lancer?target.getArmServiceType()==db.GeneralArmServiceType.ArmServiceType_Melee?rate=.05:target.getArmServiceType()==db.GeneralArmServiceType.ArmServiceType_Ranger&&(rate=-.05):arm_type==db.GeneralArmServiceType.ArmServiceType_Ranger&&(target.getArmServiceType()==db.GeneralArmServiceType.ArmServiceType_Lancer?rate=.05:target.getArmServiceType()==db.GeneralArmServiceType.ArmServiceType_Melee&&(rate=-.05)),rate},IsRebornReserved:function(){return this.m_is_reborn_enable||this.m_is_self_reborn_enable},IsAlive:function(){return 0<this.m_life_point&&!(this.m_cur_state>=BattleGeneral_GeneralState.Death_Ready&&this.m_cur_state!=BattleGeneral_GeneralState.End)},getCurrentLifePoint:function(){return this.m_cur_state>=BattleGeneral_GeneralState.Death_Ready?0:this.m_life_point},getOriginCurrentLifePoint:function(){var life=this.m_life_point;return life<0&&(life=0),life},updateLifeBar:function(){this.m_life_point<0?(this.m_life_point=0,null!=_cbEventListenerFieldMng&&this.scheduleOnce(function(float){var evt=new battle.Event;(evt.dataValue1=this)._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_GNRL_DEATH_AT,evt),evt=null},.01,"EventCode.EVT_FIELD_MNG_GNRL_DEATH_AT")):this.m_life_point>this.getMaxHealthPoint()&&(this.m_life_point=this.getMaxHealthPoint());var percent=this.m_life_point/this.getMaxHealthPoint()*100;this.m_info_bar.setPercentageLife(percent,!1),null!=this._updateLifeBar&&this._updateLifeBar.updateLifeBar()},selfLifeDown:function(down_life,show_life_duration){this.addDebugGeneral("selfLifeDown");for(var idx=0;idx<this.m_durability_effects.length;idx++)this.m_durability_effects[idx].trans_type==database.BattleEffectTrans.HP_Shield_Caster_Max_HP||this.m_durability_effects[idx].trans_type==database.BattleEffectTrans.Darkness_Shield||this.m_durability_effects[idx].trans_type==database.BattleEffectTrans.HP_Shield_Caster_Heal_Value?this.m_durability_effects[idx].life_shield>down_life?(this.m_durability_effects[idx].life_shield-=down_life,down_life=0):(down_life-=this.m_durability_effects[idx].life_shield,this.m_durability_effects[idx].life_shield=0,this.m_durability_effects[idx].delta_duration=this.m_durability_effects[idx].duration):this.m_durability_effects[idx].trans_type==database.BattleEffectTrans.Golden_Invincibility&&(down_life=0);var life_ratio;(this.m_life_point-=down_life,down_life<1e3?this.playVoicePart(voice_hit_damage_1000_under):1e3<=down_life&&down_life<5e3?this.playVoicePart(voice_hit_damage_1000_to_5000):this.playVoicePart(voice_hit_damage_5000_excess),this.getGeneral().is_zoom&&this.m_team_type==BattleGeneral_TeamType.Right)&&((life_ratio=this.m_life_point/this.getMaxHealthPoint())<=.33&&!this.find_voice_use(voice_npc_boss_hp_below_66_percent)?this.playVoicePart(voice_npc_boss_hp_below_66_percent):life_ratio<=.5&&!this.find_voice_use(voice_npc_boss_hp_below_50_percent)?this.playVoicePart(voice_npc_boss_hp_below_50_percent):life_ratio<=.2&&!this.find_voice_use(voice_npc_boss_hp_below_20_percent)&&this.playVoicePart(voice_npc_boss_hp_below_20_percent));if(this.m_team_type==BattleGeneral_TeamType.Left)if((life_ratio=this.m_life_point/this.getMaxHealthPoint())<=.5&&!this.find_voice_use(voice_npc_boss_player_general_below_50_percent)){for(var target_team=this.getMyTeam().getTargetTeam().getTeamMembers(),boss_general=null,target_idx=0;target_idx<target_team.length;target_idx++)target_team[target_idx].getGeneral().is_zoom&&(boss_general=target_team[target_idx]);null!=boss_general&&boss_general.playVoicePart(voice_npc_boss_player_general_below_50_percent)}else if(life_ratio<=.33&&!this.find_voice_use(voice_npc_boss_player_general_below_33_percent)){for(target_team=this.getMyTeam().getTargetTeam().getTeamMembers(),boss_general=null,target_idx=0;target_idx<target_team.length;target_idx++)target_team[target_idx].getGeneral().is_zoom&&(boss_general=target_team[target_idx]);null!=boss_general&&boss_general.playVoicePart(voice_npc_boss_player_general_below_33_percent)}var invoke_type=database.BattleInvokeType.BattleInvokeType_None,save_invoke_type=database.BattleInvokeType.BattleInvokeType_None,per=this.m_life_point/this.getMaxHealthPoint();per<=.1?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_10_Per_Rate:per<=.15?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_15_Per_Rate:per<=.2?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate:per<=.25?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_25_Per_Rate:per<=.3?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate:per<=.4?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate:per<=.5?invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate:per<=.75&&(invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate),save_invoke_type=invoke_type;for(var passive_list=[];invoke_type>=database.BattleInvokeType.BattleInvokeType_Below_Life_10_Per_Rate;)switch(this.findTransPassiveSkillDurationEffectFind(invoke_type,passive_list),invoke_type){case database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_None;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_25_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_25_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_15_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_10_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_15_Per_Rate;break;default:invoke_type=database.BattleInvokeType.BattleInvokeType_None}for(var passive_idx=0;passive_idx<this.m_battle_general.trans_passive_skill.length;passive_idx++)if(0==this.m_battle_general.trans_passive_skill[passive_idx].mild_rabbit_count&&0<this.m_life_point)for(var dur_jdx=0;dur_jdx<passive_list.length;dur_jdx++){if(passive_list[dur_jdx].trans_type==database.BattleEffectTrans.HP_Shield_Caster_Max_HP){var max_hp=this.getMaxHealthPoint();passive_list[dur_jdx].life_shield=max_hp*passive_list[dur_jdx].value/1e4,this.addDurabilityEffect(passive_list[dur_jdx],this),++this.m_battle_general.trans_passive_skill[passive_idx].mild_rabbit_count}passive_list[dur_jdx].trans_type==database.BattleEffectTrans.Defence_Point_Rate_Inc&&this.addDurabilityEffect(passive_list[dur_jdx],this)}invoke_type=save_invoke_type;for(var ones=[];invoke_type>=database.BattleInvokeType.BattleInvokeType_Below_Life_10_Per_Rate;)switch(this.findTransPassiveSkillOneTimeEffectsFind(invoke_type,ones),invoke_type){case database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_None;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_40_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_25_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_30_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_25_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_15_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_20_Per_Rate;break;case database.BattleInvokeType.BattleInvokeType_Below_Life_10_Per_Rate:invoke_type=database.BattleInvokeType.BattleInvokeType_Below_Life_15_Per_Rate;break;default:invoke_type=database.BattleInvokeType.BattleInvokeType_None}for(var ones_idx=0;ones_idx<ones.length;ones_idx++)if(0==this.m_battle_general.m_Is_Life_Down_Active_Skill_Charge){if(this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Cooldown_chain_rabbit)||this.IsDurabilityEffect(database.BattleEffectTrans.Motion_Singing)||this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Charge)||this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Charge_koi));else{var active_skill_charge_count=0;ones[ones_idx].stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_1?active_skill_charge_count=1:ones[ones_idx].stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_2?active_skill_charge_count=2:ones[ones_idx].stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_3&&(active_skill_charge_count=3);for(var active_jdx=0;active_jdx<this.m_battle_general.active_skill.length;active_jdx++)this.m_battle_general.active_skill[active_jdx].skill_charge_count+=active_skill_charge_count,this.m_battle_general.active_skill[active_jdx].skill_charge_count>=MAX_SKILL_CHARGE_BUFF&&(this.m_battle_general.active_skill[active_jdx].skill_charge_count=MAX_SKILL_CHARGE_BUFF,this.m_battle_general.active_skill[active_jdx].cooltime=0)}this.m_battle_general.m_Is_Life_Down_Active_Skill_Charge=!0}if(this.use_skill_hp_rate(),this.m_game_type==db.BattleGameType.GreatWallDungeon||this.m_game_type==db.BattleGameType.WorldWarNpcDungeon){if(this.m_team_type==BattleGeneral_TeamType.Left);this.m_life_point<0&&(this.m_battle_general.is_dead=!0);max_hp=this.getMaxHealthPoint();var rate=this.m_life_point/max_hp*1e4;rate<0?rate=0:1e4<rate&&(rate=1e4),this.m_battle_general.remain_hp_rate=rate,0<parseInt(this.m_life_point)&&0==this.m_battle_general.remain_hp_rate&&(this.m_battle_general.remain_hp_rate=1,this.m_battle_general.is_dead=!1)}if(parseInt(this.m_life_point)<=0){var dur_list=[];if(0==this.m_battle_general.m_Is_Dur_Life_Not_Zero){this.findTransPassiveSkillDurationEffectFind(database.BattleInvokeType.BattleInvokeType_Always,dur_list);for(var dur_list_idx=0;dur_list_idx<dur_list.length;dur_list_idx++){(dur=$.extend({},dur_list[dur_list_idx])).trans_type==database.BattleEffectTrans.General_Life_Not_Zero&&(this.addDurabilityEffect(dur,this),this.m_battle_general.m_Is_Dur_Life_Not_Zero=!0,this.m_life_point=1,this.m_game_type!=db.BattleGameType.GreatWallDungeon&&this.m_game_type!=db.BattleGameType.WorldWarNpcDungeon||(this.m_battle_general.remain_hp_rate=1,this.m_battle_general.is_dead=!1)),dur=null}}else for(var dur_effect_idx=0;dur_effect_idx<this.m_durability_effects.length;dur_effect_idx++){var dur;(dur=$.extend({},this.m_durability_effects[dur_effect_idx])).trans_type==database.BattleEffectTrans.General_Life_Not_Zero&&(this.m_life_point=1,this.m_game_type!=db.BattleGameType.GreatWallDungeon&&this.m_game_type!=db.BattleGameType.WorldWarNpcDungeon||(this.m_battle_general.remain_hp_rate=1,this.m_battle_general.is_dead=!1)),dur=null}dur_list=null}if(parseInt(this.m_life_point)<0){this.m_life_point=0,null!=this._cbEventListenerFieldMng&&this.scheduleOnce(function(){var evt=new battle.Event;(evt.dataValue1=this)._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_GNRL_DEATH_AT,evt),evt=null}.bind(this),.01,"EventCode.EVT_FIELD_MNG_GNRL_DEATH_AT");var reader_one_list=[];this.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_Else_Dead_Our_Team,this.getGeneral(),reader_one_list);parseInt(1e4*Math.random());for(var one_idx=0;one_idx<reader_one_list.length;one_idx++){var one=$.extend({},reader_one_list[one_idx]);one.stat_trans==database.BattleEffectTrans.New_Reborn&&(this.rebornReservedGnrl(one,this.m_battle_general.general.gnrl_id,this.m_battle_general.gnrl_num),267==this.m_battle_general.general.gnrl_group&&(this.m_battle_general.m_Is_Reborn_Active_Max_Charge=!0))}for(var idx2=0;idx2<this.m_durability_effects.length;idx2++)this.m_durability_effects[idx2].invoke_type==database.BattleInvokeType.BattleInvokeType_Dead_At&&this.m_durability_effects[idx2].trans_type==database.BattleEffectTrans.In_Duration_Dead_At_Reborn&&this.deathSelfReborn(this.m_durability_effects[idx2],this)}else this.m_life_point>this.getMaxHealthPoint()&&(this.m_life_point=this.getMaxHealthPoint());var percent=this.m_life_point/this.getMaxHealthPoint()*100;this.m_info_bar.setPercentageLife(percent,!0),null!=this._updateLifeBar&&this._updateLifeBar.updateLifeBar(),this.momentShowInfoBar(show_life_duration),this.viewLifePoint()},reservedBackCourt:function(){this.addDebugGeneral("reservedBackCourt begin"),this.IsAnimationPause()&&this.generalResume(),this.is_reserved_backcourt&&(this.setGeneralState(BattleGeneral_GeneralState.Return),this.getArmServiceType()!=db.GeneralArmServiceType.ArmServiceType_Ranger&&this.playAction(ActionType.Back),this.is_reserved_backcourt=!1),this.removeDeactivationDebufEffect(),this.clearHittingEnemy(),this.clearTargetEnemy(),this.addDebugGeneral("reservedBackCourt end")},cbSoundPlayAttack_1:function(){var action_sound=this.m_battle_general.attack_action.action_sound;"0"!=action_sound&&""!=action_sound&&AudioEngine.getInstance().playEffect(RES_CDN_SOUND+SND_TYPE+"sound/"+action_sound)},cbSoundPlayAttack_2:function(){var action_sound=this.m_battle_general.attack2_action.action_sound;"0"!=action_sound&&""!=action_sound&&AudioEngine.getInstance().playEffect(RES_CDN_SOUND+SND_TYPE+"sound/"+action_sound)},cbSoundPlayAttack_3:function(){var action_sound=this.m_battle_general.attack3_action.action_sound;"0"!=action_sound&&""!=action_sound&&AudioEngine.getInstance().playEffect(RES_CDN_SOUND+SND_TYPE+"sound/"+action_sound)},checkFreezeEnemy:function(isSkill){var delete_list=[];if(isSkill){for(i=0;i<this.m_skill_target_enemys.length;i++){(g=this.m_skill_target_enemys[i]).m_cur_state==BattleGeneral_GeneralState.Freeze&&delete_list.push(g)}if(0!=delete_list.length)for(i=0;i<delete_list.length;i++){for(d=delete_list[i],found=0,found_is=!1,j=0;j<this.m_skill_target_enemys.length;j++)if(d==this.m_target_enemys[j]){found=j,found_is=!0;break}1==found_is&&this.m_skill_target_enemys.splice(found,1)}}else{for(var i=0;i<this.m_target_enemys.length;i++){var g;(g=this.m_target_enemys[i]).m_cur_state==BattleGeneral_GeneralState.Freeze&&delete_list.push(g)}if(0!=delete_list.length)for(var i=0;i<delete_list.length;i++){for(var d=delete_list[i],found=0,found_is=!1,j=0;j<this.m_target_enemys.length;j++)if(d==this.m_target_enemys[j]){found=j,found_is=!0;break}1==found_is&&this.m_target_enemys.splice(found,1)}}},preloadVoice:function(voice_type){},playVoicePart:function(voice_type){var voice_list=MasterTable.getInstance().get_Voice(this.m_battle_general.general.gnrl_id,voice_type,{}),voice=voice_list.voice,priority_value=voice_list.priority_value,audio=AudioEngine.getInstance();voice&&""!=voice&&(audio.IsVoicePlaying(this.m_Voice_File_Path)&&""!=this.m_Voice_File_Path?priority_value<this.m_Voice_priority_value&&(audio.playVoice(RES_CDN_SOUND+SND_TYPE+"voice_etc/"+voice+".mp3"),this.m_Voice_File_Path=RES_CDN_SOUND+SND_TYPE+"voice_etc/"+voice+".mp3",this.m_Voice_priority_value=priority_value,this.m_use_voice_type.push(voice_type)):(audio.playVoice(RES_CDN_SOUND+SND_TYPE+"voice_etc/"+voice+".mp3"),this.m_Voice_File_Path=RES_CDN_SOUND+SND_TYPE+"voice_etc/"+voice+".mp3",this.m_Voice_priority_value=priority_value,this.m_use_voice_type.push(voice_type)))},setReservedBackCourt:function(is_reserved){this.is_reserved_backcourt=is_reserved,this.addDebugGeneral("setReservedBackCourt")},IsFreezeCheck:function(){for(var freeze_is=!1,i=0;i<this.m_durability_effects.length;i++){var dur=this.m_durability_effects[i];if(i,database.BattleEffectTrans.Freeze==dur.trans_type||database.BattleEffectTrans.Petrification==dur.trans_type||database.BattleEffectTrans.Not_Resist_Freeze==dur.trans_type){freeze_is=!0;break}}return 1==freeze_is},addDebugGeneral:function(_func_name){if(TEST_GENERAL_LOG_SHOW){var now=moment(),d={};d._func=_func_name,d._action_type=this.m_cur_action,d._max_life=this.getMaxHealthPoint(),d._cur_life=this.getCurrentLifePoint(),d._pre_state=this.m_prev_state,d._state=this.m_cur_state,d._focus_state=this.m_focus_state,d._is_pause=this.IsAnimationPause(),d._is_reserved=this.is_reserved_backcourt,null!=this.m_my_team?d._battle_state=this.m_my_team.getBattleState():d._battle_state=0,d._is_hit_duration=this.m_hitted_duration,d._hit_duration=this.m_hit_duration,d._skill_charge_count=this.m_current_skill_charge_count,d._time=cmString("%02d:%02d:%02d",now.get("hour"),now.get("minute"),now.get("second")),d._usec=this.cur_time();var director=cc.director;director.isDisplayStats()&&(d._frames=cmString("%.1f/%.3f",director.getFrameRate(),director.getSecondsPerFrame())),this.m_debug_list.push_back(d),d._state<BattleGeneral_GeneralState.End&&0<d._battle_state&&this.m_my_team.addGeneralDebugLog(this.m_battle_general,d)}},cur_time:function(){return(new Date).getTime()},addDamageLogDebug:function(d){if(TEST_DAMAGE_LOG_SHOW){var now=moment();d._time=cmString("%02d:%02d:%02d",now.hours(),now.minutes(),now.seconds()),d._team_type=this.m_team_type,this.m_my_team.addDamageLogGeneral(this.m_battle_general,$.extend({},d))}},viewLifePoint:function(){},IsAnimationPause:function(){var entry=this.m_sk.getCurrent(0);return null!=entry&&0==entry.timeScale},playSkillEffectSound:function(){this.m_battle_general.active_skill[0].skill_action.action_sound;this.m_team_type==BattleGeneral_TeamType.Right&&1==this.m_battle_general.active_skill[0].skill.enemy_skill_type&&this.m_battle_general.active_skill[0].skill_action.enemy_action_sound},findTransType:function(_trans,is_friend){if(null!=is_friend&&null!=is_friend||(is_friend=!1),1==is_friend){for(var found_is=!1,i=0;i<this.m_durability_effects.length;i++){if(i,(eff=this.m_durability_effects[i]).trans_type==_trans&&eff.is_friend_effect==is_friend&&0==eff.is_end){found_is=!0;break}}if(1==found_is)return!0}else{for(found_is=!1,i=0;i<this.m_durability_effects.length;i++){var eff;if(i,(eff=this.m_durability_effects[i]).trans_type==_trans&&0==eff.is_end){found_is=!0;break}}if(1==found_is)return!0}return!1},calcSpecialAbility:function(dt){if(0!=this.m_battle_general.special_ability.length)for(var i=0;i<this.m_battle_general.special_ability.length;i++)if(this.m_battle_general.special_ability[i].special_ability_type==database.BattleSpecialAbilityType.SpecialAbilityType_Recovery_Tick&&(this.m_battle_general.special_ability[i].delta_tick+=dt,1<=this.m_battle_general.special_ability[i].delta_tick)){this.m_battle_general.special_ability[i].delta_tick=0;var recoverty_life=this.getMaxHealthPoint()*this.m_battle_general.special_ability[i].ability_value/1e4;this.getBloodSucking(recoverty_life)}},getSpecialAbilityRecovertyInc:function(input_value){for(var point=input_value,i=0;i<this.m_battle_general.special_ability.length;i++)this.m_battle_general.special_ability[i].special_ability_type==database.BattleSpecialAbilityType.SpecialAbilityType_Recovery_Inc&&(point+=input_value*this.m_battle_general.special_ability[i].ability_value/1e4);return point},getEventDungeonGnrlBuf:function(stat_type){for(var point=0,s_type=stat_type,is_enable=!1,service=EventDungeonService.getInstance(),event_dungeon_period_idx=BattleContext._getInstance().getEventDungeonPeriodIdx(),period=MasterManager.getInstance().get_EventDungeonPeriod(event_dungeon_period_idx),i=(service.getEventDungeonFirstHalfPeriodIdx(period.event_dungeon_group_idx),service.getEventDungeonMiddleHalfPeriodIdx(period.event_dungeon_group_idx),service.getEventDungeonSecondHalfPeriodIdx(period.event_dungeon_group_idx),0);i<this.m_battle_general.evt_dungeon_buff.length;i++)is_enable=EventDungeonService.getInstance().IsOpenEventDungeonBuff(this.m_battle_general.evt_dungeon_buff[i].buff_period_idx),this.m_battle_general.evt_dungeon_buff[i].buff_type==s_type&&is_enable&&(point+=this.m_battle_general.evt_dungeon_buff[i].buff_value);return point},getEventDungeonGnrlTransResistBuf:function(trans_type){for(var point=0,t_type=trans_type,is_enable=!1,i=0;i<this.m_battle_general.evt_dungeon_buff.length;i++)is_enable=EventDungeonService.getInstance().IsOpenEventDungeonBuff(this.m_battle_general.evt_dungeon_buff[i].buff_period_idx),this.m_battle_general.evt_dungeon_buff[i].trans_type==t_type&&is_enable&&(point+=this.m_battle_general.evt_dungeon_buff[i].trans_resist_value);return point},getEquipmentBuff:function(stat_type){return this.checkEquipmentsMng(),this.m_equipments.getEquipmentBuff(stat_type)},getEquipmentSetGroupBuff:function(stat_type){return this.checkEquipmentsMng(),this.m_equipments.getEquipmentSetGroupBuff(stat_type)},getEquipmentOptionStatBuff:function(stat_type){return this.checkEquipmentsMng(),this.m_equipments.getEquipmentOptionStatBuff(stat_type)},getEquipmentPassiveBuff:function(target,invoke_type,stat_type){return this.checkEquipmentsMng(),this.m_equipments.getEquipmentPassiveBuff(target,invoke_type,stat_type)},getEquipmentOnetimeEffect:function(target,invoke_type,effs){this.checkEquipmentsMng(),this.m_equipments.getEquipmentOnetimeEffect(target,invoke_type,effs)},getEquipmentDurabilityEffect:function(target,invoke_type,effs){this.checkEquipmentsMng(),this.m_equipments.getEquipmentDurabilityEffect(target,invoke_type,effs)},checkEquipmentsMng:function(){null==this.m_equipments&&(this.m_equipments=new BattleEquipment,this.m_equipments.setBattleGeneralData(this))},IsDurabilityEffect:function(trans_type){for(var idx=0;idx<this.m_durability_effects.length;idx++){var dur=$.extend({},this.m_durability_effects[idx]);if(dur.trans_type==trans_type)return!(dur=null);dur=null}return!1},forceKill:function(){this.m_life_point=0},deadElseGeneral:function(dead_gnrl){if(this.IsAlive()&&dead_gnrl!=this)for(var target_team_type=dead_gnrl.getTeamType(),idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++){var passive=this.m_battle_general.trans_passive_skill[idx];if(passive.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Else_Dead_At)for(var i=0;i<passive.onetime_effects.length;i++){(one=passive.onetime_effects[i]).stat_trans==database.BattleEffectTrans.New_Reborn?target_team_type==this.m_team_type&&0==passive.reborn_count&&(dead_gnrl.m_is_reborn_enable||dead_gnrl.m_is_self_reborn_enable||(dead_gnrl.rebornReservedGnrl(one,this.m_battle_general.gnrl_id,this.m_battle_general.gnrl_num),passive.reborn_count+=1,267==this.m_battle_general.general.gnrl_group&&(this.m_battle_general.m_Is_Reborn_Active_Max_Charge=!0))):one.stat_trans==database.BattleEffectTrans.None&&(one.input_ability_type!=database.BattleInputAbility.Skill_CoolTime_Rate_Dec&&one.input_ability_type!=database.BattleInputAbility.Skill_CoolTime_Dec||one.output_ability_type!=database.BattleOutputAbility.Cooltime?(this.dead_heal_queue.empty()&&(this.dead_heal_delta_time=.5),this.dead_heal_queue.push(one)):this.addOnetimeEffect(one))}else if(passive.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Dead_Enemy){if(target_team_type!=this.m_team_type)for(var one_idx=0;one_idx<passive.onetime_effects.length;one_idx++){var one;if((one=passive.onetime_effects[one_idx]).stat_trans==database.BattleEffectTrans.Pumpkin_Curse)dead_gnrl.findTransType(database.BattleEffectTrans.Pumpkin_Curse,this.IsFriend())&&this.m_battle_general.active_skill.at(0).skill_charge_count<MAX_SKILL_CHARGE_BUFF&&this.m_battle_general.active_skill.at(0).is_cooltime&&passive.full_charge_count<2&&(passive.full_charge_count+=1,this.m_battle_general.active_skill.at(0).is_prepared?this.m_battle_general.active_skill.at(0).skill_charge_count=MAX_SKILL_CHARGE_BUFF-1:this.m_battle_general.active_skill.at(0).skill_charge_count=MAX_SKILL_CHARGE_BUFF,this.m_battle_general.active_skill.at(0).cooltime=0,null!=this._skillCooltimeProc_V2&&this._skillCooltimeProc_V2.skillCooltimeProc_V2(this.m_battle_general.active_skill.at(0).cooltime,this.m_battle_general.active_skill.at(0).skill_charge_count),this.addCommonEffectNode("Bangtong_Haloween17_skill_charging"));else if(one.stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_1)this.m_battle_general.active_skill.at(0).skill_charge_count<MAX_SKILL_CHARGE_BUFF&&this.m_battle_general.active_skill.at(0).is_cooltime&&(this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Cooldown_chain_rabbit)||this.IsDurabilityEffect(database.BattleEffectTrans.Motion_Singing)||this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Charge)||this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Charge_koi)||(this.m_battle_general.active_skill.at(0).skill_charge_count+=1,this.m_battle_general.active_skill.at(0).skill_charge_count>=MAX_SKILL_CHARGE_BUFF&&(this.m_battle_general.active_skill.at(0).skill_charge_count=MAX_SKILL_CHARGE_BUFF,this.m_battle_general.active_skill.at(0).cooltime=0))),null!=this._skillCooltimeProc_V2&&this._skillCooltimeProc_V2.skillCooltimeProc_V2(this.m_battle_general.active_skill.at(0).cooltime,this.m_battle_general.active_skill.at(0).skill_charge_count);else if(one.stat_trans==database.BattleEffectTrans.None)if(one.input_ability_type!=database.BattleInputAbility.Skill_CoolTime_Rate_Dec&&one.input_ability_type!=database.BattleInputAbility.Skill_CoolTime_Dec||one.output_ability_type!=database.BattleOutputAbility.Cooltime)if(0==passive.trans_passive.action_id)this.dead_heal_queue.empty()&&(this.dead_heal_delta_time=.5),this.dead_heal_queue.push(one);else{target_list=[],action=MasterManager.getInstance().get_ActionImplementation(passive.trans_passive.action_id);one.our_enemy==database.BattleSelfOther.Other?null!=this._findEnemyTarget&&(target_list=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position)):one.our_enemy==database.BattleSelfOther.Self&&(target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position));for(t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addOnetimeEffect(one)}else if(0==passive.trans_passive.action_id)this.addOnetimeEffect(one);else{var target_list=[],action=MasterManager.getInstance().get_ActionImplementation(passive.trans_passive.action_id);one.our_enemy==database.BattleSelfOther.Other?null!=this._findEnemyTarget&&(target_list=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position)):one.our_enemy==database.BattleSelfOther.Self&&(target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position));for(var t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addOnetimeEffect(one)}}}else if(passive.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Dead_Team)for(idx=0;idx<passive.onetime_effects.length;idx++)passive.onetime_effects[idx].stat_trans==database.BattleEffectTrans.None&&target_team_type==this.m_team_type&&(passive.onetime_effects[idx].input_ability_type!=database.BattleInputAbility.Skill_CoolTime_Rate_Dec&&passive.onetime_effects[idx].input_ability_type!=database.BattleInputAbility.Skill_CoolTime_Dec||passive.onetime_effects[idx].output_ability_type!=database.BattleOutputAbility.Cooltime||this.addOnetimeEffect(passive.onetime_effects[idx]));if(passive.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Else_Dead_At)for(var durability_idx=0;durability_idx<passive.durability_effects.length;durability_idx++){var dur=passive.durability_effects[durability_idx];Math.floor(100*Math.random())+1<=dur.percent&&this.addDurabilityEffect(dur,this)}else if(passive.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Dead_Team){if(target_team_type!=this.m_team_type)break;for(durability_idx=0;durability_idx<passive.durability_effects.length;durability_idx++){dur=passive.durability_effects[durability_idx];if(Math.floor(100*Math.random())+1<=dur.percent&&dur.trans_type==database.BattleEffectTrans.All_Our_Team_Dead_Count_Def_Inc)if(0==passive.trans_passive.action_id)this.addDurabilityEffect(dur,this);else{target_list=[],action=MasterManager.getInstance().get_ActionImplementation(passive.action.action_id);dur.our_enemy==database.BattleSelfOther.Other?null!=this._findEnemyTarget&&(target_list=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position)):dur.our_enemy==database.BattleSelfOther.Self&&(target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position));for(t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addDurabilityEffect(dur,this)}}}else if(passive.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Dead_Enemy&&target_team_type!=this.m_team_type)for(durability_idx=0;durability_idx<passive.durability_effects.length;durability_idx++){var stack_cnt=0,limit_cnt=passive.durability_effects[durability_idx].durability.dura_end_effect;action=MasterManager.getInstance().get_ActionImplementation(passive.trans_passive.action_id);if(0!=passive.durability_effects[durability_idx].durability.dura_end_effect)for(var stack_effect=passive.durability_effects[durability_idx].trans_type,durability_jdx=0;durability_jdx<this.m_durability_effects.length;durability_jdx++)this.m_durability_effects[durability_jdx].trans_type==stack_effect&&++stack_cnt;if(0==action.action_id)0!=passive.durability_effects[durability_idx].durability.dura_end_effect&&stack_cnt<limit_cnt?this.addDurabilityEffect(passive.durability_effects[durability_idx],this):0==passive.durability_effects[durability_idx].durability.dura_end_effect&&this.addDurabilityEffect(passive.durability_effects[durability_idx],this);else{target_list=[];passive.durability_effects[durability_idx].our_enemy==database.BattleSelfOther.Other?null!=this._findEnemyTarget&&(target_list=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position)):passive.durability_effects[durability_idx].our_enemy==database.BattleSelfOther.Self&&(target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position));for(t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addDurabilityEffect(passive.durability_effects[durability_idx],this)}}}},findTransPassiveSkillOneTimeEffectsFind:function(invoke_type,list){for(var idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++){var passive=this.m_battle_general.trans_passive_skill[idx];if(passive.trans_passive.invoke_type1==invoke_type)if(null!=passive.onetime_effects)for(var jdx=0;jdx<passive.onetime_effects.length;jdx++){var o=passive.onetime_effects[jdx];list.push_back($.extend({},o))}else cc.log("error onetime effect = "+passive.trans_passive.name)}},selfRebornReserved:function(reborn_one_time_effect,reborn_dur_effect){this.m_is_self_reborn_enable=!0,this.m_self_reborn_onetime_effect=reborn_one_time_effect,null!=reborn_dur_effect&&(this.m_self_reborn_durability_effect=reborn_dur_effect)},ReaderSkillRebornReserved:function(reborn_one_time_effect,base_gnrl_id,base_gnrl_num){this.m_reborn_onetime_effect=reborn_one_time_effect,this.m_reborn_base_gnrl.gnrl_id=base_gnrl_id,this.m_reborn_base_gnrl.gnrl_num=base_gnrl_num},getEquipmentTransResistBuff:function(trans_type){for(var point=0,t_type=trans_type,idx=0;idx<this.m_battle_general.equipments.length;idx++)for(var equip=this.m_battle_general.equipments[idx],jdx=0;jdx<equip.equip_options.length;jdx++){var opt=equip.equip_options[jdx];opt.resist_type==t_type&&(equip.equipment.equipment_type==EQUIPMENT_TYPE_NORMAL?point+=opt.resist_stat_trans_added_value:point+=opt.private_resist_stat_trans_added_value)}return point},getEquipmentAddedOptionBuff:function(equip,stat_type){for(var point=0,s_type=stat_type,idx=0;idx<equip.equip_options.length;idx++){var opt=equip.equip_options[idx];opt.stat_type==s_type&&(equip.equipment.equipment_type==EQUIPMENT_TYPE_NORMAL?point+=opt.stat_value:point+=opt.private_stat_value)}return point},getEquipmentStatTransRate:function(trans_type){for(var point=0,t_type=trans_type,idx=0;idx<this.m_battle_general.equipments.length;idx++)for(var e=this.m_battle_general.equipments[idx],jdx=0;jdx<e.equip_options.length;jdx++){var opt=e.equip_options[jdx];opt.stat_trans_type==t_type&&(e.equipment.equipment_type==EQUIPMENT_TYPE_NORMAL?point+=opt.stat_trans_added_rate:point+=opt.private_stat_trans_added_rate)}return point},rebornReservedGnrl:function(reborn_one_time_effect,base_gnrl_id,base_gnrl_num){this.m_is_reborn_enable=!0,this.m_reborn_onetime_effect=reborn_one_time_effect,this.m_reborn_base_gnrl.gnrl_id=base_gnrl_id,this.m_reborn_base_gnrl.gnrl_num=base_gnrl_num},killedGeneralByBase:function(target,attk_type){if(attk_type==Hit_Attack_Type.SKILL)for(var idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++){var passive=this.m_battle_general.trans_passive_skill[idx];if(passive.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_KilledByActiveSkill)for(var jdx=0;jdx<passive.onetime_effects.length;jdx++){var one=passive.onetime_effects[jdx];if(one.our_enemy==database.BattleSelfOther.Self)this.addOnetimeEffect(one);else if(one.our_enemy==database.BattleSelfOther.Other){this.m_battle_general.general.gnrl_id%1e3==271?this.addCommonEffectNode("fx_hajin_kill"):this.m_battle_general.general.gnrl_id%1e3==404&&this.addCommonEffectNode("Seowhang_Halloween19_fx_kill_fx");var bone=target.m_sk.findBone("bar"),barPos=cc.p(bone.x,bone.y),pos_x=0,pos_y=0;if(pos_y=(pos_x=0==this.m_sk._skeleton.flipX?barPos.x:-barPos.x,.5*barPos.y),271==this.m_battle_general.general.gnrl_id?this.setCommonEffectPosition("fx_hajin_kill",pos_x,pos_y,target):404==this.m_battle_general.general.gnrl_id&&this.setCommonEffectPosition("Seowhang_Halloween19_fx_kill_fx",pos_x,pos_y,target),this.m_target_enemys=[],null!=this._findEnemyTarget){var transpassive={};transpassive.action=new database.BattleActionImpl,transpassive.action.target_count=5,transpassive.action.priority_position=0,this.m_target_enemys=this._findEnemyTarget.findEnemyTarget(this,transpassive.action.target_count,transpassive.action.priority_position)}if(0<this.m_target_enemys.size())for(var t_idx=0;t_idx<this.m_target_enemys.length;t_idx++){var t=this.m_target_enemys[t_idx],attk=this.getAttackPoint(),ori_attk=attk;attk=attk*one.value/100;var damage=new Damage,element_advance_attk_buf_rate=t.checkElementAdvanceTargetDamage(this);attk+=attk*element_advance_attk_buf_rate/100,0<element_advance_attk_buf_rate&&(damage.is_element_trans_buf=!0,damage.attk_element_type_buf=element_advance_attk_buf_rate),element_advance_attk_buf_rate<0?damage.element_adv_type=-1:0<element_advance_attk_buf_rate&&(damage.element_adv_type=1),damage.attack_type=Hit_Attack_Type.ATTACK_1,damage.damage=attk,damage.origin_damage=ori_attk,damage.shared_point=100,damage.gnrl_id=t.getGeneral().general.gnrl_id,damage.damage_type=database.DamageType.Normal,damage.hit_point=2,damage.element_type=this.getElementType(),t.addDamage(this,damage)}}}if(passive.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_KilledByActiveSkill)for(jdx=0;jdx<passive.durability_effects.length;jdx++)if(0==passive.trans_passive.action_id)passive.durability_effects[jdx].our_enemy==database.BattleSelfOther.Self?this.IsAlive()&&(passive.durability_effects[jdx].trans_type==database.BattleEffectTrans.Passive_Duration_Critical_Power_Rate_inc?this.addDurabilityEffectCheckFromTime(database.BattleInvokeType.BattleInvokeType_KilledByActiveSkill,database.BattleEffectTrans.Passive_Duration_Critical_Power_Rate_inc):this.addDurabilityEffect(passive.durability_effects[jdx],this)):passive.durability_effects[jdx].our_enemy==database.BattleSelfOther.Other&&target.addDurabilityEffect(passive.durability_effects[jdx],this);else{var target_list=[],action=MasterManager.getInstance().get_ActionImplementation(passive.trans_passive.action_id);passive.durability_effects[jdx].our_enemy==database.BattleSelfOther.Other?null!=this._findEnemyTarget&&(target_list=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position)):passive.durability_effects[jdx].our_enemy==database.BattleSelfOther.Self&&(target_list=this.getMyTeam().findOurTarget(this,action.target_count,action.priority_position));for(var tdx=0;tdx<target_list.length;tdx++)target_list[tdx].IsAlive()&&target_list[tdx].addDurabilityEffect(passive.durability_effects[jdx],this)}}else attk_type==Hit_Attack_Type.ATTACK_1||attk_type==Hit_Attack_Type.ATTACK_2||Hit_Attack_Type.ATTACK_3},getTransPassiveSkillOneTimeEffectFind:function(invoke_type,_type){for(var _effect={find_one:!1},idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++){var passive=this.m_battle_general.trans_passive_skill[idx];if(passive.trans_passive.invoke_type1==invoke_type)for(var jdx=0;jdx<passive.onetime_effects.length;jdx++){var o=passive.onetime_effects[jdx];if(o.stat_trans==_type)return _effect.one=o,_effect.find_one=!0,_effect}}return _effect.find_one=!1,_effect},findTransPassiveSkillDurationEffectFind:function(invoke_type,effs){for(var idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++){var passive=this.m_battle_general.trans_passive_skill[idx];if(passive.trans_passive.invoke_type2==invoke_type)for(var durability_idx=0;durability_idx<passive.durability_effects.length;durability_idx++){var dur=passive.durability_effects[durability_idx];effs.push_back($.extend({},dur))}}},getEquipmentStatTransDuration:function(trans_type){for(var point=0,t_type=trans_type,idx=0;idx<this.m_battle_general.equipments.length;idx++)for(var e=idx<this.m_battle_general.equipments[idx],jdx=0;jdx<e.equip_options.length;jdx++){var opt=e.equip_options[jdx];opt.stat_trans_type==t_type&&(e.equipment.equipment_type==EQUIPMENT_TYPE_NORMAL?point+=opt.stat_trans_added_duration:point+=opt.private_stat_trans_added_duration)}return point},getEquipmentElementRecvDmg:function(element_type){for(var point=0,idx=0;idx<this.m_battle_general.equipments.length;idx++)for(var e=idx<this.m_battle_general.equipments[idx],jdx=0;jdx<e.equip_options.length;jdx++){var opt=e.equip_options[jdx];opt.element_type==element_type&&(e.equipment.equipment_type==EQUIPMENT_TYPE_NORMAL?point+=opt.element_recv_damage_dec:point+=opt.private_element_recv_damage_dec)}return point},getEquipmentElementSendDmg:function(element_type){for(var point=0,idx=0;idx<this.m_battle_general.equipments.length;idx++)for(var e=idx<this.m_battle_general.equipments[idx],jdx=0;jdx<e.equip_options.length;jdx++){var opt=e.equip_options[jdx];opt.element_type==element_type&&(e.equipment.equipment_type==EQUIPMENT_TYPE_NORMAL?point+=opt.element_send_damage_inc:point+=opt.private_element_send_damage_inc)}return point},getBattleGeneral:function(){return this.m_battle_general},load:function(skin_id,born_id,scale){this.m_skin_id=skin_id,this.m_bone_id=born_id;var gnrl=MasterManager.getInstance().get_General(born_id),json="",atlas="",json_group_num=gnrl.gnrl_group,sd_files=SDGeneralName[json_group_num];this.sd_img=[];for(var idx=0;idx<sd_files.length;idx++){var sd_path_file=RES_CDN_DEFULT+cmString("gnrl_%03d/sd/%s.png",json_group_num,sd_files[idx]);-1==this.sd_img.indexOf(sd_path_file)&&this.sd_img.push(sd_path_file),sd_path_file=null}var sd_path1=RES_CDN_DEFULT+cmString("gnrl_%03d/sd/%s.json",json_group_num,born_id);-1==this.sd_img.indexOf(sd_path1)&&this.sd_img.push(sd_path1),sd_path1=null;var sd_path2=RES_CDN_DEFULT+cmString("gnrl_%03d/sd/%s.atlas",json_group_num,skin_id);return-1==this.sd_img.indexOf(sd_path2)&&this.sd_img.push(sd_path2),sd_path2=null,resourceLoader(this.sd_img,function(){atlas=json_group_num<10?(json=RES_CDN_DEFULT+"gnrl_00"+json_group_num+"/sd/"+born_id+".json",RES_CDN_DEFULT+"gnrl_00"+json_group_num+"/sd/"+skin_id+".atlas"):99<json_group_num?(json=RES_CDN_DEFULT+"gnrl_"+json_group_num+"/sd/"+born_id+".json",RES_CDN_DEFULT+"gnrl_"+json_group_num+"/sd/"+skin_id+".atlas"):(json=RES_CDN_DEFULT+"gnrl_0"+json_group_num+"/sd/"+born_id+".json",RES_CDN_DEFULT+"gnrl_0"+json_group_num+"/sd/"+skin_id+".atlas")}.bind(this)),this.m_sk=sp.SkeletonAnimation.createWithJsonFile(json,atlas,scale),this.initMix(),this.is_loaded=!0,482==gnrl.gnrl_group&&this.m_sk.setAnimation(1,"loop_off",!0),this.m_sk},initCommonFx:function(){if(USE_NEW_COMMON_FX){var service=BattleService.getInstance();service.getMasterFxPartList(777777,1,this.m_common_fx_parts),service.getMasterFxPartList(999999,1,this.m_common_fx_parts)}},addStatTrans:function(dur,duration,gnrl_group){var gnrl=MasterManager.getInstance().get_General(dur.gnrl_id),e_list=[];null!=dur&&""!=dur.durability.effect_call&&null!=dur.durability.effect_call&&"0"!=dur.durability.effect_call&&0!=dur.effect_id&&(e_list=dur.durability.effect_call.split(","));var fx_list=[];if(0<e_list.length)for(var idx=0;idx<e_list.length;idx++){var e=e_list[idx];fx_list.push(this.recycledCommonFxNode(e))}else switch(dur.trans_type){case database.BattleEffectTrans.Stun:case database.BattleEffectTrans.Not_Resist_Stun:fx_list.push(this.recycledCommonFxNode("fx_stun"));break;case database.BattleEffectTrans.Sleep:fx_list.push(this.recycledCommonFxNode("fx_sleep"));break;case database.BattleEffectTrans.Burning:break;case database.BattleEffectTrans.Poison:case database.BattleEffectTrans.Not_Resist_Poison:case database.BattleEffectTrans.New_Poison_Dmg_Rate:fx_list.push(this.recycledCommonFxNode("fx_poison"));break;case database.BattleEffectTrans.Silence:case database.BattleEffectTrans.Not_Resist_Silence:fx_list.push(this.recycledCommonFxNode("fx_sealed")),fx_list.push(this.recycledCommonFxNode("fx_silence"));break;case database.BattleEffectTrans.Freeze:case database.BattleEffectTrans.Not_Resist_Freeze:0!=gnrl_group?(this.m_exec_freeze_gnrl_group=gnrl_group,this.m_exec_freeze_gnrl_group==FREEZE_YUBI_GROUP||251==gnrl.gnrl_group?fx_list.push(this.recycledCommonFxNode("fx_freeze_snowman")):fx_list.push(this.recycledCommonFxNode("fx_freeze"))):fx_list.push(this.recycledCommonFxNode("fx_freeze"));break;case database.BattleEffectTrans.Timer_Bomb_Calc_Def:case database.BattleEffectTrans.Timer_Bomb_No_Calc_Def:0!=gnrl_group&&435==gnrl_group?fx_list.push_back(this.recycledCommonFxNode("Jegalryang_VD20_fx_Chocolat")):fx_list.push_back(this.recycledCommonFxNode("Bangtong_Haloween17_pumpkin_bomb"));break;case database.BattleEffectTrans.Damage_Increased:case database.BattleEffectTrans.Critical_Percent_Rate_Inc:case database.BattleEffectTrans.Critical_Power_Rate_inc:case database.BattleEffectTrans.Caster_Lv_Attk_Inc:case database.BattleEffectTrans.Caster_Lv_Critical_Rate_Inc:case database.BattleEffectTrans.Caster_Lv_Critical_Power_Inc:fx_list.push(this.recycledCommonFxNode("fx_offence"));break;case database.BattleEffectTrans.Freeze_End:this.m_exec_freeze_gnrl_group==FREEZE_YUBI_GROUP||251==gnrl.gnrl_group?fx_list.push(this.recycledCommonFxNode("fx_freeze_end_snowman")):fx_list.push(this.recycledCommonFxNode("fx_freeze_end"));break;case database.BattleEffectTrans.Timer_Bomb_Calc_Def_End:case database.BattleEffectTrans.Timer_Bomb_No_Calc_Def_End:240==gnrl.gnrl_group?fx_list.push_back(this.recycledCommonFxNode("Bangtong_Haloween17_pumpkin_bomb_end")):253==gnrl.gnrl_group&&fx_list.push_back(this.recycledCommonFxNode("Jungwook_Xmas17_giftbox_bomb_end"));break;case database.BattleEffectTrans.Defence_Increased:case database.BattleEffectTrans.Defence_Point_Rate_Inc:case database.BattleEffectTrans.Defence_Increased_Rate:case database.BattleEffectTrans.All_Our_Team_Dead_Count_Def_Inc:case database.BattleEffectTrans.Random_Stat_Defence_50_To_100:case database.BattleEffectTrans.Caster_Lv_Def_Inc:fx_list.push(this.recycledCommonFxNode("fx_defence"));break;case database.BattleEffectTrans.New_Damage_Reduce_Rate:case database.BattleEffectTrans.Not_Resist_Damage_Reduce:fx_list.push(this.recycledCommonFxNode("fx_electricshock"));break;case database.BattleEffectTrans.New_Recv_Damage_Inc_Rate:case database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate:fx_list.push(this.recycledCommonFxNode("fx_burn"));break;case database.BattleEffectTrans.ActiveSkill_Damage_Inc:case database.BattleEffectTrans.Glitter_Beach_Stack_ActiveSkill_Damage_Inc:case database.BattleEffectTrans.Timer_Passed_Stack_Up_Skill_Attk_Inc:case database.BattleEffectTrans.Caster_Lv_Skill_Attack_Inc:case database.BattleEffectTrans.Caster_Lv_Skill_Attack_Inc_Dup_Limit:fx_list.push(this.recycledCommonFxNode("fx_active_inc"));break;case database.BattleEffectTrans.ActiveSkill_Damage_Dec:fx_list.push(this.recycledCommonFxNode("fx_active_dec"));break;case database.BattleEffectTrans.Damage_Reduce:fx_list.push(this.recycledCommonFxNode("fx_electricshock"));break;case database.BattleEffectTrans.Defence_Reduce_Rate:fx_list.push(this.recycledCommonFxNode("fx_armorbreak"));break;case database.BattleEffectTrans.After_Recv_Damage_Inc_Rate:fx_list.push(this.recycledCommonFxNode("fx_burn"));break;case database.BattleEffectTrans.After_Send_Damage_Inc_Rate:fx_list.push(this.recycledCommonFxNode("fx_offence"));break;case database.BattleEffectTrans.Defence_Point_Rate_Dec:fx_list.push(this.recycledCommonFxNode("fx_armorbreak"));break;case database.BattleEffectTrans.Electric_Shork:break;case database.BattleEffectTrans.Bleeding_Woounds:fx_list.push(this.recycledCommonFxNode("fx_bleeding"));break;case database.BattleEffectTrans.Petrification:fx_list.push(this.recycledCommonFxNode("fx_stone"));break;case database.BattleEffectTrans.Petrification_End:fx_list.push(this.recycledCommonFxNode("fx_stone_end"));break;case database.BattleEffectTrans.Guard_Invoke_Rate_inc:fx_list.push(this.recycledCommonFxNode("fx_superarmor"));break;case database.BattleEffectTrans.Guard_Invoke_Rate_Dec:fx_list.push(this.recycledCommonFxNode("fx_guardbreak"));break;case database.BattleEffectTrans.Guard_Defence_Rate_Inc:fx_list.push(this.recycledCommonFxNode("fx_superarmor"));break;case database.BattleEffectTrans.Guard_Defence_Rate_Dec:fx_list.push(this.recycledCommonFxNode("fx_guardbreak"));break;case database.BattleEffectTrans.Element_Type_Fire_Trans:fx_list.push(this.recycledCommonFxNode("fx_fire"));break;case database.BattleEffectTrans.Element_Type_Water_Trans:fx_list.push(this.recycledCommonFxNode("fx_water"));break;case database.BattleEffectTrans.Element_Type_Wind_Trans:fx_list.push(this.recycledCommonFxNode("fx_wind"));break;case database.BattleEffectTrans.Element_Type_Light_Trans:fx_list.push(this.recycledCommonFxNode("fx_light"));break;case database.BattleEffectTrans.Element_Type_Dark_Trans:fx_list.push(this.recycledCommonFxNode("fx_dark"));break;case database.BattleEffectTrans.Resistance_Increment:fx_list.push(this.recycledCommonFxNode("fx_aura"));break;case database.BattleEffectTrans.Provocation:fx_list.push(this.recycledCommonFxNode("fx_provoke"));break;case database.BattleEffectTrans.FeverMode:fx_list.push(this.recycledCommonFxNode("fx_fever"));break;case database.BattleEffectTrans.Trans_Invincibility_Mode:fx_list.push(this.recycledCommonFxNode("fx_immune_debuff"));break;case database.BattleEffectTrans.Invisibility:fx_list.push(this.recycledCommonFxNode("fx_cure")),this.setOpacity(125);break;case database.BattleEffectTrans.Invincibility_Non_Alpha:fx_list.push_back(this.recycledCommonFxNode("fx_cure"));break;case database.BattleEffectTrans.Defence_Ignore_Attack:fx_list.push(this.recycledCommonFxNode("fx_ignores_defense"));break;case database.BattleEffectTrans.Heal_By_Tick_Time:fx_list.push(this.recycledCommonFxNode("fx_slow_heal"));break;case database.BattleEffectTrans.Critical_Percent_Rate_Dec:break;case database.BattleEffectTrans.Reflect_Damage:fx_list.push_back(this.recycledCommonFxNode("fx_aura"));break;case database.BattleEffectTrans.Wound_Obstruct_Heal:case database.BattleEffectTrans.Not_Resist_Wound:fx_list.push_back(this.recycledCommonFxNode("fx_wound"));break;case database.BattleEffectTrans.Blind_Darkness:case database.BattleEffectTrans.Not_Resist_Blind:fx_list.push_back(this.recycledCommonFxNode("fx_blind"));break;case database.BattleEffectTrans.After_Recv_Skill_Dmg_Dec_Rate:break;case database.BattleEffectTrans.HP_Shield_Caster_Max_HP:fx_list.push_back(this.recycledCommonFxNode("fx_alleviation"));break;case database.BattleEffectTrans.Stop_Skill_Cooldown_chain_rabbit:fx_list.push_back(this.recycledCommonFxNode("Bangtong_Suit18_fx_debuff"));break;case database.BattleEffectTrans.Send_Damage_Inc_Rate_Angry_Rabbit:case database.BattleEffectTrans.Perfect_Critical_Power:fx_list.push_back(this.recycledCommonFxNode("fx_offence"));break;case database.BattleEffectTrans.Enermy_General_Trans_Type_Freeze_Critical_Power_Rate_inc:break;case database.BattleEffectTrans.Passive_Duration_Critical_Power_Rate_inc:fx_list.push_back(this.recycledCommonFxNode("fx_offence"));break;case database.BattleEffectTrans.Passive_Duration_Active_Skill_Damage_Inc:fx_list.push_back(this.recycledCommonFxNode("fx_active_inc"));break;case database.BattleEffectTrans.General_Life_Not_Zero:fx_list.push_back(this.recycledCommonFxNode("Hwawoong_Maid18_fx_eternal"));break;case database.BattleEffectTrans.Timer_Tamatebako_Calc_Def_End:case database.BattleEffectTrans.Timer_Tamatebako_Calc_Not_Def_End:fx_list.push_back(this.recycledCommonFxNode("Hwanggae_Swim18_fx_hako_bomb"));break;case database.BattleEffectTrans.Damage_Increased_By_Hina:fx_list.push_back(this.recycledCommonFxNode("fx_offence"));break;case database.BattleEffectTrans.Golden_Invincibility:fx_list.push_back(this.recycledCommonFxNode("Common_fx_invincibility"));break;case database.BattleEffectTrans.Reflect_Damage_Skill:343==gnrl_group&&fx_list.push_back(this.recycledCommonFxNode("Yubi_China_fx_buff_tenpai"));break;case database.BattleEffectTrans.Darkness_Shield:fx_list.push_back(this.recycledCommonFxNode("Sonkwon_Blackened_fx_shield_of_darkness"));break;case database.BattleEffectTrans.Motion_Singing:412==gnrl_group?fx_list.push_back(this.recycledCommonFxNode("Yubi_Concert_fx_skill_sing")):429==gnrl_group&&fx_list.push_back(this.recycledCommonFxNode("Sonkwon_Concert_fx_sing"));break;case database.BattleEffectTrans.Hitted_Add_Stack_WanKo:fx_list.push_back(this.recycledCommonFxNode("Wanko_fx_yell"));break;case database.BattleEffectTrans.Use_Active_Skill_Angel_Stack_Up:fx_list.push_back(this.recycledCommonFxNode("Lili_ID_fx_angelic"));break;case database.BattleEffectTrans.Use_Active_Skill_Glitter_Beach_Stack_Up:fx_list.push_back(this.recycledCommonFxNode("fx_lens_flare"));break;case database.BattleEffectTrans.Timer_Passed_Stack_Up:fx_list.push_back(this.recycledCommonFxNode("Izayoi_fx_feather"));break;case database.BattleEffectTrans.Damage_Increaded_By_Konami:case database.BattleEffectTrans.Random_Stat_Attack_50_To_100:case database.BattleEffectTrans.Random_Stat_Critical_Percent_50_To_100:case database.BattleEffectTrans.Passive_Attk_Dec_Songyeon_Hero:fx_list.push_back(this.recycledCommonFxNode("fx_offence"))}for(var bone=this.m_sk.findBone("bar"),barPos=cc.p(bone.x,bone.y),flip_x=this.m_sk._skeleton.flipX,i=0;i<fx_list.length;i++){var fx=fx_list[i];if(null!=fx){fx.getPart().is_used_flip&&fx.setFlipX(flip_x),fx.setDurabilityEffect(dur),fx.setEffectId(dur.effect_id),fx.setEffectTransType(dur.trans_type);var hit_point=fx.getPart().hit_point;hit_point==FX_POS_BAR?0==flip_x?fx.setPosition(barPos.x,barPos.y-20):fx.setPosition(-barPos.x,barPos.y-20):hit_point==FX_POS_BASE?fx.setPosition(0,0):hit_point==FX_POS_CENTER?0==flip_x?fx.setPosition(barPos.x,.5*barPos.y):fx.setPosition(-barPos.x,.5*barPos.y):hit_point==FX_POS_HEAD_BACKWARD?0==flip_x?fx.setPosition(barPos.x+40,barPos.y-10):fx.setPosition(-barPos.x-40,barPos.y-10):hit_point==FX_POS_HEAD_FORWARD?0==flip_x?fx.setPosition(barPos.x-20,barPos.y-10):fx.setPosition(20-barPos.x,barPos.y-10):hit_point==FX_POS_TOP&&(0==flip_x?fx.setPosition(barPos.x,barPos.y+30):fx.setPosition(-barPos.x,barPos.y+30)),this.addChild(fx,1),dur.trans_type==database.BattleEffectTrans.Freeze_End||dur.trans_type==database.BattleEffectTrans.Petrification_End||dur.trans_type==database.BattleEffectTrans.Timer_Bomb_Calc_Def_End||dur.trans_type==database.BattleEffectTrans.Timer_Bomb_No_Calc_Def_End?(fx.runFXAnimation(FX_Animation.FX_END,fx.getPart().is_loop),fx.setReserveRemove(!0)):(fx.runFXAnimation(FX_Animation.FX_GRADE_1,fx.getPart().is_loop),fx.setReserveRemove(!fx.getPart().is_loop)),this.m_common_fx_used.push(fx)}}fx_list.length=0,fx_list=null},fx_findNum:function(_element){return this.m_common_fx_used.indexOf(_element)},fx_end:function(){return this.m_common_fx_used.length-1},commonFxCompleteListener:function(fx){if(fx.IsReservedRemove()){null!=this.m_transEndCallback&&(this.m_transEndCallback.transEndCallback(fx.getEffectTransType(),fx.getFxID()),fx.setEffectTransType(database.BattleEffectTrans.None)),fx.setReserveRemove(!1);var found=this.m_common_fx_used.indexOf(fx);if(-1!=found){try{fx.m_skeleton.clearTracks(0)}catch(e){cc.log("fx.clearTracks error : ",e)}null!=fx.getParent()&&(fx.removeFromParent(),fx.setVisible(!1),fx=null),this.m_common_fx_used.splice(found,1)}}},initMix:function(){for(var aniCount=this.m_sk._skeleton.data.animations.length,ani=this.m_sk._skeleton.data.animations,i=0;i<aniCount;i++){var ani_name=ani[i].name;"loop"==ani_name?this.set_Action_Loop(!0):"loop_off"==ani_name?this.set_Action_Loop_off(!0):"idle2"==ani_name?this.m_check_idle2=!0:"prepare2"==ani_name&&(this.m_check_prepare2=!0)}this.m_sk.setMix("basic","prepare",.1),this.m_sk.setMix("prepare","idle",.1),this.m_sk.setMix("idle","basic",.1),this.m_sk.setMix("idle","attack",.2),this.m_sk.setMix("idle","skill",.2),this.m_sk.setMix("attack","idle",.2),this.m_sk.setMix("skill","idle",.2),this.m_sk.setMix("idle","damage",.1),this.m_sk.setMix("idle","win",.2),this.m_sk.setMix("damage","idle",.01),this.m_sk.setMix("damage_loop","idle",.01),this.m_sk.setMix("idle","dash",.1),this.m_sk.setMix("dash","idle",.2),this.get_Is_Action_Loop()&&this.get_Is_Action_Loop_off()&&this.m_sk.setAnimation(1,"loop",!0),this.m_check_idle2&&this.m_check_prepare2&&this.m_sk.setMix("idle2","prepare2",.1)},playAction:function(type){try{this.m_sk.clearTracks(0)}catch(e){cc.log("fx.clearTracks error : ",e)}switch(504==this.m_battle_general.general.gnrl_group&&cc.log("ActionType : ",type),this.m_cur_action=type){case ActionType.Basic:this.actionBasic();break;case ActionType.Basic_Idle:this.actionBasicIdle();break;case ActionType.Attack_Idle:this.actionIdle();break;case ActionType.Loop:this.actionLoop();break;case ActionType.Loop_Off:this.actionLoopOff();break;case ActionType.Sunglass:this.actionSunglass();break;case ActionType.Sunglass_Off:this.actionSunglassOff();break;case ActionType.Attack_1:this.actionAttack_1();break;case ActionType.Attack_2:this.actionAttack_2();break;case ActionType.Attack_3:this.actionAttack_3();break;case ActionType.Skill:this.actionSkill();break;case ActionType.Skill_1:this.actionSkill_1();break;case ActionType.Skill_2:this.actionSkill_2();break;case ActionType.Skill_3:this.actionSkill_3();break;case ActionType.Skill_Enemy:this.actionSkillEnemey();break;case ActionType.Stun:this.actionStun();break;case ActionType.Sleep:this.actionSleep();break;case ActionType.Win:this.actionWin();break;case ActionType.Run:this.actionRun();break;case ActionType.DeathAction:this.actionDeathAction();break;case ActionType.Damage_Once:this.actionDamageOnce();break;case ActionType.Damage_Once_Idle2:this.actionDamageOnceIdle2();break;case ActionType.Damage_Time:this.actionDamageTime();break;case ActionType.Attack_Idle_Track:this.actionIdleTrack();break;case ActionType.Death:this.actionDeath();break;case ActionType.Back:this.actionBack();break;case ActionType.Dash:this.actionDash();break;case ActionType.Add_Idle:this.actionAddIdle();break;case ActionType.Idle2:this.actionIdle2();break;case ActionType.Idle2_end:this.actionIdle2ToIdle()}},actionLoop:function(){this.m_sk.setAnimation(2,"loop",!0)},actionLoopOff:function(){this.m_sk.setAnimation(2,"loop_off",!0)},actionSunglass:function(){this.m_sk.setAnimation(2,"sunglass",!0)},actionSunglassOff:function(){this.m_sk.setAnimation(2,"sunglass_off",!0)},actionAddIdle:function(){this.m_sk.setAnimation(0,"damage_loop",!1),this.m_sk.addAnimation(0,"damage_return",!1),this.m_sk.addAnimation(0,"idle",!0),this.m_sk.addAnimation(1,"loop",!0)},actionBasic:function(){this.m_sk.setAnimation(0,"basic",!0),this.m_sk.addAnimation(1,"loop",!0)},actionBasicIdle:function(){this.m_sk.setAnimation(0,"prepare",!1),this.m_sk.addAnimation(0,"idle",!0),this.m_sk.addAnimation(1,"loop",!0)},actionIdle:function(){this.m_sk.setAnimation(0,"idle",!0),this.m_sk.addAnimation(1,"loop",!0)},actionBack:function(){this.m_sk.setAnimation(0,"back",!1),this.m_sk.addAnimation(1,"loop",!0)},actionDash:function(){this.m_sk.setAnimation(0,"dash",!1),this.m_sk.addAnimation(1,"loop",!0)},actionAttack_1:function(){this.m_sk.setAnimation(0,"attack1",!1),this.m_sk.addAnimation(1,"loop",!0)},actionAttack_2:function(){this.m_sk.setAnimation(0,"attack2",!1),this.m_sk.addAnimation(1,"loop",!0)},actionAttack_3:function(){this.m_sk.setAnimation(0,"attack3",!1),this.m_sk.addAnimation(1,"loop",!0)},actionSkill_1:function(){this.m_sk.setAnimation(0,"skill1",!1),this.m_sk.addAnimation(1,"loop",!0)},actionSkill_2:function(){this.m_sk.setAnimation(0,"skill2",!1),this.m_sk.addAnimation(1,"loop",!0)},actionSkill_3:function(){this.m_sk.setAnimation(0,"skill3",!0),this.m_sk.addAnimation(1,"loop",!0)},actionSkill:function(){this.m_sk.setAnimation(0,"skill",!1),this.m_sk.addAnimation(1,"loop",!0)},actionSkillEnemey:function(){this.m_sk.setAnimation(0,"skill_enemy",!1),this.m_sk.addAnimation(1,"loop",!0)},actionStun:function(){this.m_sk.setAnimation(0,"stun",!0),this.m_sk.addAnimation(1,"loop",!0)},actionSleep:function(){this.m_sk.setAnimation(0,"sleep",!0),this.m_sk.addAnimation(1,"loop",!0)},actionWin:function(){this.m_sk.setAnimation(0,"win",!1),this.m_sk.addAnimation(0,"win_loop",!0),this.m_sk.addAnimation(1,"loop",!0)},actionRun:function(){this.m_sk.setAnimation(0,"run",!0),this.m_sk.addAnimation(1,"loop",!0)},actionDamageOnce:function(){this.m_sk.setAnimation(0,"damage",!1),this.m_sk.addAnimation(0,"damage_return",!1),this.m_sk.addAnimation(0,"idle",!0),this.m_sk.addAnimation(1,"loop",!0)},actionDamageOnceIdle2:function(){this.m_sk.setAnimation(0,"damage",!1),this.m_sk.addAnimation(0,"damage_return",!1),this.m_sk.addAnimation(0,"idle2",!0)},actionDamageTime:function(){this.m_sk.setAnimation(0,"damage",!1),this.m_sk.addAnimation(0,"damage_loop",!1),this.m_sk.addAnimation(0,"idle",!0),this.m_sk.addAnimation(1,"loop",!0)},actionDeathAction:function(){this.m_sk.setAnimation(0,"damage",!1),this.m_sk.addAnimation(0,"damage_loop",!1),this.m_sk.addAnimation(1,"loop",!0)},actionDeath:function(){this.m_sk.setAnimation(0,"damage",!1),this.m_sk.addAnimation(0,"damage_loop",!1),this.m_sk.addAnimation(1,"loop",!0)},actionIdleTrack:function(){this.m_sk.addAnimation(0,"idle",!1),this.m_sk.addAnimation(1,"loop",!0)},actionIdle2:function(){this.m_sk.setAnimation(0,"idle2",!0)},actionIdle2ToIdle:function(){this.m_sk.setAnimation(0,"prepare2",!1),this.m_sk.addAnimation(0,"idle",!0)},offLeader:function(){null!=this.m_leader&&this.m_leader.setVisible(!1)},onLeader:function(){null==this.m_leader?(this.m_leader=this.recycledCommonFxNode("fx_leader"),this.m_leader.setPosition(0,0),this.addChild(this.m_leader,-1),this.m_leader.runFXAnimation(FX_Animation.FX_GRADE_1,!0)):this.m_leader.setVisible(!0)},offBoss:function(){null!=this.m_boss&&this.m_boss.setVisible(!1)},onBoss:function(scale){null==this.m_boss&&(this.m_boss=this.recycledCommonFxNode("fx_boss"),this.m_boss.setPosition(0,0),this.m_boss.setScale(scale),this.addChild(this.m_boss,-1),this.m_boss.runFXAnimation(FX_Animation.FX_GRADE_1,!0)),null!=this.m_boss&&this.m_boss.setVisible(!0)},recycledCommonFxNode:function(fx_id){for(var part=!1,part_num=0,i=0;i<this.m_common_fx_parts.length;i++)if(part_num=i,this.m_common_fx_parts[i].fx_id==fx_id){part=!0;break}if(0!=part){var fx=new BattleFxNode(this.m_common_fx_parts[part_num],1);fx.setFXTimeScale(this.m_current_time_scale),fx._spineStart=null,fx._throwingEnd=null,fx._spineEnd=null,fx._spineEvent=null,fx._spineComplete=this;try{return fx}finally{fx=null}}return null},appearEffect:function(){var flip_x=this.m_sk._skeleton.flipX,fx=this.recycledCommonFxNode("fx_appear");if(null!=fx){fx.getPart().is_used_flip&&fx.setFlipX(flip_x);var p_summon=this.m_sk.findBone("p_summon");null!=p_summon?0<flip_x?fx.setPosition(-p_summon.x,p_summon.y):fx.setPosition(p_summon.x,p_summon.y):fx.setPosition(0,0),this.addChild(fx),fx.runFXAnimation(FX_Animation.FX_GRADE_1,fx.getPart().is_loop),fx.setReserveRemove(!0),this.m_common_fx_used.push(fx),fx=null}},setCommonTimeScale:function(timescale){this.m_current_time_scale=timescale;for(var i=0;i<this.m_common_fx_used.length;i++){var entry=this.m_common_fx_used[i].m_skeleton.getCurrent(0);null!=entry&&(entry.timeScale=this.m_current_time_scale)}},setCommonEffectPosition:function(fx_id,pos_x,pos_y,parent){for(var i=0;i<this.m_common_fx_used.length;i++)if(this.m_common_fx_used[i].getFxID()==fx_id){this.m_common_fx_used[i].setPosition(pos_x+parent.getPosition().x-getPosition().x,pos_y+parent.getPosition().y-getPosition().y);break}},removeAllTransCommonFxNode:function(){for(var i=0;i<this.m_common_fx_used.length;i++){try{this.m_common_fx_used[i].m_skeleton.clearTracks(0)}catch(e){cc.log("fx.clearTracks error : ",e)}this.m_common_fx_used[i].removeFromParent(),this.m_common_fx_used[i].setVisible(!1)}this.m_common_fx_used.length=0},removeTransCommonFxNode:function(dur){if(dur.trans_type==database.BattleEffectTrans.None_Trans_Only_Effect_Use_Type){if(""!=dur.durability.effect_call)for(var found2_list=[],found2_is=!1,e_list=dur.durability.effect_call.split(","),idx=0;idx<e_list.length;idx++){if(0,found2_is=!(found2_list=[]),"Oboro_fx_flag"==e_list[idx]){if(null!=this){var eff_id=e_list[idx];this.getTeamType()==BattleGeneral_TeamType.Right&&(eff_id=cmString("%s_enemy",e_list[idx]));for(var i=0;i<this.m_common_fx_used.length;i++){(fx=this.m_common_fx_used[i]).getFxID()==eff_id&&(found2_is=!0,found2_list.push(i))}}}else for(i=0;i<this.m_common_fx_used.length;i++){(fx=this.m_common_fx_used[i]).getFxID()==e_list[idx]&&(found2_is=!0,found2_list.push(i))}if(1==found2_is)for(var fIdx=0;fIdx<found2_list.length;fIdx++){var fx=this.m_common_fx_used[found2_list[fIdx]];try{fx.m_skeleton.clearTracks(0)}catch(e){cc.log("fx.clearTracks error : ",e)}dur.trans_type==database.BattleEffectTrans.Invisibility&&(this.setOpacity(255),this.SetAlpha(255)),null!=this.m_transEndCallback&&(this.m_transEndCallback.transEndCallback(fx.getEffectTransType(),fx.getFxID()),fx.setEffectTransType(database.BattleEffectTrans.None),fx.setEffectId(0)),fx.removeFromParent(),fx.setVisible(!1),fx=null}}}else{var found_list=[],found_is=!1;for(i=0;i<this.m_common_fx_used.length;i++)this.m_common_fx_used[i].getEffectTransType()==dur.trans_type&&this.m_common_fx_used[i].getEffectId()==dur.effect_id&&this.m_common_fx_used[i].getDurabilityEffect().exec_time==dur.exec_time&&this.m_common_fx_used[i].getPart().is_loop&&(found_is=!0,found_list.push(i));if(1==found_is){for(fIdx=0;fIdx<found_list.length;fIdx++){fx=this.m_common_fx_used[found_list[fIdx]];try{fx.m_skeleton.clearTracks(0)}catch(e){cc.log("fx.clearTracks error : ",e)}dur.trans_type==database.BattleEffectTrans.Invisibility&&(this.setOpacity(255),this.SetAlpha(255)),null!=this.m_transEndCallback&&(this.m_transEndCallback.transEndCallback(fx.getEffectTransType(),fx.getFxID()),fx.setEffectTransType(database.BattleEffectTrans.None),fx.setEffectId(0)),fx.removeFromParent(),fx.setVisible(!1),fx=null}if(0<found_list.length)for(fIdx=found_list.length-1;0<=fIdx;fIdx--)this.m_common_fx_used.splice(found_list[fIdx],1)}}},SetAlpha:function(Alpha_Value){this.setOpacity(Alpha_Value)},runTransShader:function(shader_type,duration,callback,callback_num){switch(shader_type){case TransShaderType.None:BattleShaderCache.getInstance().defaultShader(this.m_sk);break;case TransShaderType.Blood:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_BLOOD_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.Hit_White:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_HIT_WHITE_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.Hit_Red:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_HIT_RED_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.Hit_Green:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_HIT_GREEN_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.Hit_Blue:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_HIT_BLUE_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.Ice:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_ICE_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.Frozen:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_FROZEN_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.Poison:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_POISON_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.Stone:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_STONE_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.Hold:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_HOLD_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.Sepia:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_SEPIA_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.Banish:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_BANISH_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.Vanish:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_VANISH_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.Electronic:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_SHOCK_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.Bleeding:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_BLOOD_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.Buring:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_BURNING_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.FireElement:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_FIRE_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.WaterElement:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_WATER_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.TreeElement:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_TREE_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.LightElement:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_LIGHT_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.DarkElement:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_DARK_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.Golden:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_GOLDEN_FSH,SHADER_DEFAULT_VSH);break;case TransShaderType.InvisibleElement:BattleShaderCache.getInstance().openShader(this.m_sk,SHADER_INVISIBLE_FSH,SHADER_DEFAULT_VSH)}if(this.m_shader_type=shader_type,0<duration){this.m_trans_cb_func=callback,this.m_trans_cg_func_num=callback_num,this.stopActionByTag(989898);var delay=cc.delayTime(duration),cb=cc.callFunc(this._cbTransShaderComplete,this),seq=cc.sequence(delay,cb);seq.setTag(989898),this.runAction(seq)}},_cbTransShaderComplete:function(){if(this.runTransShader(TransShaderType.None,0,null,0),null!=this.m_trans_cb_func)switch(this.m_trans_cg_func_num){case 1:this.cbUnfocusTransShaderCallback(this);break;case 2:this.cbTransShaderCallback(this);break;default:this.runTransShader(TransShaderType.None,0,null,0)}this.m_trans_cb_func=null,this.m_trans_cg_func_num=0},absolutePosition:function(parent){for(var ret=this.getPosition(),cn=this,retX=0,retY=0;cn.getParent()!=parent&&null!=(cn=cn.getParent());)retX=ret.x+cn.getPosition().x,retY=ret.y+cn.getPosition().y,ret=cc.p(retX,retY);return ret},absolutePosition_V2:function(){for(var rect=this.getBoundingBox(),ret=rect.origin,cn=(rect.size,this);null!=cn.getParent()&&null!=(cn=cn.getParent())&&!(rect=cn.getBoundingBox()).size.equals(winSize);)ret+=rect.origin;return ret},resumeCommonEffects:function(){if(0!=this.m_common_fx_used.length&&null!=this.getScheduler())for(var i=0;i<this.m_common_fx_used.length;i++){var fx=this.m_common_fx_used[i],fx_id=this.m_common_fx_used[i].getFxID();"fx_freeze"!=fx_id&&"fx_stone"!=fx_id&&"fx_freeze_snowman"!=fx_id&&(fx.is_pause=!1,null!=fx.m_skeleton&&fx.m_skeleton.resume())}},findCommonEffectNodePlayAnim:function(fx_id,anim_num){for(var found_list=[],found_is=!1,i=0;i<this.m_common_fx_used.length;i++)this.m_common_fx_used[i].getFxID()==fx_id&&(found_is=!0,found_list.push(i));if(1==found_is)for(var fIdx=0;fIdx<found_list.length;fIdx++){this.m_common_fx_used[found_list[fIdx]].runFXAnimation(anim_num)}},pauseCommonEfffects:function(){if(0!=this.m_common_fx_used.length&&null!=this.getScheduler())for(var i=0;i<this.m_common_fx_used.length;i++){var fx=this.m_common_fx_used[i],fx_id=fx.getFxID();"fx_freeze"!=fx_id&&"fx_stone"!=fx_id&&"fx_freeze_snowman"!=fx_id&&(fx.is_pause=!0,null!=fx.m_skeleton&&fx.m_skeleton.pause())}},pauseEffectTest:function(){if(0!=this.m_common_fx_used.length)for(var i=0;i<this.m_common_fx_used.length;i++)this.m_common_fx_used[i].pause();if(0!=this.m_fx_used.length)for(i=0;i<this.m_fx_used.length;i++)this.m_fx_used[i].pause()},resumeEffectTest:function(){if(0!=this.m_common_fx_used.length)for(var i=0;i<this.m_common_fx_used.length;i++)this.m_common_fx_used[i].resume();if(0!=this.m_fx_used.length)for(i=0;i<this.m_fx_used.length;i++)this.m_fx_used[i].resume()},addCommonEffectNode:function(fx_id){var fx=this.recycledCommonFxNode(fx_id),bone=this.m_sk.findBone("bar"),barPos=cc.p(bone.x,bone.y),flip_x=this.m_sk._skeleton.flipX;if(null!=fx){fx.getPart().is_used_flip&&fx.setFlipX(flip_x);var hit_point=fx.getPart().hit_point;1==hit_point?0==flip_x?fx.setPosition(barPos.x,barPos.y-20):fx.setPosition(-barPos.x,barPos.y-20):2==hit_point?fx.setPosition(0,0):3==hit_point?0==flip_x?fx.setPosition(barPos.x,.5*barPos.y):fx.setPosition(-barPos.x,.5*barPos.y):4==hit_point?0==flip_x?fx.setPosition(barPos.x+40,barPos.y-10):fx.setPosition(-barPos.x-40,barPos.y-10):5==hit_point?0==flip_x?fx.setPosition(barPos.x-20,barPos.y-10):fx.setPosition(20-barPos.x,barPos.y-10):6==hit_point&&(0==flip_x?fx.setPosition(barPos.x,barPos.y+30):fx.setPosition(-barPos.x,barPos.y+30)),this.addChild(fx,1),fx.runFXAnimation(FX_Animation.FX_GRADE_1,fx.getPart().is_loop),fx.getPart().is_loop||fx.setReserveRemove(!0),this.m_common_fx_used.push(fx)}},TransDurationAddPoint:function(trans_type,delta_duration,one){switch(trans_type){case database.BattleEffectTrans.Burning_Trans_Duration_Time_Inc_Value:if(this.findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)||this.findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate)){for(var found_is=!1,found_push=[],idx=0;idx<this.m_durability_effects.length;idx++){var d=this.m_durability_effects[idx];idx,d.trans_type!=database.BattleEffectTrans.After_Recv_Damage_Inc_Rate&&d.trans_type!=database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate||(found_is=!0,found_push.push(idx))}if(1==found_is)for(var idx2=0;idx2<found_push.length;idx2++)this.m_durability_effects[found_push[idx2]].delta_duration-=delta_duration}break;case database.BattleEffectTrans.Elec_Shork_Trans_Duration_Time_Inc_Value:if(this.findTransType(database.BattleEffectTrans.Damage_Reduce)||this.findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce)){for(found_is=!1,found_push=[],idx=0;idx<this.m_durability_effects.length;idx++)idx,this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Damage_Reduce&&this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Not_Resist_Damage_Reduce||(found_is=!0,found_push.push(idx));if(1==found_is)for(idx2=0;idx2<found_push.length;idx2++)this.m_durability_effects[found_push[idx2]].delta_duration-=delta_duration}break;case database.BattleEffectTrans.Stun_Trans_Duration_Time_Inc_Value:if(this.findTransType(database.BattleEffectTrans.Stun)||this.findTransType(database.BattleEffectTrans.Not_Resist_Stun)){for(found_is=!1,found_push=[],idx=0;idx<this.m_durability_effects.length;idx++)idx,this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Stun&&this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Not_Resist_Stun||(found_is=!0,found_push.push(idx));if(1==found_is)for(idx2=0;idx2<found_push.length;idx2++)this.m_durability_effects[found_push[idx2]].delta_duration-=delta_duration}break;case database.BattleEffectTrans.Poison_Trans_Duration_Time_Inc_Value:if(this.findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate)||this.findTransType(database.BattleEffectTrans.Not_Resist_Poison)){for(found_is=!1,found_push=[],idx=0;idx<this.m_durability_effects.length;idx++)idx,this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.New_Poison_Dmg_Rate&&this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Not_Resist_Poison||(found_is=!0,found_push.push(idx));if(1==found_is)for(idx2=0;idx2<found_push.length;idx2++)this.m_durability_effects[found_push[idx2]].delta_duration-=delta_duration}break;case database.BattleEffectTrans.Silence_Trans_Duration_Time_Inc_Value:if(this.findTransType(database.BattleEffectTrans.Silence)||this.findTransType(database.BattleEffectTrans.Not_Resist_Silence)){for(found_is=!1,found_push=[],idx=0;idx<this.m_durability_effects.length;idx++)idx,this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Silence&&this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Not_Resist_Silence||(found_is=!0,found_push.push(idx));if(1==found_is)for(idx2=0;idx2<found_push.length;idx2++)this.m_durability_effects[found_push[idx2]].delta_duration-=delta_duration}break;case database.BattleEffectTrans.Blind_Darkness_Trans_Duration_Time_Inc_Value:if(this.findTransType(database.BattleEffectTrans.Blind_Darkness)||this.findTransType(database.BattleEffectTrans.Not_Resist_Blind)){for(found_is=!1,found_push=[],idx=0;idx<this.m_durability_effects.length;idx++)idx,this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Blind_Darkness&&this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Not_Resist_Blind||(found_is=!0,found_push.push(idx));if(1==found_is)for(idx2=0;idx2<found_push.length;idx2++)this.m_durability_effects[found_push[idx2]].delta_duration-=delta_duration}break;case database.BattleEffectTrans.Wounds_Trans_Duration_Time_Inc_Value:if(this.findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal)||this.findTransType(database.BattleEffectTrans.Not_Resist_Wound)){for(found_is=!1,found_push=[],idx=0;idx<this.m_durability_effects.length;idx++)idx,this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Wound_Obstruct_Heal&&this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Not_Resist_Wound||(found_is=!0,found_push.push(idx));if(1==found_is)for(idx2=0;idx2<found_push.length;idx2++)this.m_durability_effects[found_push[idx2]].delta_duration-=delta_duration}break;case database.BattleEffectTrans.Element_Type_Fire_Trans_Duration_Time_Inc_Value:if(this.findTransType(database.BattleEffectTrans.Element_Type_Fire_Trans)){for(found_is=!1,found_push=[],idx=0;idx<this.m_durability_effects.length;idx++)idx,this.m_durability_effects[idx].trans_type==database.BattleEffectTrans.Element_Type_Fire_Trans&&(found_is=!0,found_push.push(idx));if(1==found_is)for(idx2=0;idx2<found_push.length;idx2++)this.m_durability_effects[found_push[idx2]].duration+=delta_duration}break;case database.BattleEffectTrans.Element_Type_Water_Trans_Duration_Time_Inc_Value:if(this.findTransType(database.BattleEffectTrans.Element_Type_Water_Trans)){for(found_is=!1,found_push=[],idx=0;idx<this.m_durability_effects.length;idx++)idx,this.m_durability_effects[idx].trans_type==database.BattleEffectTrans.Element_Type_Water_Trans&&(found_is=!0,found_push.push(idx));if(1==found_is)for(idx2=0;idx2<found_push.length;idx2++)this.m_durability_effects[found_push[idx2]].duration+=delta_duration}break;case database.BattleEffectTrans.Element_Type_Wind_Trans_Duration_Time_Inc_Value:if(this.findTransType(database.BattleEffectTrans.Element_Type_Wind_Trans)){for(found_is=!1,found_push=[],idx=0;idx<this.m_durability_effects.length;idx++)idx,this.m_durability_effects[idx].trans_type==database.BattleEffectTrans.Element_Type_Wind_Trans&&(found_is=!0,found_push.push(idx));if(1==found_is)for(idx2=0;idx2<found_push.length;idx2++)this.m_durability_effects[found_push[idx2]].duration+=delta_duration}break;case database.BattleEffectTrans.Element_Type_Dark_Trans_Duration_Time_Inc_Value:if(this.findTransType(database.BattleEffectTrans.Element_Type_Dark_Trans)){for(found_is=!1,found_push=[],idx=0;idx<this.m_durability_effects.length;idx++)idx,this.m_durability_effects[idx].trans_type==database.BattleEffectTrans.Element_Type_Dark_Trans&&(found_is=!0,found_push.push(idx));if(1==found_is)for(idx2=0;idx2<found_push.length;idx2++)this.m_durability_effects[found_push[idx2]].duration+=delta_duration}break;case database.BattleEffectTrans.Element_Type_Light_Trans_Duration_Time_Inc_Value:if(this.findTransType(database.BattleEffectTrans.Element_Type_Light_Trans)){for(found_is=!1,found_push=[],idx=0;idx<this.m_durability_effects.length;idx++)idx,this.m_durability_effects[idx].trans_type==database.BattleEffectTrans.Element_Type_Light_Trans&&(found_is=!0,found_push.push(idx));if(1==found_is)for(idx2=0;idx2<found_push.length;idx2++)this.m_durability_effects[found_push[idx2]].duration+=delta_duration}break;case database.BattleEffectTrans.Element_Type_ALL_Trans_Duration_Time_Inc_Value:if(this.findTransType(database.BattleEffectTrans.Element_Type_Fire_Trans)||this.findTransType(database.BattleEffectTrans.Element_Type_Water_Trans)||this.findTransType(database.BattleEffectTrans.Element_Type_Wind_Trans)||this.findTransType(database.BattleEffectTrans.Element_Type_Light_Trans)||this.findTransType(database.BattleEffectTrans.Element_Type_Dark_Trans)){for(found_is=!1,found_push=[],idx=0;idx<this.m_durability_effects.length;idx++)idx,this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Element_Type_Fire_Trans&&this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Element_Type_Water_Trans&&this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Element_Type_Wind_Trans&&this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Element_Type_Light_Trans&&this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Element_Type_Dark_Trans||(found_is=!0,found_push.push(idx));if(1==found_is)for(idx2=0;idx2<found_push.length;idx2++)this.m_durability_effects[found_push[idx2]].duration+=delta_duration}break;case database.BattleEffectTrans.Buf_Good_Trans:for(idx=0;idx<this.m_durability_effects.length;idx++)null!=one&&null!=one&&one.gnrl_id==this.m_durability_effects[idx].gnrl_id&&this.m_durability_effects[idx].is_friend_effect==this.m_durability_effects[idx].is_friend_effect||this.m_durability_effects[idx].up_down==database.BattleUpDown.Up&&(this.m_durability_effects[idx].duration+=delta_duration);break;case database.BattleEffectTrans.DeBuf_Bad_Trans:for(idx=0;idx<this.m_durability_effects.length;idx++)this.m_durability_effects[idx].up_down==database.BattleUpDown.Down&&(this.m_durability_effects[idx].duration+=delta_duration)}},get_Is_Action_Loop:function(){return this.m_Action_Loop},set_Action_Loop:function(is_loaded){this.m_Action_Loop=is_loaded},get_Is_Action_Loop_off:function(){return this.m_Action_Loop_Off},set_Action_Loop_off:function(is_loaded){this.m_Action_Loop_Off=is_loaded},IsCheckTeamType:function(Check_Type,Count){var team_member=null;switch(Check_Type){case Search_type.ENERMY_GENERAL_SAME_ELEMENT_COUNT:team_member=this.m_my_team.getTargetTeam().getTeamMembers();for(var element_type=1;element_type<=6;element_type++){for(var same_ele_cnt=0,idx=0;idx<team_member.length;idx++)team_member[idx].getElementType()==element_type&&++same_ele_cnt;if(Count<=same_ele_cnt)return!0}return!1;case Search_type.OUR_GENERAL_SAME_ELEMENT_COUNT:team_member=this.m_my_team.getTeamMembers();for(element_type=1;element_type<=6;element_type++){for(same_ele_cnt=0,idx=0;idx<team_member.length;idx++)team_member[idx].getElementType()==element_type&&++same_ele_cnt;if(Count<=same_ele_cnt)return!0}return!1}return!1},getDurationEffect_CriticalPower:function(){for(var point=0,enermy_team=this.m_my_team.getTargetTeam().getTeamMembers(),idx=0;idx<this.m_durability_effects.length;idx++){var dur=$.extend({},this.m_durability_effects[idx]);if(dur.trans_type==database.BattleEffectTrans.Enermy_General_Trans_Type_Stun_Critical_Power_Rate_inc){for(var cnt=0,jdx=0;jdx<enermy_team.length;jdx++)enermy_team[jdx].IsDurabilityEffect(database.BattleEffectTrans.Stun)&&++cnt,enermy_team[jdx].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Stun)&&++cnt;0<cnt&&(point+=cnt*dur.value)}else if(dur.trans_type==database.BattleEffectTrans.Enermy_General_Trans_Type_Freeze_Critical_Power_Rate_inc){for(cnt=0,jdx=0;jdx<enermy_team.length;jdx++)enermy_team[jdx].IsDurabilityEffect(database.BattleEffectTrans.Freeze)&&++cnt,enermy_team[jdx].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Freeze)&&++cnt;0<cnt&&(point+=cnt*dur.value)}else if(dur.trans_type==database.BattleEffectTrans.Enermy_General_Trans_Type_Poison_Critical_Power_Rate_inc){for(cnt=0,jdx=0;jdx<enermy_team.length;jdx++)enermy_team[jdx].IsDurabilityEffect(database.BattleEffectTrans.Poison)&&++cnt,enermy_team[jdx].IsDurabilityEffect(database.BattleEffectTrans.New_Poison_Dmg_Rate)&&++cnt,enermy_team[jdx].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Poison)&&++cnt;0<cnt&&(point+=cnt*dur.value)}else if(dur.trans_type==database.BattleEffectTrans.Enermy_General_Trans_Type_Silence_Critical_Power_Rate_inc){for(cnt=0,jdx=0;jdx<enermy_team.length;jdx++)enermy_team[jdx].IsDurabilityEffect(database.BattleEffectTrans.Silence)&&++cnt,enermy_team[jdx].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Silence)&&++cnt;0<cnt&&(point+=cnt*dur.value)}else if(dur.trans_type==database.BattleEffectTrans.Enermy_General_Trans_Type_Burning_Critical_Power_Rate_inc){for(cnt=0,jdx=0;jdx<enermy_team.length;jdx++)enermy_team[jdx].IsDurabilityEffect(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate)&&++cnt,enermy_team[jdx].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate)&&++cnt;0<cnt&&(point+=cnt*dur.value)}else if(dur.trans_type==database.BattleEffectTrans.Enermy_General_Trans_Type_Elec_Critical_Power_Rate_inc){for(cnt=0,jdx=0;jdx<enermy_team.length;jdx++)enermy_team[jdx].IsDurabilityEffect(database.BattleEffectTrans.Damage_Reduce)&&++cnt,enermy_team[jdx].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Damage_Reduce)&&++cnt;0<cnt&&(point+=cnt*dur.value)}else if(dur.trans_type==database.BattleEffectTrans.Enermy_General_Trans_Type_Wounds_Critical_Power_Rate_inc){for(cnt=0,jdx=0;jdx<enermy_team.length;jdx++)enermy_team[jdx].IsDurabilityEffect(database.BattleEffectTrans.Bleeding_Woounds)&&++cnt,enermy_team[jdx].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Wound)&&++cnt;0<cnt&&(point+=cnt*dur.value)}else if(dur.trans_type==database.BattleEffectTrans.Enermy_General_Trans_Type_Blind_Critical_Power_Rate_inc){for(cnt=0,jdx=0;jdx<enermy_team.length;jdx++)enermy_team[jdx].IsDurabilityEffect(database.BattleEffectTrans.Blind_Darkness)&&++cnt,enermy_team[jdx].IsDurabilityEffect(database.BattleEffectTrans.Not_Resist_Blind)&&++cnt;0<cnt&&(point+=cnt*dur.value)}}return point},onetimeBufDebufPoint_Call_30_Sec:function(stat_type,invoke_type){return 0},addDurabilityEffectCheckFromTime:function(invoke,trans_type){if(this.IsAlive()){var dur_list=[];this.findTransPassiveSkillDurationEffectFind(invoke,dur_list);for(var check_stack=0,idx=0;idx<this.m_durability_effects.length;idx++){(dur=$.extend({},this.m_durability_effects[idx])).durability.stat_trans==trans_type&&++check_stack}for(idx=0;idx<dur_list.length;idx++){var dur;(dur=$.extend({},dur_list[idx])).durability.stat_trans==trans_type&&check_stack<dur.durability.dura_end_effect&&0!=dur.durability.dura_end_effect&&this.addDurabilityEffect(dur,this)}}},addDurabilityEffectCheckFromTime_Target:function(invoke){if(this.IsAlive())for(var mt=MasterManager.getInstance(),idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++)if(this.m_battle_general.trans_passive_skill[idx].trans_passive.invoke_type2==invoke){var action=mt.get_ActionImplementation(this.m_battle_general.trans_passive_skill[idx].trans_passive.action_id);if(this.m_Tick_skill_targets=[],1==action.enemy_me_type&&1==action.me_other_type)continue;1==action.enemy_me_type?this.m_Tick_skill_targets=this.m_my_team.findOurTarget(this,action.target_count,action.priority_position):null!=this._findEnemyTarget&&(this.m_Tick_skill_targets=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position));for(var jdx=0;jdx<this.m_battle_general.trans_passive_skill[idx].durability_effects.length;jdx++)if(this.m_battle_general.trans_passive_skill[idx].action.our_enemy==database.BattleSelfOther.Self){for(var target_cnt=0,tdx=0;tdx<this.m_Tick_skill_targets.length;tdx++)if(!(target_cnt>=action.target_count)){if(Math.floor(100*Math.random())+1<=this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx].percent){if(this.findTransType(database.BattleEffectTrans.Stun)||this.findTransType(database.BattleEffectTrans.Not_Resist_Stun)||this.findTransType(database.BattleEffectTrans.Freeze)||this.findTransType(database.BattleEffectTrans.Not_Resist_Freeze)||this.findTransType(database.BattleEffectTrans.Silence)||this.findTransType(database.BattleEffectTrans.Not_Resist_Silence))continue;0<this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx].end_effects.size()&&this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx].trans_type==database.BattleEffectTrans.Freeze&&(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx].end_effects.at(0).damage=this.getAttackPoint()),this.m_Tick_skill_targets[tdx].addDurabilityEffect(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx],this)}++target_cnt}}else if(this.m_battle_general.trans_passive_skill[idx].action.our_enemy==database.BattleSelfOther.Other)for(target_cnt=0,tdx=0;tdx<this.m_Tick_skill_targets.length;tdx++){if(!(target_cnt>=action.target_count))Math.floor(100*Math.random())+1<=this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx].percent&&(0<this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx].end_effects.size()&&this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx].trans_type==database.BattleEffectTrans.Freeze&&(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx].end_effects.at(0).damage=this.getAttackPoint()),this.m_Tick_skill_targets[tdx].addDurabilityEffect(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx],this)),++target_cnt}}},TransPassiveOneTimeEffectBufPoint:function(stat_type,invoke_type){var point=0,list=[];if(this.findTransPassiveSkillOneTimeEffectsFind(invoke_type,list),!list.empty())for(var idx=0;idx<list.length;idx++){var onetime_effect=$.extend({},list[idx]);switch(stat_type){case database.BattleChainStatType.ChainStatType_Cri_Power_Value:if(onetime_effect.stat_trans==database.BattleEffectTrans.Life_Then_Cri_Power_Rate_Inc){var dec_life=(100-this.m_life_point/this.getMaxHealthPoint()*100)/onetime_effect.value;dec_life<0&&(dec_life=0);var inc_value=dec_life*onetime_effect.sub_value;inc_value>onetime_effect.onetime_effect.limit_value&&(inc_value=onetime_effect.onetime_effect.limit_value),point+=inc_value}else if(onetime_effect.stat_trans==database.BattleEffectTrans.Our_Team_Dead_Count_Critical_Power_Inc){for(var teammng=this.getMyTeam(),deadcnt=0,member_idx=0;member_idx<teammng.length;member_idx++)teammng[member_idx].IsAlive()||++deadcnt;point+=deadcnt*onetime_effect.value}else if(onetime_effect.stat_trans==database.BattleEffectTrans.Critical_Power_Rate_inc){if(invoke_type==database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate)this.m_life_point/this.getMaxHealthPoint()<=.5&&(point+=onetime_effect.value);else if(invoke_type==database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate){this.m_life_point/this.getMaxHealthPoint()<=.75&&(point+=onetime_effect.value)}else point+=onetime_effect.value}break;case database.BattleChainStatType.ChainStatType_Critical_Value:if(onetime_effect.stat_trans==database.BattleEffectTrans.Our_Team_Dead_Count_Critical_Percent_Inc){for(teammng=this.getMyTeam(),deadcnt=0,member_idx=0;member_idx<teammng.length;member_idx++)teammng[member_idx].IsAlive()||++deadcnt;point+=deadcnt*onetime_effect.value}else if(onetime_effect.stat_trans==database.BattleEffectTrans.Critical_Percent_Rate_Inc){if(invoke_type==database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate)this.m_life_point/this.getMaxHealthPoint()<=.5&&(point+=onetime_effect.value);else if(invoke_type==database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate){this.m_life_point/this.getMaxHealthPoint()<=.75&&(point+=onetime_effect.value)}else point+=onetime_effect.value}else if(onetime_effect.stat_trans==database.BattleEffectTrans.Enemy_General_Check_Freeze_One_Critical_Percent_Rate_Inc){if(invoke_type==database.BattleInvokeType.BattleInvokeType_Always)for(var target_team=this.m_my_team.getTargetTeam().getTeamMembers(),Is_Activation=!1,target_team_idx=0;target_team_idx<target_team.length;target_team_idx++)for(var dur_eff_jdx=0;dur_eff_jdx<target_team[target_team_idx].m_durability_effects.length;dur_eff_jdx++)if(target_team[target_team_idx].m_durability_effects[dur_eff_jdx].trans_type==database.BattleEffectTrans.Freeze||target_team[target_team_idx].m_durability_effects[dur_eff_jdx].trans_type==database.BattleEffectTrans.Not_Resist_Freeze){Is_Activation||(point+=onetime_effect.value,Is_Activation=!0);break}}else if(onetime_effect.stat_trans==database.BattleEffectTrans.Random_In_Elect_Silence_Freeze_Blind_Cri_Rate_Inc){target_team=this.m_my_team.getTargetTeam().getTeamMembers();var is_friend=!1;for(target_team_idx=0;target_team_idx<target_team.length;target_team_idx++)if(target_team[target_team_idx].findTransType(database.BattleEffectTrans.Damage_Reduce,is_friend)||target_team[target_team_idx].findTransType(database.BattleEffectTrans.Not_Resist_Damage_Reduce,is_friend)||target_team[target_team_idx].findTransType(database.BattleEffectTrans.Silence,is_friend)||target_team[target_team_idx].findTransType(database.BattleEffectTrans.Not_Resist_Silence,is_friend)||target_team[target_team_idx].findTransType(database.BattleEffectTrans.Freeze,is_friend)||target_team[target_team_idx].findTransType(database.BattleEffectTrans.Not_Resist_Freeze,is_friend)||target_team[target_team_idx].findTransType(database.BattleEffectTrans.Blind_Darkness,is_friend)||target_team[target_team_idx].findTransType(database.BattleEffectTrans.Not_Resist_Blind,is_friend)){point+=onetime_effect.value;break}}else if(onetime_effect.stat_trans==database.BattleEffectTrans.Trans_Defence_Inc_Critical_Rate_Inc){var is_activate=!1;for(dur_eff_jdx=0;dur_eff_jdx<this.m_durability_effects.length;dur_eff_jdx++)this.m_durability_effects[dur_eff_jdx].trans_type!=database.BattleEffectTrans.Defence_Increased&&this.m_durability_effects[dur_eff_jdx].trans_type!=database.BattleEffectTrans.Defence_Point_Rate_Inc&&this.m_durability_effects[dur_eff_jdx].trans_type!=database.BattleEffectTrans.Random_Stat_Defence_50_To_100&&this.m_durability_effects[dur_eff_jdx].trans_type!=database.BattleEffectTrans.Caster_Lv_Def_Inc||(is_activate=!0);is_activate&&(point+=onetime_effect.value)}break;case database.BattleChainStatType.ChainStatType_Guard_Invoke_Rate:if(onetime_effect.stat_trans==database.BattleEffectTrans.Our_Team_Dead_Count_Gurad_Rate_Inc){for(teammng=this.getMyTeam(),deadcnt=0,member_idx=0;member_idx<teammng.length;member_idx++)teammng[member_idx].IsAlive()||++deadcnt;point+=deadcnt*onetime_effect.value}onetime_effect.stat_trans==database.BattleEffectTrans.Guard_Invoke_Rate_Dec&&(point+=onetime_effect.value);break;case database.BattleChainStatType.CainStatType_Skill_Attk_Damage_Inc_Rate:if(onetime_effect.stat_trans==database.BattleEffectTrans.Our_Team_Dead_Count_Active_Skill_Att_Inc){for(teammng=this.getMyTeam(),deadcnt=0,member_idx=0;member_idx<teammng.length;member_idx++)teammng[member_idx].IsAlive()||++deadcnt;point+=deadcnt*onetime_effect.value}break;case database.BattleChainStatType.ChainStatType_Attack_Rate:if(onetime_effect.stat_trans==database.BattleEffectTrans.Random_In_Burn_Wounds_Stun_Poison_Attk_Inc)for(target_team=this.m_my_team.getTargetTeam().getTeamMembers(),is_friend=!1,target_team_idx=0;target_team_idx<target_team.length;target_team_idx++)if(target_team[target_team_idx].findTransType(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate,is_friend)||target_team[target_team_idx].findTransType(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate,is_friend)||target_team[target_team_idx].findTransType(database.BattleEffectTrans.Wound_Obstruct_Heal,is_friend)||target_team[target_team_idx].findTransType(database.BattleEffectTrans.Not_Resist_Wound,is_friend)||target_team[target_team_idx].findTransType(database.BattleEffectTrans.Stun,is_friend)||target_team[target_team_idx].findTransType(database.BattleEffectTrans.Not_Resist_Stun,is_friend)||target_team[target_team_idx].findTransType(database.BattleEffectTrans.New_Poison_Dmg_Rate,is_friend)||target_team[target_team_idx].findTransType(database.BattleEffectTrans.Not_Resist_Poison,is_friend)){point+=onetime_effect.value;break}}onetime_effect=null}return point},addDurationByTick:function(dt){var teammng=this.getMyTeam();1==this.m_Is_Move_Skill_DeltaTime&&(this.m_team_type==BattleGeneral_TeamType.Left?teammng.IsPlaySkill()||(this.m_Skill_DeltaTime+=dt,this.m_Skill_DeltaTime_Not_Init+=dt):this.m_team_type==BattleGeneral_TeamType.Right&&(this.m_my_team.getTargetTeam().IsPlaySkill()||(this.m_Skill_DeltaTime+=dt,this.m_Skill_DeltaTime_Not_Init+=dt)),0==this.m_Is_durationBuff_Sec_30&&parseInt(this.m_Skill_DeltaTime)%30-1==0&&(this.m_Is_durationBuff_Sec_30=!0),parseInt(this.m_Skill_DeltaTime)%30==0&&parseInt(this.m_Skill_DeltaTime)-parseInt(this.m_Skill_DeltaTime-dt)==1&&0!=parseInt(this.m_Skill_DeltaTime)&&this.m_Is_durationBuff_Sec_30&&(this.m_Is_durationBuff_Sec_30=!1,this.addDurabilityEffectCheckFromTime(database.BattleInvokeType.BattleInvokeType_Call_30_Sec,database.BattleEffectTrans.Passive_Duration_Critical_Power_Rate_inc)),0==this.m_Is_durationBuff_Sec_15&&parseInt(this.m_Skill_DeltaTime)%15-1==0&&(this.m_Is_durationBuff_Sec_15=!0),parseInt(this.m_Skill_DeltaTime)%15==0&&parseInt(this.m_Skill_DeltaTime)-parseInt(this.m_Skill_DeltaTime-dt)==1&&0!=parseInt(this.m_Skill_DeltaTime)&&this.m_Is_durationBuff_Sec_15&&(this.m_Is_durationBuff_Sec_15=!1,this.addDurabilityEffectCheckFromTime_Target(database.BattleInvokeType.BattleInvokeType_Call_15_Sec),this.addDurabilityEffectCheckFromTime(database.BattleInvokeType.BattleInvokeType_Call_15_Sec,database.BattleEffectTrans.ActiveSkill_Damage_Inc),this.addDurabilityEffectCheckFromTime(database.BattleInvokeType.BattleInvokeType_Call_15_Sec,database.BattleEffectTrans.Critical_Power_Rate_inc)))},addOntimeffectByTick:function(dt){this.getMyTeam();if(1==this.m_Is_Move_Skill_DeltaTime){if(0==this.m_Is_OneTimeBuff_Sec_10&&parseInt(this.m_Skill_DeltaTime_Not_Init)%10-1==0&&(this.m_Is_OneTimeBuff_Sec_10=!0),parseInt(this.m_Skill_DeltaTime_Not_Init)%10==0&&parseInt(this.m_Skill_DeltaTime_Not_Init)-parseInt(this.m_Skill_DeltaTime_Not_Init-dt)==1&&0!=parseInt(this.m_Skill_DeltaTime_Not_Init)&&this.m_Is_OneTimeBuff_Sec_10){this.m_Is_OneTimeBuff_Sec_10=!1;var gnrl=this.getGeneral(),one_list=[];if(this.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_Call_10_Sec,gnrl,one_list),this.m_battle_general.is_zoom)for(var team=this.m_my_team.getTeamMembers(),mdx=0;mdx<team.length;mdx++)if(team[mdx].IsAlive())for(var idx=0;idx<one_list.length;idx++){var o=$.extend({},one_list[idx]);team[mdx].addOnetimeEffect(o),o=null}}if(0==this.m_Is_OneTimeBuff_Sec_15&&parseInt(this.m_Skill_DeltaTime_Not_Init)%15-1==0&&(this.m_Is_OneTimeBuff_Sec_15=!0),parseInt(this.m_Skill_DeltaTime_Not_Init)%15==0&&parseInt(this.m_Skill_DeltaTime_Not_Init)-parseInt(this.m_Skill_DeltaTime_Not_Init-dt)==1&&0!=parseInt(this.m_Skill_DeltaTime_Not_Init)&&this.m_Is_OneTimeBuff_Sec_15){this.m_Is_OneTimeBuff_Sec_15=!1;gnrl=this.getGeneral(),one_list=[];if(this.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_Call_15_Sec,gnrl,one_list),this.m_battle_general.is_zoom)for(team=this.m_my_team.getTeamMembers(),mdx=0;mdx<team.length;mdx++)if(team[mdx].IsAlive())for(idx=0;idx<one_list.length;idx++){o=$.extend({},one_list[idx]);team[mdx].addOnetimeEffect(o),o=null}}}},init_OneTime_Effect_Call_Wave_Begin:function(){this.m_Is_Use_Wave_Begin_Onetime_Effect=!1},add_OneTime_Effect_Call_Wave_Begin:function(){if(!this.m_Is_Use_Wave_Begin_Onetime_Effect)if(this.IsAlive()){for(var gnrl_list=[],idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++)if(this.m_battle_general.trans_passive_skill[idx].trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Battle_Begin)for(var jdx=0;jdx<this.m_battle_general.trans_passive_skill[idx].onetime_effects.length;jdx++){if(parseInt(1e4*Math.random())<this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].rate)if(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].our_enemy==database.BattleSelfOther.Self)if(0==this.m_battle_general.trans_passive_skill[idx].trans_passive.action_id)this.addOnetimeEffect(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx]);else{gnrl_list=[],gnrl_list=this.m_my_team.findOurTarget(this,this.m_battle_general.trans_passive_skill[idx].action.target_count,this.m_battle_general.trans_passive_skill[idx].action.priority_position);for(var tdx=0;tdx<gnrl_list.length;tdx++)gnrl_list[tdx].addOnetimeEffect(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx])}else if(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].our_enemy==database.BattleSelfOther.Other)if(0==this.m_battle_general.trans_passive_skill[idx].trans_passive.action_id){var temp_my_team=this.m_my_team.getTargetTeam().getTeamMembers();for(tdx=0;tdx<temp_my_team.length;tdx++)temp_my_team[tdx].addOnetimeEffect(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx])}else{gnrl_list=[],gnrl_list=this.m_my_team.findEnemyTarget(this,this.m_battle_general.trans_passive_skill[idx].action.target_count,this.m_battle_general.trans_passive_skill[idx].action.priority_position);for(tdx=0;tdx<gnrl_list.length;tdx++)gnrl_list[tdx].addOnetimeEffect(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx])}}this.findTransPassiveSkillDurationEffectFind(database.BattleInvokeType.BattleInvokeType_Battle_Begin,[]);for(var rand=parseInt(100*Math.random()+1),target_gnrls_list=[],passive_tar_idx=0;passive_tar_idx<this.m_battle_general.trans_passive_skill.length;passive_tar_idx++)if(this.m_battle_general.trans_passive_skill[passive_tar_idx].trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Battle_Begin){rand=parseInt(100*Math.random()+1);for(var dur_adx=0;dur_adx<this.m_battle_general.trans_passive_skill[passive_tar_idx].durability_effects.length;dur_adx++){var dur=$.extend({},this.m_battle_general.trans_passive_skill[passive_tar_idx].durability_effects[dur_adx]);if(rand<dur.percent){var action=MasterManager.getInstance().get_ActionImplementation(this.m_battle_general.trans_passive_skill[passive_tar_idx].trans_passive.action_id);if(dur.trans_type==database.BattleEffectTrans.HP_Shield_Caster_Max_HP){var max_hp=this.getMaxHealthPoint();dur.life_shield=max_hp*dur.value/1e4}else if(dur.trans_type==database.BattleEffectTrans.Darkness_Shield){max_hp=this.getMaxHealthPoint();dur.life_shield=max_hp*dur.value/1e4}if(dur.our_enemy==database.BattleSelfOther.Self){action.me_other_type==database.BattleSelfOther.Self||0==this.m_battle_general.trans_passive_skill[passive_tar_idx].trans_passive.action_id?this.addDurabilityEffect(dur,this):action.me_other_type==database.BattleSelfOther.Other&&(target_gnrls_list=this.m_my_team.findOurTarget(this,action.target_count,action.priority_position));for(var target_gnrl_idx=0;target_gnrl_idx<target_gnrls_list.length;target_gnrl_idx++)target_gnrls_list[target_gnrl_idx].addDurabilityEffect(dur,this)}else if(dur.our_enemy==database.BattleSelfOther.Other){target_gnrls_list=[],null!=this._findEnemyTarget&&(target_gnrls_list=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position));for(target_gnrl_idx=0;target_gnrl_idx<target_gnrls_list.length;target_gnrl_idx++)target_gnrls_list[target_gnrl_idx].addDurabilityEffect(dur,this)}}}}var reader_one_list=[];this.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_Battle_Begin,this.getGeneral(),reader_one_list);for(var teammember=this.m_my_team.getTeamMembers(),reader=null,idx2=0;idx2<teammember.length;idx2++)teammember[idx2].getGeneral().is_zoom&&(reader=teammember[idx2]);rand=parseInt(1e4*Math.random());for(idx=0;idx<reader_one_list.length;idx++){var one=$.extend({},reader_one_list[idx]);if(one.our_enemy==database.BattleSelfOther.Self)null!=reader&&(one.input_ability_type==database.BattleInputAbility.Caster_Max_Life?one.damage=reader.getMaxHealthPoint():one.input_ability_type==database.BattleInputAbility.Caster_Life&&(one.damage=reader.m_life_point)),this.addOnetimeEffect(one);else if(one.our_enemy==database.BattleSelfOther.Other&&one.stat_trans==database.BattleEffectTrans.Boss_Damage_Game_Start)for(var target_team=this.m_my_team.getTargetTeam().getTeamMembers(),target_idx=0;target_idx<target_team.length;target_idx++)target_team[target_idx].getGeneral().is_zoom&&target_team[target_idx].IsAlive()&&this.m_battle_general.is_zoom&&target_team[target_idx].addOnetimeEffect(one);one=null}this.m_Is_Use_Wave_Begin_Onetime_Effect=!0}else this.m_Is_Use_Wave_Begin_Onetime_Effect=!0},find_voice_use:function(voice_type){for(var idx=0;idx<this.m_use_voice_type.length;idx++)if(this.m_use_voice_type[idx]==voice_type)return!0;return!1},delete_voice_use:function(voice_type){for(var is_delete=!1,idx=0;idx<this.m_use_voice_type.length;idx++)if(this.m_use_voice_type[idx]==voice_type){this.m_use_voice_type.splice(idx,1),is_delete=!0;break}return is_delete},set_Start_Skill_DeltaTime:function(IsStart){this.m_Is_Move_Skill_DeltaTime=IsStart},getFocusState:function(){return this.m_focus_state},use_skill_hp_rate:function(){var max_hp=this.getMaxHealthPoint(),hp_rate=this.m_life_point/max_hp;if(hp_rate<=.75&&!this.m_use_skill_hp_rate_75){for(var idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++){var action=MasterManager.getInstance().get_ActionImplementation(this.m_battle_general.trans_passive_skill[idx].trans_passive.action_id);if(this.m_battle_general.trans_passive_skill[idx].trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate_Onetime)for(var jdx=0;jdx<this.m_battle_general.trans_passive_skill[idx].onetime_effects.length;jdx++)if(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].our_enemy==database.BattleSelfOther.Self){if(action.me_other_type==database.BattleSelfOther.Self||0==this.m_battle_general.trans_passive_skill[idx].trans_passive.action_id){var active_skill_charge_count=0;if(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_1?active_skill_charge_count=1:this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_2?active_skill_charge_count=2:this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_3&&(active_skill_charge_count=3),this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Cooldown_chain_rabbit)||this.IsDurabilityEffect(database.BattleEffectTrans.Motion_Singing)||this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Charge)||this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Charge_koi));else for(var pbx=0;pbx<this.m_battle_general.active_skill.length;pbx++)this.m_battle_general.active_skill[pbx].skill_charge_count+=active_skill_charge_count,this.m_battle_general.active_skill[pbx].skill_charge_count>=MAX_SKILL_CHARGE_BUFF&&(this.m_battle_general.active_skill[pbx].skill_charge_count=MAX_SKILL_CHARGE_BUFF,this.m_battle_general.active_skill[pbx].cooltime=0);this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans!=database.BattleEffectTrans.Active_Skill_Force_Charge_1&&this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans!=database.BattleEffectTrans.Active_Skill_Force_Charge_2&&this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans!=database.BattleEffectTrans.Active_Skill_Force_Charge_3&&this.addOnetimeEffect(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx],this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans)}else if(action.me_other_type==database.BattleSelfOther.Other){this.m_Tick_skill_targets=[],this.m_Tick_skill_targets=this.m_my_team.findOurTarget(this,action.target_count,action.priority_position),this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].input_ability_type==database.BattleInputAbility.Caster_Life?this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].damage=this.getCurrentLifePoint():this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].input_ability_type==database.BattleInputAbility.Caster_Max_Life&&(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].damage=this.getMaxHealthPoint());for(var tdx=0;tdx<this.m_Tick_skill_targets.length;tdx++)this.m_Tick_skill_targets[tdx].addOnetimeEffect(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx])}}else if(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].our_enemy==database.BattleSelfOther.Other){this.m_Tick_skill_targets=[],null!=this._findEnemyTarget&&(this.m_Tick_skill_targets=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position));for(tdx=0;tdx<this.m_Tick_skill_targets.length;tdx++)this.m_Tick_skill_targets[tdx].addOnetimeEffect(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx])}if(this.m_battle_general.trans_passive_skill[idx].trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Below_Life_75_Per_Rate_Onetime)for(jdx=0;jdx<this.m_battle_general.trans_passive_skill[idx].durability_effects.length;jdx++)if(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx].our_enemy==database.BattleSelfOther.Self){if(action.me_other_type==database.BattleSelfOther.Self||0==this.m_battle_general.trans_passive_skill[idx].trans_passive.action_id)this.addDurabilityEffect(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx],this);else if(action.me_other_type==database.BattleSelfOther.Other){this.m_Tick_skill_targets=[],this.m_Tick_skill_targets=this.m_my_team.findOurTarget(this,action.target_count,action.priority_position);for(tdx=0;tdx<this.m_Tick_skill_targets.length;tdx++)this.m_Tick_skill_targets[tdx].addDurabilityEffect(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx],this)}}else if(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx].our_enemy==database.BattleSelfOther.Other){this.m_Tick_skill_targets=[],null!=this._findEnemyTarget&&(this.m_Tick_skill_targets=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position));for(tdx=0;tdx<this.m_Tick_skill_targets.length;tdx++)this.m_Tick_skill_targets[tdx].addDurabilityEffect(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx],this)}}this.m_Tick_skill_targets=[],this.m_use_skill_hp_rate_75=!0}if(hp_rate<=.5&&!this.m_use_skill_hp_rate_50){for(idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++){action=MasterManager.getInstance().get_ActionImplementation(this.m_battle_general.trans_passive_skill[idx].trans_passive.action_id);if(this.m_battle_general.trans_passive_skill[idx].trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate_Onetime)for(jdx=0;jdx<this.m_battle_general.trans_passive_skill[idx].onetime_effects.length;jdx++)if(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].our_enemy==database.BattleSelfOther.Self){if(action.me_other_type==database.BattleSelfOther.Self||0==this.m_battle_general.trans_passive_skill[idx].trans_passive.action_id){active_skill_charge_count=0;if(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_1?active_skill_charge_count=1:this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_2?active_skill_charge_count=2:this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_3&&(active_skill_charge_count=3),this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Cooldown_chain_rabbit)||this.IsDurabilityEffect(database.BattleEffectTrans.Motion_Singing)||this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Charge)||this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Charge_koi));else for(pbx=0;pbx<this.m_battle_general.active_skill.length;pbx++)this.m_battle_general.active_skill[pbx].skill_charge_count+=active_skill_charge_count,this.m_battle_general.active_skill[pbx].skill_charge_count>=MAX_SKILL_CHARGE_BUFF&&(this.m_battle_general.active_skill[pbx].skill_charge_count=MAX_SKILL_CHARGE_BUFF,this.m_battle_general.active_skill[pbx].cooltime=0);this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans!=database.BattleEffectTrans.Active_Skill_Force_Charge_1&&this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans!=database.BattleEffectTrans.Active_Skill_Force_Charge_2&&this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans!=database.BattleEffectTrans.Active_Skill_Force_Charge_3&&this.addOnetimeEffect(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx],this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans)}else if(action.me_other_type==database.BattleSelfOther.Other){this.m_Tick_skill_targets=[],this.m_Tick_skill_targets=this.m_my_team.findOurTarget(this,action.target_count,action.priority_position),this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].input_ability_type==database.BattleInputAbility.Caster_Life?this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].damage=this.getCurrentLifePoint():this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].input_ability_type==database.BattleInputAbility.Caster_Max_Life&&(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].damage=this.getMaxHealthPoint());for(tdx=0;tdx<this.m_Tick_skill_targets.length;tdx++)this.m_Tick_skill_targets[tdx].addOnetimeEffect(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx])}}else if(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].our_enemy==database.BattleSelfOther.Other){this.m_Tick_skill_targets=[],null!=this._findEnemyTarget&&(this.m_Tick_skill_targets=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position));for(tdx=0;tdx<this.m_Tick_skill_targets.length;tdx++)this.m_Tick_skill_targets[tdx].addOnetimeEffect(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx])}if(this.m_battle_general.trans_passive_skill[idx].trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Below_Life_50_Per_Rate_Onetime)for(jdx=0;jdx<this.m_battle_general.trans_passive_skill[idx].durability_effects.length;jdx++)if(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx].our_enemy==database.BattleSelfOther.Self){if(action.me_other_type==database.BattleSelfOther.Self||0==this.m_battle_general.trans_passive_skill[idx].trans_passive.action_id)this.addDurabilityEffect(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx],this);else if(action.me_other_type==database.BattleSelfOther.Other){this.m_Tick_skill_targets=[],this.m_Tick_skill_targets=this.m_my_team.findOurTarget(this,action.target_count,action.priority_position);for(tdx=0;tdx<this.m_Tick_skill_targets.length;tdx++)this.m_Tick_skill_targets[tdx].addDurabilityEffect(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx],this)}}else if(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx].our_enemy==database.BattleSelfOther.Other){this.m_Tick_skill_targets=[],null!=this._findEnemyTarget&&(this.m_Tick_skill_targets=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position));for(tdx=0;tdx<this.m_Tick_skill_targets.length;tdx++)this.m_Tick_skill_targets[tdx].addDurabilityEffect(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx],this)}}this.m_Tick_skill_targets=[],this.m_use_skill_hp_rate_50=!0}if(hp_rate<=.25&&!this.m_use_skill_hp_rate_25){for(idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++){action=MasterManager.getInstance().get_ActionImplementation(this.m_battle_general.trans_passive_skill[idx].trans_passive.action_id);if(this.m_battle_general.trans_passive_skill[idx].trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Below_Life_25_Per_Rate_Onetime)for(jdx=0;jdx<this.m_battle_general.trans_passive_skill[idx].onetime_effects.length;jdx++)if(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].our_enemy==database.BattleSelfOther.Self){if(action.me_other_type==database.BattleSelfOther.Self||0==this.m_battle_general.trans_passive_skill[idx].trans_passive.action_id){active_skill_charge_count=0;if(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_1?active_skill_charge_count=1:this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_2?active_skill_charge_count=2:this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans==database.BattleEffectTrans.Active_Skill_Force_Charge_3&&(active_skill_charge_count=3),this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Cooldown_chain_rabbit)||this.IsDurabilityEffect(database.BattleEffectTrans.Motion_Singing)||this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Charge)||this.IsDurabilityEffect(database.BattleEffectTrans.Stop_Skill_Charge_koi));else for(pbx=0;pbx<this.m_battle_general.active_skill.length;pbx++)this.m_battle_general.active_skill[pbx].skill_charge_count+=active_skill_charge_count,this.m_battle_general.active_skill[pbx].skill_charge_count>=MAX_SKILL_CHARGE_BUFF&&(this.m_battle_general.active_skill[pbx].skill_charge_count=MAX_SKILL_CHARGE_BUFF,this.m_battle_general.active_skill[pbx].cooltime=0);this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans!=database.BattleEffectTrans.Active_Skill_Force_Charge_1&&this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans!=database.BattleEffectTrans.Active_Skill_Force_Charge_2&&this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans!=database.BattleEffectTrans.Active_Skill_Force_Charge_3&&this.addOnetimeEffect(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx],this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].stat_trans)}else if(action.me_other_type==database.BattleSelfOther.Other){this.m_Tick_skill_targets=[],this.m_Tick_skill_targets=this.m_my_team.findOurTarget(this,action.target_count,action.priority_position),this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].input_ability_type==database.BattleInputAbility.Caster_Life?this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].damage=this.getCurrentLifePoint():this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].input_ability_type==database.BattleInputAbility.Caster_Max_Life&&(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].damage=this.getMaxHealthPoint());for(tdx=0;tdx<this.m_Tick_skill_targets.length;tdx++)this.m_Tick_skill_targets[tdx].addOnetimeEffect(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx])}}else if(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx].our_enemy==database.BattleSelfOther.Other){this.m_Tick_skill_targets=[],null!=this._findEnemyTarget&&(this.m_Tick_skill_targets=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position));for(tdx=0;tdx<this.m_Tick_skill_targets.length;tdx++)this.m_Tick_skill_targets[tdx].addOnetimeEffect(this.m_battle_general.trans_passive_skill[idx].onetime_effects[jdx])}if(this.m_battle_general.trans_passive_skill[idx].trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Below_Life_25_Per_Rate_Onetime)for(jdx=0;jdx<this.m_battle_general.trans_passive_skill[idx].durability_effects.length;jdx++)if(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx].our_enemy==database.BattleSelfOther.Self){if(action.me_other_type==database.BattleSelfOther.Self||0==this.m_battle_general.trans_passive_skill[idx].trans_passive.action_id)this.addDurabilityEffect(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx],this);else if(action.me_other_type==database.BattleSelfOther.Other){this.m_Tick_skill_targets=[],this.m_Tick_skill_targets=this.m_my_team.findOurTarget(this,action.target_count,action.priority_position);for(tdx=0;tdx<this.m_Tick_skill_targets.length;tdx++)this.m_Tick_skill_targets[tdx].addDurabilityEffect(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx],this)}}else if(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx].our_enemy==database.BattleSelfOther.Other){this.m_Tick_skill_targets=[],null!=this._findEnemyTarget&&(this.m_Tick_skill_targets=this._findEnemyTarget.findEnemyTarget(this,action.target_count,action.priority_position));for(tdx=0;tdx<this.m_Tick_skill_targets.length;tdx++)this.m_Tick_skill_targets[tdx].addDurabilityEffect(this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx],this)}}this.m_Tick_skill_targets=[],this.m_use_skill_hp_rate_25=!0}},reasumeDureffect:function(){for(var idx=0;idx<this.m_durability_effects.length;idx++)this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Stun&&this.m_durability_effects[idx].trans_type!=database.BattleEffectTrans.Not_Resist_Stun||(this.setGeneralState(BattleGeneral_GeneralState.Stun),this.playAction(ActionType.Stun))},checkinsertdurabilityeffect:function(attacker,deffecer,dur,action_id,isinsert){if(deffecer.checkTransInvinsiblity(dur.trans_type))return!1;if(deffecer.findTransType(database.BattleEffectTrans.Golden_Invincibility))return!1;if(0!=dur.element_type&&dur.element_type!=deffecer.getGeneral().general.element_type)return!1;if(0!=dur.arm_service_type&&dur.arm_service_type!=deffecer.getGeneral().general.arm_service_type)return!1;if(0!=dur.fight_type&&dur.fight_type!=deffecer.getGeneral().general.fight_type)return!1;var rand=parseInt(100*Math.random()+1),trans_resist_value=0,deffecer_general_resistance=deffecer.getGeneral().resistance;if(null!=deffecer_general_resistance&&null!=deffecer_general_resistance)for(var idx=0;idx<deffecer_general_resistance.length;idx++)deffecer_general_resistance[idx].trans_type==dur.trans_type&&(trans_resist_value+=deffecer_general_resistance[idx].resist_value);if(trans_resist_value+=deffecer.m_my_team.getLeaderSkillTransResistBufPoint(dur.trans_type,this.m_battle_general),trans_resist_value+=deffecer.m_my_team.getSpecialLeaderSkillTransResistBufPoint(dur.trans_type,this.m_battle_general),trans_resist_value+=deffecer.m_my_team.getFriendLeaderSkillTransResistBufPoint(dur.trans_type,this.m_battle_general),trans_resist_value+=deffecer.getEventDungeonGnrlTransResistBuf(dur.trans_type),trans_resist_value+=deffecer.durabilityBufResistPoint(dur.trans_type),rand<=dur.percent-trans_resist_value)if(0==action_id)dur.our_enemy==database.BattleSelfOther.Self?attacker.addDurabilityEffect(dur,attacker):deffecer.addDurabilityEffect(dur,attacker),!0;else{var target_list=[],action=MasterManager.getInstance().get_ActionImplementation(action_id);dur.our_enemy==database.BattleSelfOther.Other?target_list=attacker._findEnemyTarget.findEnemyTarget(attacker,action.target_count,action.priority_position):dur.our_enemy==database.BattleSelfOther.Self&&(target_list=attacker.getMyTeam().findOurTarget(attacker,action.target_count,action.priority_position));for(var t_idx=0;t_idx<target_list.length;t_idx++)target_list[t_idx].addDurabilityEffect(dur,this),!0}return!0},checkTransInvinsiblity:function(trans){var not_resist_trans_type=0;switch(trans){case database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate:not_resist_trans_type=database.BattleEffectTrans.After_Recv_Damage_Inc_Rate;break;case database.BattleEffectTrans.Not_Resist_Freeze:not_resist_trans_type=database.BattleEffectTrans.Freeze;break;case database.BattleEffectTrans.Not_Resist_Damage_Reduce:not_resist_trans_type=database.BattleEffectTrans.Damage_Reduce;break;case database.BattleEffectTrans.Not_Resist_Stun:not_resist_trans_type=database.BattleEffectTrans.Stun;break;case database.BattleEffectTrans.Not_Resist_Poison:not_resist_trans_type=database.BattleEffectTrans.Poison;break;case database.BattleEffectTrans.Not_Resist_Silence:not_resist_trans_type=database.BattleEffectTrans.Silence;break;case database.BattleEffectTrans.Not_Resist_Wound:not_resist_trans_type=database.BattleEffectTrans.Wound_Obstruct_Heal;break;case database.BattleEffectTrans.Not_Resist_Blind:not_resist_trans_type=database.BattleEffectTrans.Blind_Darkness}for(var idx=0;idx<this.m_durability_effects.length;idx++){if((dur=$.extend({},this.m_durability_effects[idx])).trans_type==database.BattleEffectTrans.Trans_Invincibility_Mode){if(dur.durability.resist_trans_type==database.BattleEffectTrans.None)return!0;if(dur.durability.resist_trans_type==trans)return!0;if(0!=not_resist_trans_type&&dur.durability.resist_trans_type==not_resist_trans_type)return!0}}for(idx=0;idx<this.m_battle_general.trans_passive_skill.length;idx++)for(var jdx=0;jdx<this.m_battle_general.trans_passive_skill[idx].durability_effects.length;jdx++){var dur;if((dur=$.extend({},this.m_battle_general.trans_passive_skill[idx].durability_effects[jdx])).trans_type==database.BattleEffectTrans.Trans_Invincibility_Mode){if(dur.durability.resist_trans_type==database.BattleEffectTrans.None)return!0;if(dur.durability.resist_trans_type==trans)return!0;if(0!=not_resist_trans_type&&dur.durability.resist_trans_type==not_resist_trans_type)return!0}}return!1},DamageDispersion:function(base,damage_point,damage_type,log){for(var damagePoint=damage_point,self_position=this.getBattlePosition(),dispersion_target=[],team_members=this.m_my_team.getTeamMembers(),sort_data=[],i=0;i<team_members.size();i++){var mem=team_members[i];if(mem.IsAlive()){var sd={};sd.is_alive=mem.IsAlive(),sd.position=mem.getBattlePosition(),sd.life_point=mem.getCurrentLifePoint(),sd.max_life_point=mem.getMaxHealthPoint(),sd.attk_point=mem.getAttackPoint(),sd.def_point=mem.getDefencePoint(),sd.gnrl_id=mem.getGeneral().general.gnrl_id,sort_data.push_back(sd)}}var temp_list=[],add_pos=function(list,pos){-1==list.findIndex(function(obj){return obj==pos})&&list.push_back(pos)};self_position==db.BattlePosition.Head?(add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2)):self_position==db.BattlePosition.Body_1?(add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2)):self_position==db.BattlePosition.Body_2?(add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Tail_2),add_pos(temp_list,db.BattlePosition.Tail_1)):self_position==db.BattlePosition.Tail_1?(add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Tail_1),add_pos(temp_list,db.BattlePosition.Tail_2)):self_position==db.BattlePosition.Tail_2&&(add_pos(temp_list,db.BattlePosition.Body_2),add_pos(temp_list,db.BattlePosition.Head),add_pos(temp_list,db.BattlePosition.Body_1),add_pos(temp_list,db.BattlePosition.Tail_2),add_pos(temp_list,db.BattlePosition.Tail_1));for(var p_idx=0;p_idx<temp_list.length;p_idx++){for(var found_idx_is=!1,found_push=[],p_jdx=0;p_jdx<team_members.length;p_jdx++){var gnrl_mem=team_members[p_jdx];gnrl_mem.getBattlePosition()==temp_list[p_idx]&&gnrl_mem.IsAlive()&&(found_idx_is=!0,p_jdx,found_push.push(p_jdx))}if(1==found_idx_is)for(var p_jdx2=0;p_jdx2<found_push.length;p_jdx2++)dispersion_target.push(team_members[found_push[p_jdx2]])}for(var idx=0;idx<dispersion_target.length;idx++)if(dispersion_target[idx]!=this)for(var jdx=0;jdx<dispersion_target[idx].m_durability_effects.length;jdx++){var caster_dur=$.extend({},dispersion_target[idx].m_durability_effects[jdx]);if(caster_dur.trans_type==database.BattleEffectTrans.Damage_Dispersion){if(1==caster_dur.is_end)continue;for(var effect=new database.BattleDurabilityEffect,tdx=0;tdx<this.m_durability_effects.length;tdx++){var dur=$.extend({},this.m_durability_effects[tdx]);dur.trans_type==database.BattleEffectTrans.Our_Team_Damage_Dec&&dur.gnrl_id==dispersion_target[idx].m_battle_general.gnrl_id&&dur.is_friend_effect==dispersion_target[idx].IsFriend()&&(effect=dur),dur=null}if(effect.gnrl_id==dispersion_target[idx].getGeneralID()&&effect.is_friend_effect==dispersion_target[idx].IsFriend()){var dispersion_damage;if(damagePoint-=damagePoint*effect.value/100,damagePoint-=dispersion_damage=damagePoint*caster_dur.value/100,!dispersion_target[idx].IsFreezeCheck()){if(dispersion_target[idx].selfLifeDown(dispersion_damage),null!=dispersion_target[idx]._cbEventListenerFieldMng){var evt=new battle.Event;evt.floatValue=dispersion_damage,evt.dataValue1=dispersion_target[idx],evt.intValue=damage_type,dispersion_target[idx]._cbEventListenerFieldMng.EventListenerFromGeneral(EventCode.EVT_FIELD_MNG_DAMAGE_SHOW,evt)}var log_disper=new DamageLog;(log_disper=$.extend({},log))._def_name=dispersion_target[idx].getGeneral().general.name,log_disper._damage_type=damage_type,log_disper._shared_point=100,log_disper._cur_life=dispersion_target[idx].getCurrentLifePoint(),log_disper._damage=dispersion_damage,log_disper._origin_damage=damagePoint,log_disper._trans=database.BattleEffectTrans.Damage_Dispersion,dispersion_target[idx].addDamageLogDebug(log_disper)}}effect=null}caster_dur=null}return damagePoint},durability_effects_parsing:function(dur_effect){var dur_parsing=$.extend({},dur_effect);return null!=dur_parsing.effect_id&&null!=dur_parsing.effect_id||(dur_parsing.effect_id=0),null!=dur_parsing.gnrl_id&&null!=dur_parsing.gnrl_id||(dur_parsing.gnrl_id=0),null!=dur_parsing.is_friend_effect&&null!=dur_parsing.is_friend_effect||(dur_parsing.is_friend_effect=!1),null!=dur_parsing.exec_time&&null!=dur_parsing.exec_time||(dur_parsing.exec_time=0),null!=dur_parsing.up_down&&null!=dur_parsing.up_down||(dur_parsing.up_down=database.BattleUpDown.Up),null!=dur_parsing.our_enemy&&null!=dur_parsing.our_enemy||(dur_parsing.our_enemy=database.BattleSelfOther.Self),null!=dur_parsing.trans_type&&null!=dur_parsing.trans_type||(dur_parsing.trans_type=database.BattleEffectTrans.Stun),null!=dur_parsing.arm_service_type&&null!=dur_parsing.arm_service_type||(dur_parsing.arm_service_type=0),null!=dur_parsing.element_type&&null!=dur_parsing.element_type||(dur_parsing.element_type=0),null!=dur_parsing.fight_type&&null!=dur_parsing.fight_type||(dur_parsing.fight_type=0),null!=dur_parsing.resist_trans_type&&null!=dur_parsing.resist_trans_type||(dur_parsing.resist_trans_type=database.BattleEffectTrans.None),null!=dur_parsing.value&&null!=dur_parsing.value||(dur_parsing.value=0),null!=dur_parsing.percent&&null!=dur_parsing.percent||(dur_parsing.percent=0),null!=dur_parsing.duration&&null!=dur_parsing.duration||(dur_parsing.duration=0),null!=dur_parsing.tick&&null!=dur_parsing.tick||(dur_parsing.tick=0),null!=dur_parsing.delta_duration&&null!=dur_parsing.delta_duration||(dur_parsing.delta_duration=0),null!=dur_parsing.delta_tick&&null!=dur_parsing.delta_tick||(dur_parsing.delta_tick=0),null!=dur_parsing.damage&&null!=dur_parsing.damage||(dur_parsing.damage=0),null!=dur_parsing.end_effects&&null!=dur_parsing.end_effects||(dur_parsing.end_effects=[]),null!=dur_parsing.tick_effects&&null!=dur_parsing.tick_effects||(dur_parsing.tick_effects=[]),null!=dur_parsing.icon_name&&null!=dur_parsing.icon_name||(dur_parsing.icon_name=""),null!=dur_parsing.is_invalid&&null!=dur_parsing.is_invalid||(dur_parsing.is_invalid=!1),null!=dur_parsing.invoke_type&&null!=dur_parsing.invoke_type||(dur_parsing.invoke_type=0),null!=dur_parsing.action_id&&null!=dur_parsing.action_id||(dur_parsing.action_id=0),null!=dur_parsing.action&&null!=dur_parsing.action||(dur_parsing.action.action_id=0,dur_parsing.action.range_style=database.BattleRangeStyle.Close_Range,dur_parsing.action.our_enemy=database.BattleSelfOther.Self,dur_parsing.action.self_other=database.BattleSelfOther.Self,dur_parsing.action.target_count=0,dur_parsing.action.hit_count=0,dur_parsing.action.priority_position=0,dur_parsing.action.damages=[],dur_parsing.action.hit_sound="",dur_parsing.action.action_sound="",dur_parsing.action.enemy_action_sound=""),null!=dur_parsing.is_clear&&null!=dur_parsing.is_clear||(dur_parsing.is_clear=!1),null!=dur_parsing.is_end&&null!=dur_parsing.is_end||(dur_parsing.is_end=!1),null!=dur_parsing.life_shield&&null!=dur_parsing.life_shield||(dur_parsing.life_shield=0),null!=dur_parsing.use_count&&null!=dur_parsing.use_count||(dur_parsing.use_count=0),null!=dur_parsing.durability&&null!=dur_parsing.durability||(dur_parsing.durability={}),dur_parsing},CheckAllMemberDmgIncForTrans:function(invoke_type,trans,PassiveTarget){var point_res=0,dur_type=[];switch(trans){case database.BattleEffectTrans.Our_Enermy_General_Trans_Type_Stun_Dmg_Inc_Rate:case database.BattleEffectTrans.Enermy_General_Trans_Type_Stun_Attack_Inc:dur_type.push_back(database.BattleEffectTrans.Stun),dur_type.push_back(database.BattleEffectTrans.Not_Resist_Stun);break;case database.BattleEffectTrans.Our_Enermy_General_Trans_Type_Freeze_Dmg_Inc_Rate:case database.BattleEffectTrans.Enermy_General_Trans_Type_Freeze_Attack_Inc:dur_type.push_back(database.BattleEffectTrans.Freeze),dur_type.push_back(database.BattleEffectTrans.Not_Resist_Freeze);break;case database.BattleEffectTrans.Our_Enermy_General_Trans_Type_Poison_Dmg_Inc_Rate:case database.BattleEffectTrans.Enermy_General_Trans_Type_Poison_Attack_Inc:dur_type.push_back(database.BattleEffectTrans.Poison),dur_type.push_back(database.BattleEffectTrans.Not_Resist_Poison),dur_type.push_back(database.BattleEffectTrans.New_Poison_Dmg_Rate);break;case database.BattleEffectTrans.Our_Enermy_General_Trans_Type_Silence_Dmg_Inc_Rate:case database.BattleEffectTrans.Enermy_General_Trans_Type_Silence_Attack_Inc:dur_type.push_back(database.BattleEffectTrans.Silence),dur_type.push_back(database.BattleEffectTrans.Not_Resist_Silence);break;case database.BattleEffectTrans.Our_Enermy_General_Trans_Type_Burning_Dmg_Inc_Rate:case database.BattleEffectTrans.Enermy_General_Trans_Type_Burning_Attack_Inc:dur_type.push_back(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate),dur_type.push_back(database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate);break;case database.BattleEffectTrans.Our_Enermy_General_Trans_Type_Elec_Shork_Dmg_Inc_Rate:case database.BattleEffectTrans.Enermy_General_Trans_Type_Elec_Attack_Inc:dur_type.push_back(database.BattleEffectTrans.Damage_Reduce),dur_type.push_back(database.BattleEffectTrans.Not_Resist_Damage_Reduce);break;case database.BattleEffectTrans.Our_Enermy_General_Trans_Type_Wounds_Dmg_Inc_Rate:case database.BattleEffectTrans.Enermy_General_Trans_Type_Wound_Attack_Inc:dur_type.push_back(database.BattleEffectTrans.Wound_Obstruct_Heal),dur_type.push_back(database.BattleEffectTrans.Not_Resist_Wound);break;case database.BattleEffectTrans.Our_Enermy_General_Trans_Type_Blind_Darkness_Dmg_Inc_Rate:case database.BattleEffectTrans.Enermy_General_Trans_Type_Blind_Attack_Inc:dur_type.push_back(database.BattleEffectTrans.Blind_Darkness),dur_type.push_back(database.BattleEffectTrans.Not_Resist_Blind)}if(dur_type.empty())return 0;var oneTime_effect_find=this.getTransPassiveSkillOneTimeEffectFind(invoke_type,trans);if(oneTime_effect_find.find_one){var oneTime_effect=oneTime_effect_find.one,TargetTeam_GeneralList=this.m_my_team.getTargetTeam().getTeamMembers(),Target_Trans_Cnt=0;if(PassiveTarget==BattlePassiveType.Passive_Target_Type_Enemy_Team_member||PassiveTarget==BattlePassiveType.Passive_Target_Type_All_Member)for(var idx=0;idx<TargetTeam_GeneralList.length;idx++){for(var Enermy_General=TargetTeam_GeneralList[idx],jdx=0;jdx<Enermy_General.m_durability_effects.length;jdx++)for(var tdx=0;tdx<dur_type.length;tdx++)dur_type[tdx]==Enermy_General.m_durability_effects[jdx].trans_type&&++Target_Trans_Cnt;Enermy_General=null}if(PassiveTarget==BattlePassiveType.Passive_Target_Type_Our_Team_Member||PassiveTarget==BattlePassiveType.Passive_Target_Type_All_Member){var OurTeam_GeneralList=this.m_my_team.getTeamMembers();for(idx=0;idx<OurTeam_GeneralList.length;idx++){var Our_General=OurTeam_GeneralList[idx];for(jdx=0;jdx<Our_General.m_durability_effects.length;jdx++)for(tdx=0;tdx<dur_type.length;tdx++)dur_type[tdx]==Our_General.m_durability_effects[jdx].trans_type&&++Target_Trans_Cnt;Our_General=null}}if(0<Target_Trans_Cnt&&oneTime_effect.input_ability_type==database.BattleInputAbility.Attack&&oneTime_effect.output_ability_type==database.BattleOutputAbility.Damage){var min_value=oneTime_effect.onetime_effect.value,max_value=Math.max(oneTime_effect.onetime_effect.value,oneTime_effect.onetime_effect.max_value),effect_value=Math.random()*(max_value-min_value)+min_value;point_res+=this.m_battle_general.attk/100*(effect_value*Target_Trans_Cnt)}}return point_res},RandomTransDurCheck:function(dur){var dur_type=[],dur_duraion=[],trans_type_rand=0;if(dur.trans_type==database.BattleEffectTrans.All_Random_Trans){switch(trans_type_rand=parseInt(8*Math.random())+1){case 1:dur.trans_type=database.BattleEffectTrans.Stun,dur_type.push_back(database.BattleEffectTrans.Stun),dur_duraion.push_back(dur.duration);break;case 2:dur.trans_type=database.BattleEffectTrans.Freeze,dur_type.push_back(database.BattleEffectTrans.Freeze),dur_duraion.push_back(dur.duration);break;case 3:dur.trans_type=database.BattleEffectTrans.New_Poison_Dmg_Rate,dur_type.push_back(database.BattleEffectTrans.New_Poison_Dmg_Rate),dur_duraion.push_back(dur.duration);break;case 4:dur.trans_type=database.BattleEffectTrans.After_Recv_Damage_Inc_Rate,dur_type.push_back(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate),dur_duraion.push_back(dur.duration);break;case 5:dur.trans_type=database.BattleEffectTrans.Damage_Reduce,dur_type.push_back(database.BattleEffectTrans.Damage_Reduce),dur_duraion.push_back(dur.duration);break;case 6:dur.trans_type=database.BattleEffectTrans.Wound_Obstruct_Heal,dur_type.push_back(database.BattleEffectTrans.Wound_Obstruct_Heal),dur_duraion.push_back(dur.duration);break;case 7:dur.trans_type=database.BattleEffectTrans.Blind_Darkness,dur_type.push_back(database.BattleEffectTrans.Blind_Darkness),dur_duraion.push_back(dur.duration);break;case 8:dur.trans_type=database.BattleEffectTrans.Silence,dur_type.push_back(database.BattleEffectTrans.Silence),dur_duraion.push_back(dur.duration)}trans_type_rand=0}else dur.trans_type==database.BattleEffectTrans.Random_Trans_Slience_Bilnd_Poison_Time_15_15_15_Sec?(trans_type_rand=Math.floor(3*Math.random()),dur_type.push_back(database.BattleEffectTrans.Silence),dur_duraion.push_back(15),dur_type.push_back(database.BattleEffectTrans.Blind_Darkness),dur_duraion.push_back(15),dur_type.push_back(database.BattleEffectTrans.New_Poison_Dmg_Rate),dur_duraion.push_back(15)):dur.trans_type==database.BattleEffectTrans.Random_Trans_Stun_Silence_Time_15_15_Sec?(trans_type_rand=Math.floor(2*Math.random()),dur_type.push_back(database.BattleEffectTrans.Stun),dur_duraion.push_back(15),dur_type.push_back(database.BattleEffectTrans.Silence),dur_duraion.push_back(15)):dur.trans_type==database.BattleEffectTrans.Random_Trans_Stun_Silence_Poison_Time_10_10_18_Sec?(trans_type_rand=Math.floor(3*Math.random()),dur_type.push_back(database.BattleEffectTrans.Stun),dur_duraion.push_back(10),dur_type.push_back(database.BattleEffectTrans.Silence),dur_duraion.push_back(10),dur_type.push_back(database.BattleEffectTrans.New_Poison_Dmg_Rate),dur_duraion.push_back(18)):dur.trans_type==database.BattleEffectTrans.Random_Trans_Stun_Silence_Poison_Time_13_13_18_Sec?(trans_type_rand=Math.floor(3*Math.random()),dur_type.push_back(database.BattleEffectTrans.Stun),dur_duraion.push_back(13),dur_type.push_back(database.BattleEffectTrans.Silence),dur_duraion.push_back(13),dur_type.push_back(database.BattleEffectTrans.New_Poison_Dmg_Rate),dur_duraion.push_back(18)):dur.trans_type==database.BattleEffectTrans.Random_Trans_Stun_Burn_Time_16_20_Sec?(trans_type_rand=Math.floor(2*Math.random()),dur_type.push_back(database.BattleEffectTrans.Stun),dur_duraion.push_back(16),dur_type.push_back(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate),dur_duraion.push_back(20)):dur.trans_type==database.BattleEffectTrans.Random_Trans_Stun_Burn_Time_15_15_Sec?(trans_type_rand=Math.floor(2*Math.random()),dur_type.push_back(database.BattleEffectTrans.Stun),dur_duraion.push_back(15),dur_type.push_back(database.BattleEffectTrans.After_Recv_Damage_Inc_Rate),dur_duraion.push_back(15)):dur.trans_type==database.BattleEffectTrans.Random_Trans_Elec_Silence_Time_12_12_Sec?(trans_type_rand=Math.floor(2*Math.random()),dur_type.push_back(database.BattleEffectTrans.Damage_Reduce),dur_duraion.push_back(12),dur_type.push_back(database.BattleEffectTrans.Silence),dur_duraion.push_back(12)):dur.trans_type==database.BattleEffectTrans.Random_Trans_Elec_Silence_Time_15_15_Sec?(trans_type_rand=Math.floor(2*Math.random()),dur_type.push_back(database.BattleEffectTrans.Damage_Reduce),dur_duraion.push_back(15),dur_type.push_back(database.BattleEffectTrans.Silence),dur_duraion.push_back(15)):dur.trans_type==database.BattleEffectTrans.Random_Trans_Stun_Freeze_Silence_Time_10_10_10_Sec?(trans_type_rand=Math.floor(3*Math.random()),dur_type.push_back(database.BattleEffectTrans.Stun),dur_duraion.push_back(10),dur_type.push_back(database.BattleEffectTrans.Freeze),dur_duraion.push_back(10),dur_type.push_back(database.BattleEffectTrans.Silence),dur_duraion.push_back(10)):dur.trans_type==database.BattleEffectTrans.Random_Trans_Stun_Freeze_Silence_Time_15_15_15_Sec?(trans_type_rand=Math.floor(3*Math.random()),dur_type.push_back(database.BattleEffectTrans.Stun),dur_duraion.push_back(15),dur_type.push_back(database.BattleEffectTrans.Freeze),dur_duraion.push_back(15),dur_type.push_back(database.BattleEffectTrans.Silence),dur_duraion.push_back(15)):dur.trans_type==database.BattleEffectTrans.Random_Trans_Silence_Blind_Time_10_10_Sec?(trans_type_rand=Math.floor(2*Math.random()),dur_type.push_back(database.BattleEffectTrans.Silence),dur_duraion.push_back(10),dur_type.push_back(database.BattleEffectTrans.Blind_Darkness),dur_duraion.push_back(10)):dur.trans_type==database.BattleEffectTrans.Random_Trans_Wound_Blind_Time_15_15_Sec?(trans_type_rand=Math.floor(2*Math.random()),dur_type.push_back(database.BattleEffectTrans.Wound_Obstruct_Heal),dur_duraion.push_back(15),dur_type.push_back(database.BattleEffectTrans.Blind_Darkness),dur_duraion.push_back(15)):dur.trans_type==database.BattleEffectTrans.Random_Trans_Wound_Blind_Time_18_18_Sec?(trans_type_rand=Math.floor(2*Math.random()),dur_type.push_back(database.BattleEffectTrans.Wound_Obstruct_Heal),dur_duraion.push_back(18),dur_type.push_back(database.BattleEffectTrans.Blind_Darkness),dur_duraion.push_back(18)):dur.trans_type==database.BattleEffectTrans.Random_Trans_Stun_Silence_Time_10_10_Sec?(trans_type_rand=Math.floor(2*Math.random()),dur_type.push_back(database.BattleEffectTrans.Stun),dur_duraion.push_back(10),dur_type.push_back(database.BattleEffectTrans.Silence),dur_duraion.push_back(10)):dur.trans_type==database.BattleEffectTrans.Random_Trans_Stat_Up&&(trans_type_rand=Math.floor(5*Math.random()),dur_type.push_back(database.BattleEffectTrans.Damage_Increased),dur_duraion.push_back(dur.durability.duration_time),dur_type.push_back(database.BattleEffectTrans.Defence_Point_Rate_Inc),dur_duraion.push_back(dur.durability.duration_time),dur_type.push_back(database.BattleEffectTrans.Attack_Speed_Inc),dur_duraion.push_back(dur.durability.duration_time),dur_type.push_back(database.BattleEffectTrans.Critical_Percent_Rate_Inc),dur_duraion.push_back(dur.durability.duration_time),dur_type.push_back(database.BattleEffectTrans.Critical_Power_Rate_inc),dur_duraion.push_back(dur.durability.duration_time));if(0!=dur_type.size()&&0!=dur_duraion.size())switch(dur_type.size()<trans_type_rand||dur_duraion.size()<trans_type_rand||(dur.trans_type==database.BattleEffectTrans.Random_Trans_Stat_Up&&(dur_type[trans_type_rand]!=database.BattleEffectTrans.Attack_Speed_Inc&&dur_type[trans_type_rand]!=database.BattleEffectTrans.Critical_Percent_Rate_Inc&&dur_type[trans_type_rand]!=database.BattleEffectTrans.Critical_Power_Rate_inc||(dur.durability.value=100*dur.durability.value,dur.value=100*dur.value)),dur.trans_type=dur_type[trans_type_rand],dur.duration=dur_duraion[trans_type_rand]),dur.trans_type){case database.BattleEffectTrans.Stun:dur.value=0,dur.end_effects=[],dur.tick=0,dur.tick_effects=[];break;case database.BattleEffectTrans.Freeze:dur.value=0,dur.tick=0,dur.tick_effects=[];break;case database.BattleEffectTrans.New_Poison_Dmg_Rate:dur.value=0,dur.end_effects=[],dur.duration+=1;break;case database.BattleEffectTrans.After_Recv_Damage_Inc_Rate:dur.value=3e3,dur.end_effects=[],dur.tick=0,dur.tick_effects=[];break;case database.BattleEffectTrans.Damage_Reduce:dur.value=50,dur.end_effects=[],dur.tick=0,dur.tick_effects=[];break;case database.BattleEffectTrans.Wound_Obstruct_Heal:case database.BattleEffectTrans.Blind_Darkness:dur.value=100,dur.end_effects=[],dur.tick=0,dur.tick_effects=[];break;case database.BattleEffectTrans.Silence:dur.value=0,dur.end_effects=[],dur.tick=0,dur.tick_effects=[]}},CheckBaseSkillToTargetDead:function(base,target,damage){if(damage.damage_type==database.DamageType.Critical){for(var idx=0;idx<base.getGeneral().trans_passive_skill.length;idx++){var p=base.getGeneral().trans_passive_skill[idx];if(damage.attack_type==Hit_Attack_Type.ATTACK_1||damage.attack_type==Hit_Attack_Type.ATTACK_2||damage.attack_type==Hit_Attack_Type.ATTACK_3)if(p.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_All_Attk_Critical||p.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Normal_Attk_Critical)for(var jdx=0;jdx<p.onetime_effects.length;jdx++){if((o=p.onetime_effects[jdx]).input_ability_type==database.BattleInputAbility.Skill_CoolTime_Dec&&o.output_ability_type==database.BattleOutputAbility.Cooltime)if(0==p.trans_passive.action_id)base.addOnetimeEffect(o);else{var target_list=[];(action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id)).enemy_me_type==database.BattleSelfOther.Other?null!=base._findEnemyTarget&&(target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):action.enemy_me_type==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(var tdx=0;tdx<target_list.length;tdx++)target_list[tdx].IsAlive()&&target_list[tdx].addOnetimeEffect(o)}else if(o.input_ability_type==database.BattleInputAbility.Fixed_Value&&o.output_ability_type==database.BattleOutputAbility.Life)if(0==p.trans_passive.action_id)base.addOnetimeEffect(o);else{target_list=[];(action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id)).enemy_me_type==database.BattleSelfOther.Other?null!=base._findEnemyTarget&&(target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):action.enemy_me_type==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(tdx=0;tdx<target_list.length;tdx++)31==action.priority_position?target_list[tdx]!=base&&target_list[tdx].addOnetimeEffect(o):target_list[tdx].addOnetimeEffect(o)}else if((o.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Rate_Dec||o.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Dec)&&o.output_ability_type==database.BattleOutputAbility.Cooltime)if(0==p.trans_passive.action_id)base.addOnetimeEffect(o);else{target_list=[];(action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id)).enemy_me_type==database.BattleSelfOther.Other?null!=base._findEnemyTarget&&(target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):action.enemy_me_type==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(tdx=0;tdx<target_list.length;tdx++)31==action.priority_position?target_list[tdx]!=base&&target_list[tdx].addOnetimeEffect(o):target_list[tdx].addOnetimeEffect(o)}}else if(p.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_All_Attk_Critical||p.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_Normal_Attk_Critical)for(var ddx=0;ddx<p.durability_effects.length;ddx++){if((dur=p.durability_effects[ddx]).trans_type==database.BattleEffectTrans.Stun||dur.trans_type==database.BattleEffectTrans.Silence||dur.trans_type==database.BattleEffectTrans.Poison||dur.trans_type==database.BattleEffectTrans.After_Recv_Damage_Inc_Rate||dur.trans_type==database.BattleEffectTrans.Damage_Reduce||dur.trans_type==database.BattleEffectTrans.New_Poison_Dmg_Rate||dur.trans_type==database.BattleEffectTrans.Wound_Obstruct_Heal||dur.trans_type==database.BattleEffectTrans.Blind_Darkness||dur.trans_type==database.BattleEffectTrans.Freeze||dur.trans_type==database.BattleEffectTrans.Not_Resist_Stun||dur.trans_type==database.BattleEffectTrans.Not_Resist_Silence||dur.trans_type==database.BattleEffectTrans.Not_Resist_Poison||dur.trans_type==database.BattleEffectTrans.Not_Resist_After_Recv_Damage_Inc_Rate||dur.trans_type==database.BattleEffectTrans.Not_Resist_Damage_Reduce||dur.trans_type==database.BattleEffectTrans.Not_Resist_Wound||dur.trans_type==database.BattleEffectTrans.Not_Resist_Blind||dur.trans_type==database.BattleEffectTrans.Not_Resist_Freeze){if(this.checkTransInvinsiblity(dur.trans_type))continue;if(this.findTransType(database.BattleEffectTrans.Golden_Invincibility))continue}var rand=parseInt(100*Math.random())+1;if(dur.percent>=rand)if(0==p.trans_passive.action_id)dur.our_enemy==database.BattleSelfOther.Other?target.IsAlive()&&target.addDurabilityEffect(dur,base):dur.our_enemy==database.BattleSelfOther.Self&&base.addDurabilityEffect(dur,base);else{target_list=[];var action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id);dur.our_enemy==database.BattleSelfOther.Other?null!=base._findEnemyTarget&&(target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):dur.our_enemy==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(tdx=0;tdx<target_list.length;tdx++)target_list[tdx].IsAlive()&&target_list[tdx].addDurabilityEffect(dur,this)}}if(damage.attack_type==Hit_Attack_Type.SKILL&&(p.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_All_Attk_Critical||p.trans_passive.invoke_type1==database.BattleInvokeType.BattleInvokeType_Skill_Attk_Critical)){for(jdx=0;jdx<p.onetime_effects.length;jdx++){if((o=p.onetime_effects[jdx]).input_ability_type==database.BattleInputAbility.Skill_CoolTime_Dec&&o.output_ability_type==database.BattleOutputAbility.Cooltime)if(0==p.trans_passive.action_id)base.addOnetimeEffect(o);else{target_list=[];(action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id)).enemy_me_type==database.BattleSelfOther.Other?null!=base._findEnemyTarget&&(target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):action.enemy_me_type==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(tdx=0;tdx<target_list.length;tdx++)target_list[tdx].IsAlive()&&target_list[tdx].addOnetimeEffect(o)}else if(o.input_ability_type==database.BattleInputAbility.Fixed_Value&&o.output_ability_type==database.BattleOutputAbility.Life)if(0==p.trans_passive.action_id)base.addOnetimeEffect(o);else{target_list=[];(action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id)).enemy_me_type==database.BattleSelfOther.Other?null!=base._findEnemyTarget&&(target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):action.enemy_me_type==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(tdx=0;tdx<target_list.length;tdx++)31==action.priority_position?target_list[tdx]!=base&&target_list[tdx].IsAlive()&&target_list[tdx].addOnetimeEffect(o):target_list[tdx].IsAlive()&&target_list[tdx].addOnetimeEffect(o)}else if((o.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Rate_Dec||o.input_ability_type==database.BattleInputAbility.Skill_CoolTime_Dec)&&o.output_ability_type==database.BattleOutputAbility.Cooltime)if(0==p.trans_passive.action_id)base.addOnetimeEffect(o);else{target_list=[];(action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id)).enemy_me_type==database.BattleSelfOther.Other?null!=base._findEnemyTarget&&(target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):action.enemy_me_type==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(tdx=0;tdx<target_list.length;tdx++)31==action.priority_position?target_list[tdx]!=base&&target_list[tdx].IsAlive()&&target_list[tdx].addOnetimeEffect(o):target_list[tdx].IsAlive()&&target_list[tdx].addOnetimeEffect(o)}}for(ddx=0;ddx<p.durability_effects.length;ddx++){if((dur=p.durability_effects[ddx]).trans_type==database.BattleEffectTrans.ActiveSkill_Damage_Inc){target_list=[],action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id);dur.our_enemy==database.BattleSelfOther.Other?null!=base._findEnemyTarget&&(target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):dur.our_enemy==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(tdx=0;tdx<target_list.length;tdx++)target_list[tdx].IsAlive()&&target_list[tdx].addDurabilityEffect(dur,base)}else if(dur.trans_type==database.BattleEffectTrans.Glitter_Beach_Stack_ActiveSkill_Damage_Inc){target_list=[],action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id);dur.our_enemy==database.BattleSelfOther.Other?null!=base._findEnemyTarget&&(target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):dur.our_enemy==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));var stack=0;1<this.m_battle_general.general.gnrl_class&&(stack=this.m_battle_general.one_start_stack);var v=dur.value*stack;dur.value=v;for(tdx=0;tdx<target_list.length;tdx++)target_list[tdx].IsAlive()&&target_list[tdx].addDurabilityEffect(dur,base)}else if(dur.trans_type==database.BattleEffectTrans.Timer_Passed_Stack_Up_Skill_Attk_Inc){target_list=[],action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id);dur.our_enemy==database.BattleSelfOther.Other?null!=base._findEnemyTarget&&(target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):dur.our_enemy==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));stack=0;1<this.m_battle_general.general.gnrl_class&&(stack=this.m_battle_general.one_start_stack);v=dur.value*stack;dur.value=v;for(tdx=0;tdx<target_list.length;tdx++)target_list[tdx].IsAlive()&&target_list[tdx].addDurabilityEffect(dur,base)}}}}var gnrl=base.getGeneral(),one_list=[];base.m_my_team.getSpecialLeaderSkillOneTimeEffects(database.BattleInvokeType.BattleInvokeType_All_Attk_Critical,gnrl,one_list);for(var o_list_idx=0;o_list_idx<one_list.length;o_list_idx++){var o=one_list[o_list_idx];base.addOnetimeEffect(o)}}for(idx=0;idx<target.m_battle_general.trans_passive_skill.length;idx++){var passive=target.m_battle_general.trans_passive_skill[idx];if(passive.trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_All_Hitted)for(jdx=0;jdx<passive.durability_effects.length;jdx++){var dur=passive.durability_effects[jdx];if(0==passive.trans_passive.action_id)dur.our_enemy==database.BattleSelfOther.Self?target.IsAlive()&&target.addDurabilityEffect(dur,base):dur.our_enemy==database.BattleSelfOther.Other&&base.addDurabilityEffect(dur,base);else{target_list=[],action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id);dur.our_enemy==database.BattleSelfOther.Other?null!=base._findEnemyTarget&&(target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):dur.our_enemy==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(tdx=0;tdx<target_list.length;tdx++)target_list[tdx].IsAlive()&&target_list[tdx].addDurabilityEffect(dur,this)}}}for(idx=0;idx<base.getGeneral().trans_passive_skill.length;idx++){if((p=base.getGeneral().trans_passive_skill[idx]).trans_passive.invoke_type2==database.BattleInvokeType.BattleInvokeType_All_Attacks)for(jdx=0;jdx<p.durability_effects.length;jdx++){dur=p.durability_effects[jdx],rand=parseInt(100*Math.random())+1;if(dur.percent>=rand)if(0==p.trans_passive.action_id)dur.our_enemy==database.BattleSelfOther.Other?target.IsAlive()&&target.addDurabilityEffect(dur,base):dur.our_enemy==database.BattleSelfOther.Self&&base.addDurabilityEffect(dur,base);else{target_list=[],action=MasterManager.getInstance().get_ActionImplementation(p.trans_passive.action_id);dur.our_enemy==database.BattleSelfOther.Other?null!=base._findEnemyTarget&&(target_list=base._findEnemyTarget.findEnemyTarget(base,action.target_count,action.priority_position)):dur.our_enemy==database.BattleSelfOther.Self&&(target_list=base.getMyTeam().findOurTarget(base,action.target_count,action.priority_position));for(tdx=0;tdx<target_list.length;tdx++)target_list[tdx].IsAlive()&&target_list[tdx].addDurabilityEffect(dur,this)}}}}});